{"version":3,"sources":["components/WidthContainer/index.js","components/SpinnerContainer/index.js","components/AppMain/index.js","Translation.ts","components/Field/components/FieldMessage.tsx","components/Field/index.tsx","components/Form/validate.ts","components/Form/index.tsx","components/Auth/AuthService.js","api/index.js","components/Auth/component/WithAuth.js","Configurations/index.js","pages/ParserPage.tsx","components/FormWrapp/index.js","pages/LoginPage.tsx","pages/SignUpPage.tsx","components/Content/index.js","components/Editor/components/EditorHeading/index.js","components/Editor/components/textMessage/index.js","components/Slider/index.js","components/Editor/components/BasicPartContainer/index.js","components/Editor/components/RemoveIcon/index.js","components/Editor/components/InputGroup/index.js","components/Editor/components/BasicField/index.js","components/Editor/components/ControlContainer/index.js","components/Editor/components/RangeContainer/index.js","components/Editor/components/RangeLabel/index.js","components/Editor/components/ColorPickerContainer/index.js","components/Editor/BasicPart.js","components/Editor/components/QuestionNumber/index.js","components/Editor/components/AnswerContainer/index.js","components/Editor/components/AnswerNumber/index.js","components/Editor/components/ToggleContainer/index.js","components/Editor/components/Toggler/index.js","components/Editor/components/AnswersHeader/index.js","components/Editor/components/RemoveQuestionButton/index.js","components/Editor/QuestionPart.js","components/Editor/FinalTeaser.js","shared/Quiz/src/components/QuizTitle/index.js","shared/Quiz/src/components/QuizHeader/index.js","shared/Quiz/src/components/Pagination/index.js","shared/Quiz/src/components/QuizWrap/index.js","shared/Quiz/src/components/Result/index.js","shared/Quiz/src/components/ImageBlock/index.js","shared/Quiz/src/Translation.js","shared/Quiz/src/ResultPage.js","shared/Quiz/src/components/ButtonStart/index.js","shared/Quiz/src/StartPage.js","shared/Quiz/src/components/QuestionsCont/index.js","shared/Quiz/src/components/Question/index.js","shared/Quiz/src/components/Dot/index.js","shared/Quiz/src/components/Variant/index.js","shared/Quiz/src/components/ButtonNext/index.js","shared/Quiz/src/QuestionsPage.js","shared/Quiz/src/index.js","components/Editor/components/AddQuestionButton/index.js","components/CodeModal/components/CodeButton/index.js","components/CodeGeneration/IconsContainer/index.js","components/CodeGeneration/Wrapper/index.js","components/CodeGeneration/index.js","components/NavLink/index.js","components/CodeModal/index.js","components/StylesSelect/StyleContainer/index.js","components/StylesSelect/StyleSelectContainer/index.js","components/StylesSelect/ColorPickerContainer/index.js","components/StylesSelect/StyleTitle/index.js","components/StylesSelect/StyleChoose/index.js","components/StylesSelect/ListStyles/index.js","components/StylesSelect/AllStyles/index.js","pages/EditorPage.tsx","Configurations/code.js","components/ParserResultsTable/ConfirmDelete/index.js","components/ParserResultsPagination/index.js","pages/ParsedPages.tsx","components/Menu/index.js","components/Nav/index.js","components/Logo/index.js","App.js","index.js"],"names":["Container","styled","div","_templateObject","SpinnerContainer","SpinnerContainer_templateObject","AppMain","main","AppMain_templateObject","languageTable","en","signIn","signUp","start","errorTitle","result","correct","all","concat","editorHeading","basicPartTitle","basicPartTeaser","basicPartTeaserPlaceholder","errors","LOGIN_TOO_SHORT","PASSWORD_ERROR","PASSWORD_AS_EMAIL","IN_USE","PASSWORD_NOT_SAME","IS_EMPTY","MAX_CHARACTERS","INCORRECT","SITE_URL_ERROR","PARS_ERROR","NAME_TOO_SHORT","ru","withTranslations","withProps","_ref","_ref$lang","lang","T","getErrorByCode","code","FieldMessage","error","helpMessage","validMessage","react","Messages","fieldName","label","placeholder","fieldProps","textFieldProps","disabled","validate","submitted","validationType","validOnType","react_default","a","createElement","form_Field","Object","assign","defaultValue","name","isRequired","_ref2","meta","Fragment","field_text","isLabelHidden","shouldFitContainer","maxLength","undefined","objectSpread","components_FieldMessage","valid","formParams","getSubmitted","value","match","regex","values","getValues","password","length","email","password_confirmation","siteUrl","state","_this2","this","_this$props","props","fields","formName","onSubmit","authError","parsError","registerError","form_Form","formProps","FormHeader","title","toUpperCase","SectionMessage","appearance","FormSection","map","components_Field","submitting","key","FormFooter","Button","type","isLoading","React","AuthService","toRegister","_callee","response","regenerator_default","wrap","_context","prev","next","axios","method","url","credentails","headers","Accept","Content-Type","data","sent","status","_this","setToken","token","setName","abrupt","t0","Error","stop","logIn","_callee2","_ref3","_context2","userToken","localStorage","setItem","userName","getToken","getItem","getName","loggedIn","logout","removeItem","getProfile","Auth","sendURL","asyncToGenerator","mark","Authorization","_x","apply","arguments","getData","id","pause","message","_x2","time","Promise","res","rej","setTimeout","deleteResult","_callee3","_context3","statusText","_x3","fetchParserResults","_ref4","_callee4","_context4","_x4","withAuth","AuthComponent","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","authorized","user","componentWillMount","profile","setState","err","history","replace","inherits","createClass","Component","style","colorsObj","stylesObj","makeStyles","obj","keys","abstr","abs","makeArray","StyleButton","s","forEach","i","push","configureAll","object","border","borderRadius","StyleConf","colors","styles","Text","ParserPage_templateObject","FormWrapp","_templateObject2","SiteUrlFields","_useState","useState","_useState2","slicedToArray","submiting","setSubmiting","_useState3","_useState4","setError","components_AppMain","WidthContainer","components_Form","formData","then","objStyles","objColors","StylesParserProps","temp","color","val","t","h","makePropsStyles","sessionStorage","JSON","stringify","catch","components_SpinnerContainer","Spinner","size","FormWrapp_templateObject","SignInFields","LoginPage","components_FormWrapp","singUp","SignUpPage","Content","Content_templateObject","ContentRight","Content_templateObject2","EditorHeading","h3","EditorHeading_templateObject","TextMessage","textMessage_templateObject","SlideWrapp","Slider_templateObject","SlideItem","Slider_templateObject2","height","borderBottom","SlideHeading","_templateObject3","background","Slider","_ref5","children","isToggleContent","ToggleContent","isToggleStyles","toggleStyles","onClick","item","BasicPartContainer","BasicPartContainer_templateObject","RemoveIcon","RemoveIcon_templateObject","RemoveIconAnswer","RemoveIcon_templateObject2","InputGroup","InputGroup_templateObject","BasicField","Textfield","BasicField_templateObject","ContentControl","ControlContainer_templateObject","RangeContainer","RangeContainer_templateObject","RangeLabel","p","RangeLabel_templateObject","ColorPickerContainer","ColorPickerContainer_templateObject","teaserImage","onChangeHandle","removeTitle","removeTeaserImage","simplePalette","teaserBackground","changeBackgroundTeaser","setOpacityBackgroundTeaser","teaserImageValid","components_BasicPartContainer","components_InputGroup","htmlFor","components_BasicField","onChange","components_RemoveIcon","close_default","isInvalid","ControlContainer","components_ColorPickerContainer","components_RangeLabel","color_picker","palette","checkMarkColor","selectedColor","newColor","components_RangeContainer","FieldRange","opacity","min","max","step","QuestionNumber","QuestionNumber_templateObject","AnswerContainer","AnswerContainer_templateObject","AnswerNumber","AnswerNumber_templateObject","ToggleConteainer","ToggleContainer_templateObject","ToggleInput","input","Toggler_templateObject","ToggleLabel","Toggler_templateObject2","AnswersHeader","AnswersHeader_templateObject","RemoveQuestionButton","button","RemoveQuestionButton_templateObject","QuestionPart","questionItem","questionItemsLength","itemIndex","changeQuestion","removeQuestion","changeImage","removeImage","changeAnswers","removeAnswers","selectRightAnswer","removeQuestionItem","components_RemoveQuestionButton","components_QuestionNumber","question","event","components_AnswersHeader","answers","answer","components_AnswerContainer","components_AnswerNumber","indexRightAnswer","ToggleContainer","checked","image","imageValid","FinalTeaser","finalTeaserImage","finalTeaserBackground","setOpacityFinalBackgroundTeaser","changeFinalBackgroundTeaser","removeFinalTeaserImage","finalTeaserImageValid","QuizTitle","h4","QuizTitle_templateObject","fontSize","fontFamily","fontWeight","lineHeight","QuizHeader","QuizHeader_templateObject","_ref$background","PaginationItem","Pagination_templateObject","Pagination","Pagination_templateObject2","QuizWrap","QuizWrap_templateObject","_ref$border","_ref2$borderRadius","Result","Result_templateObject","normal","_ref6","ImageBlock","ImageBlock_templateObject","countRightAnswer","questionItems","handleOnPageStart","handleOnPage","options","block","header","transformColor","resultBackground","questions","components_QuizWrap","components_QuizTitle","components_QuizHeader","resultOpacity","components_ImageBlock","src","resultImage","alt","components_Result","className","index","ButtonStart","ButtonStart_templateObject","_ref7","hover","_ref8","_ref9","StartPage","preview","handleStartQuestion","handleOnPageResult","startBackground","startOpacity","startImage","components_ButtonStart","QuestionCont","QuestionsCont_templateObject","Question","Question_templateObject","StyledDotContainer","Dot_templateObject","Dot","Dot_templateObject2","DotContainer","VariantItems","ul","Variant_templateObject","Variant","li","Variant_templateObject2","answerBorder","ButtonNext","ButtonNext_templateObject","Next","ButtonNext_templateObject2","QuestionsPage","selectedQuestionIndex","rightAnswer","wrongAnswer","handleSelectAnswer","handleChangeQuiz","paragraph","QuestionsCont","components_Question","components_Dot","components_Variant","components_ButtonNext","Quiz","base","htmlProps","window","funlib","isEmbed","setOptions","_this$state","src_QuestionsPage","src_ResultPage","src_StartPage","AddQuestionButton","AddQuestionButton_templateObject","CodeButton","CodeButton_templateObject","IconsContainer","IconsContainer_templateObject","Wrapper","Wrapper_templateObject","CodeGenerator","_React$useState","_React$useState2","copySuccess","setCopySuccess","textAreaRef","CodeGeneration_IconsContainer","CodeGeneration_Wrapper","e","current","select","document","execCommand","target","focus","copy_default","primaryColor","TextArea","readOnly","ref","NavLink","Link","NavLink_templateObject","CodeModal_templateObject","CodeModal_templateObject2","CodeModal","isOpen","open","close","isDisabled","actions","text","CodeModal_Container","components_CodeButton","CodeModal_Text","components_NavLink","to","ModalTransition","ModalWrapper","onClose","heading","CodeGeneration","PureComponent","StyleContainer","StyleContainer_templateObject","SelectContainer","StyleSelectContainer_templateObject","StylesSelect_ColorPickerContainer_templateObject","TitleContainer","StyleTitle_templateObject","RowDiv","StyleChoose_templateObject","StyleChoose","setColor","setStyle","SelectedColor","setSelectedColor","StylesSelect_StyleContainer","StyleTitle","StylesSelect_ColorPickerContainer","StyleSelectContainer","Select","ListStyles","StylesSelect_StyleChoose","AllStylesContainer","AllStyles_templateObject","AllStyles","Items","StylesSelect_ListStyles","itemValid","codeModalDisabled","configuredStyles","configuredColors","backgroundColor","textDecoration","parse","setParsData","confStyles","confColors","_this$setState","defineProperty","validateImage","_this$setState2","toConsumableArray","find","validateQuestionItem","activateCodeModal","questionID","answerID","addNewQuestion","newItemID","newItems","filter","imageUrl","selectValue","exp","components_EditorHeading","textMessage","info_default","components_Slider","Editor_BasicPart","TransitionGroup","CSSTransition","timeout","classNames","Editor_QuestionPart","components_AddQuestionButton","add_circle_default","Editor_FinalTeaser","StylesSelect_AllStyles","components_CodeModal","location","origin","ConfirmDelete","itemId","deleteItem","cancelDeleting","PaginationContainer","ParserResultsPagination_templateObject","ParserResultPagination","pagination","selectPage","pages","from","last_page","v","k","components_Pagination","selectedIndex","current_page","page","StyledTh","th","ParsedPages_templateObject","StyledTd","td","ParsedPages_templateObject2","items","results","parsed_at","recomendation","deleteСonfirm","getParserResult","setParserResults","console","log","deleteConfirmation","DropdownMenu","trigger","triggerType","shouldFlip","position","DropdownItemGroup","DropdownItem","ParserResultsTable_ConfirmDelete","ParserResultsPagination","LoginBtn","Menu_templateObject","SignUpBtn","Menu_templateObject2","Linkwrapp","Menu_templateObject3","withRouter","StyledNav","nav","Nav_templateObject","Logo","Logo_templateObject","Header","App_templateObject","HeaderContainer","App_templateObject2","Wrapp","App_templateObject3","App","react_router_dom","components_Logo","components_Nav","components_Menu","react_router","path","exact","component","ParserPage","EditorPage","ParsedPages","ReactDOM","render","src_App","getElementById"],"mappings":"sXAEA,IAKeA,EALGC,UAAOC,IAAVC,yICAf,IAKeC,EALUH,UAAOC,IAAVG,uGCAtB,IAGeC,EAHCL,UAAOM,KAAVC,oHCgFAC,EAAgB,CAC3BC,GAnD+B,CAC/BC,OAAQ,UACRC,OAAQ,UACRC,MAAO,QACPC,WAAY,SACZC,OAAQ,SAACC,EAASC,GAAV,SAAAC,OAAqBF,EAArB,YAAAE,OAAuCD,IAC/CE,cAAe,mEACfC,eAAgB,SAChBC,gBAAiB,UACjBC,2BAA4B,YAC5BC,OAAQ,CACNC,gBAAiB,6BACjBC,eAAgB,0FAChBC,kBAAmB,qCACnBC,OAAQ,2CACRC,kBAAmB,yBACnBC,SAAU,6BACVC,eAAgB,6DAChBC,UAAW,iEACXC,eAAgB,oCAChBC,WAAY,8CACZC,eAAgB,mBA+BlBC,GA3B+B,CAC/BxB,OAAQ,iCACRC,OAAQ,+GACRC,MAAO,iCACPC,WAAY,wCACZC,OAAQ,SAACC,EAASC,GAAV,SAAAC,OAAqBF,EAArB,kBAAAE,OAAmCD,IAC3CE,cAAe,8VACfC,eAAgB,0DAChBC,gBAAiB,qGACjBC,2BAA4B,2GAC5BC,OAAQ,CACNC,gBAAiB,kUACjBC,eAAgB,8cAChBC,kBAAmB,qQACnBC,OAAQ,6RACRC,kBAAmB,mQACnBC,SAAU,qIACVC,eAAgB,oTAChBC,UAAW,8aACXC,eAAgB,kKAChBC,WAAY,uQACZC,eAAgB,qHASPE,EAAmBC,YAAoB,SAAAC,GAAA,IAAAC,EAAAD,EAAEE,YAAF,IAAAD,EAAS,KAATA,EAAA,MAAoB,CACtEE,EAAGhC,EAAc+B,GACjBE,eAAgB,SAACC,GAAD,OAAkBlC,EAAc+B,GAAMjB,OAAOoB,kCC9DhDC,EAbM,SAAAN,GAAA,IAAEO,EAAFP,EAAEO,MAAOC,EAATR,EAASQ,YAAaC,EAAtBT,EAAsBS,aAAtB,OACrBC,EAAA,cAAAA,EAAA,eACIH,IAAUE,GACVC,EAAA,cAACC,EAAA,EAAD,KAAgBH,GAEjBD,GACCG,EAAA,cAACC,EAAA,EAAD,KAAeJ,GAEhBE,GACCC,EAAA,cAACC,EAAA,EAAD,KAAeF,KCiDJX,IAhDD,SAAAE,GAamB,IAZ/BY,EAY+BZ,EAZ/BY,UACAC,EAW+Bb,EAX/Ba,MACAC,EAU+Bd,EAV/Bc,YACAC,EAS+Bf,EAT/Be,WACAC,EAQ+BhB,EAR/BgB,eACAZ,EAO+BJ,EAP/BI,eACAK,EAM+BT,EAN/BS,aACAQ,EAK+BjB,EAL/BiB,SACAT,EAI+BR,EAJ/BQ,YACAU,EAG+BlB,EAH/BkB,SACAC,EAE+BnB,EAF/BmB,UACAC,EAC+BpB,EAD/BoB,eACAC,EAA+BrB,EAA/BqB,YACA,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACEC,aAAa,GACbC,KAAMjB,EACNM,SAAUA,EACVY,YAAY,EACZjB,MAAOA,GACHE,GAEH,SAAAgB,GAAA,IAAEhB,EAAFgB,EAAEhB,WAAYR,EAAdwB,EAAcxB,MAAOyB,EAArBD,EAAqBC,KAArB,OACCV,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACEX,EAAAC,EAAAC,cAACU,EAAA,EAADR,OAAAC,OAAA,CACEb,YAAaA,EACbG,SAAUA,EACVkB,eAAa,EACbC,oBAAkB,EAClBC,UAAyB,UAAdzB,GAAuC,QAAdA,GAAqC,SAAdA,EAAuB,MAAsB,aAAdA,GAA0C,0BAAdA,EAAwC,UAAO0B,GALvKZ,OAAAa,EAAA,EAAAb,CAAA,GAMUV,EAAmBD,KAE7BO,EAAAC,EAAAC,cAACgB,EAAD,CACEjC,MAAOH,GAAkBA,EAAeG,GACxCC,YAAaA,EACbC,aACEW,IACCC,GAAeF,IAChBa,EAAKS,OAAShC,SCjDfS,EAAW,SACtBH,EACA2B,EACAC,GAHsB,OAInB,SAACC,GACJ,IAAMC,EAAQD,EAAMC,MAAM9B,EAAW+B,OAC/BC,EAASL,EAAWM,YAEpB7B,EAAYwB,IAElB,GAAI5B,EAAWM,aAAgBF,EAG/B,OAAQJ,EAAWK,gBACjB,IAAK,WACH,OAAI2B,EAAOE,SAASC,OAAS,EAAU,WACnCH,EAAOE,SAASC,OAAS,GAAW,iBACpCH,EAAOE,WAAaF,EAAOI,MAAc,oBACrBN,OAAQP,EAAY,iBAG9C,IAAK,QACH,OAAIS,EAAOI,MAAMD,OAAS,EAAU,WAChCH,EAAOI,MAAMD,OAAS,IAAY,iBAChBL,GAASE,EAAOI,MAAMD,OAAS,OAAIZ,EAAY,kBAGvE,IAAK,wBACH,OAAIS,EAAOK,sBAAwB,EAAU,WAC7BP,GAASE,EAAOK,wBAA0BL,EAAOE,cAChDX,EAAY,oBAE/B,IAAK,MACH,OAAIS,EAAOM,QAAU,EAAU,WACfR,OAAQP,EAAY,iBAGtC,IAAK,OACH,OAAIS,EAAOlB,KAAO,EAAU,WACZkB,EAAOlB,KAAKqB,QAAU,OAAIZ,EAAY,oBCyC7CxC,+MArEbwD,MAAQ,CACNnC,WAAW,2EAGH,IAAAoC,EAAAC,KAAAC,EACqED,KAAKE,MAA3EvD,EADCsD,EACDtD,EAAGwD,EADFF,EACEE,OAAQC,EADVH,EACUG,SAAUC,EADpBJ,EACoBI,SAAUC,EAD9BL,EAC8BK,UAAWC,EADzCN,EACyCM,UAAWC,EADpDP,EACoDO,cACpD7C,EAAcqC,KAAKF,MAAnBnC,UACFwB,EAAe,kBAAMxB,GAE3B,OACET,EAAA,cAACuD,EAAA,EAAD,CACEJ,SAAUA,GAET,SAACnB,GAAD,OAEChC,EAAA,qBAAUgC,EAAWwB,UACrBxD,EAAA,cAACyD,EAAA,EAAD,CACEC,MAAkB,YAAXR,GAAwBzD,GAAKA,EAAE9B,OAAOgG,eAC5B,YAAXT,GAAwBzD,GAAKA,EAAE7B,OAAO+F,gBAG5B,QAAdP,GACEpD,EAAA,cAAC4D,EAAA,EAAD,CAAgBC,WAAW,QAAQH,MAAOjE,GAAKA,EAAE3B,YAC/CkC,EAAA,uBAAIP,GAAKA,EAAElB,OAAOQ,YAItBsE,GACErD,EAAA,cAAC4D,EAAA,EAAD,CAAgBC,WAAW,QAAQH,MAAOjE,GAAKA,EAAE3B,YAC/CkC,EAAA,uBAAIP,GAAKA,EAAElB,OAAOU,aAItBqE,GACAtD,EAAA,cAAC4D,EAAA,EAAD,CAAgBC,WAAW,QAAQH,MAAOjE,GAAKA,EAAE3B,YAC/CkC,EAAA,uBAAIsD,IAGRtD,EAAA,cAAC8D,EAAA,EAAD,KAEIb,EAAOc,IAAI,SAAA1D,GAAU,OACnBL,EAAA,cAACgE,EAADhD,OAAAC,OAAA,CACEV,SAAUyB,EAAWiC,WACrBC,IAAK7D,EAAWH,UAChBM,SAAUA,EAASH,EAAY2B,EAAYC,IAH7CjB,OAAAa,EAAA,EAAAb,CAAA,GAIUX,EAAewC,EAAKD,YAKpC5C,EAAA,cAACmE,EAAA,EAAD,KACEnE,EAAA,cAACoE,EAAA,EAAD,CACE1C,oBAAkB,EAClB2C,KAAK,SACLC,UAAwB,UAAbpB,GAAwBlB,EAAWiC,WAC9CJ,WAAW,WAEG,YAAbX,GAA0BzD,GAAKA,EAAE9B,OACpB,YAAbuF,GAA0BzD,GAAKA,EAAE7B,OACpB,UAAbsF,GAAwBzD,GAAKA,EAAE5B,kBA5D7B0G,wDCtBEC,mDAEnBC,iDAAa,SAAAC,EAAApF,GAAA,IAAA6B,EAAAsB,EAAAF,EAAAG,EAAAiC,EAAA,OAAAC,EAAA/D,EAAAgE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAQ7D,EAAR7B,EAAQ6B,KAAMsB,EAAdnD,EAAcmD,MAAOF,EAArBjD,EAAqBiD,SAAUG,EAA/BpD,EAA+BoD,sBAA/BoC,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEcC,IAAM,CAC3BC,OAAQ,OACRC,IAAK,gBACLC,YAAa,UACbC,QAAS,CACPC,OAAU,mBACVC,eAAgB,oBAElBC,KAAM,CACJrE,OACAsB,QACAF,WACAG,2BAdK,aAEHiC,EAFGG,EAAAW,MAiBIC,QAAU,KAAOf,EAASe,OAAS,KAjBvC,CAAAZ,EAAAE,KAAA,eAkBPW,EAAKC,SAASjB,EAASa,KAAKA,KAAKK,OACjCF,EAAKG,QAAQnB,EAASa,KAAKA,KAAKrE,MAnBzB2D,EAAAiB,OAAA,SAoBApB,EAASa,KAAKA,KAAKK,OApBnB,OAAAf,EAAAE,KAAA,uBAAAF,EAAAC,KAAA,GAAAD,EAAAkB,GAAAlB,EAAA,SAwBH,IAAImB,MAAMnB,EAAAkB,GAAMrB,SAASe,QAxBtB,yBAAAZ,EAAAoB,SAAAxB,EAAA,6EA4BbyB,4CAAQ,SAAAC,EAAAC,GAAA,IAAA5D,EAAAF,EAAAoC,EAAA,OAAAC,EAAA/D,EAAAgE,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAQvC,EAAR4D,EAAQ5D,MAAOF,EAAf8D,EAAe9D,SAAf+D,EAAAvB,KAAA,EAAAuB,EAAAtB,KAAA,EAEmBC,IAAM,CAC3BC,OAAQ,OACRC,IAAK,SACLC,YAAa,UACbC,QAAS,CACPC,OAAU,mBACVC,eAAgB,oBAElBC,KAAM,CACJ/C,QACAF,cAZA,aAEEoC,EAFF2B,EAAAb,MAeSC,QAAU,KAAOf,EAASe,OAAS,KAf5C,CAAAY,EAAAtB,KAAA,eAgBFW,EAAKC,SAASjB,EAASa,KAAKA,KAAKK,OACjCF,EAAKG,QAAQnB,EAASa,KAAKA,KAAKrE,MAjB9BmF,EAAAP,OAAA,SAkBKpB,EAASa,KAAKA,KAAKK,OAlBxB,OAAAS,EAAAtB,KAAA,uBAAAsB,EAAAvB,KAAA,GAAAuB,EAAAN,GAAAM,EAAA,SAsBE,IAAIL,MAAMK,EAAAN,GAAMrB,SAASe,QAtB3B,yBAAAY,EAAAJ,SAAAE,EAAA,6EA0BRR,SAAW,SAAAW,GACTC,aAAaC,QAAQ,aAAcF,SAGrCT,QAAU,SAACY,GACTF,aAAaC,QAAQ,YAAaC,SAGpCC,SAAW,WACT,OAAOH,aAAaI,QAAQ,oBAG9BC,QAAU,WACR,OAAOL,aAAaI,QAAQ,mBAG9BE,SAAW,WAET,QADcnB,EAAKgB,iBAIrBI,OAAS,WACPP,aAAaQ,WAAW,cACxBR,aAAaQ,WAAW,mBAG1BC,WAAa,WACX,OAAOtB,EAAKkB,YClFVK,EAAO,IAAI1C,EAEJ2C,EAAO,eAAA7H,EAAA0B,OAAAoG,EAAA,EAAApG,CAAA4D,EAAA/D,EAAAwG,KAAG,SAAA3C,EAAOS,GAAP,IAAAU,EAAAlB,EAAA,OAAAC,EAAA/D,EAAAgE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACfa,EAAQqB,EAAKP,WADE7B,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGIC,IAAM,CAC3BC,OAAQ,OACRC,IAAK,gBACLE,QAAS,CACPC,OAAU,mBACVC,eAAgB,mBAChB+B,cAAA,UAAApJ,OAA4B2H,IAE9BL,KAAML,IAXW,cAGbR,EAHaG,EAAAW,KAAAX,EAAAiB,OAAA,SAaZpB,EAASa,MAbG,aAAAV,EAAAC,KAAA,EAAAD,EAAAkB,GAAAlB,EAAA,SAgBb,IAAImB,MAAMnB,EAAAkB,GAAMrB,SAASe,QAhBZ,yBAAAZ,EAAAoB,SAAAxB,EAAA,iBAAH,gBAAA6C,GAAA,OAAAjI,EAAAkI,MAAA1E,KAAA2E,YAAA,GAoBPC,EAAO,eAAArG,EAAAL,OAAAoG,EAAA,EAAApG,CAAA4D,EAAA/D,EAAAwG,KAAG,SAAAjB,EAAOuB,GAAP,IAAA9B,EAAAlB,EAAA,OAAAC,EAAA/D,EAAAgE,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cACfa,EAAQqB,EAAKP,WADEL,EAAAvB,KAAA,EAAAuB,EAAAtB,KAAA,EAGIC,IAAM,CAC3BC,OAAQ,MACRC,IAAG,mBAAAjH,OAAqByJ,GACxBtC,QAAS,CACPiC,cAAA,UAAApJ,OAA4B2H,MAPb,UAUe,aAP5BlB,EAHa2B,EAAAb,MAUND,KAAKA,KAAKE,OAVJ,CAAAY,EAAAtB,KAAA,eAAAsB,EAAAP,OAAA,SAWVpB,EAASa,KAAKA,KAAKzH,QAXT,cAAAuI,EAAAtB,KAAA,GAcX4C,EAAM,GAdK,eAAAtB,EAAAP,OAAA,SAeV2B,EAAQC,IAfE,QAAArB,EAAAtB,KAAA,uBAAAsB,EAAAvB,KAAA,GAAAuB,EAAAN,GAAAM,EAAA,SAmBb,IAAIL,MAAMK,EAAAN,GAAM6B,SAnBH,yBAAAvB,EAAAJ,SAAAE,EAAA,kBAAH,gBAAA0B,GAAA,OAAAzG,EAAAmG,MAAA1E,KAAA2E,YAAA,GAuBdG,EAAQ,SAAAG,GAAI,OAChB,IAAIC,QAAQ,SAACC,EAAKC,GAChBC,WAAW,WACTF,KACQ,IAAPF,MAGQK,EAAY,eAAA/B,EAAArF,OAAAoG,EAAA,EAAApG,CAAA4D,EAAA/D,EAAAwG,KAAG,SAAAgB,EAAOV,GAAP,IAAA9B,EAAA,OAAAjB,EAAA/D,EAAAgE,KAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,cACpBa,EAAQqB,EAAKP,WADO2B,EAAAvD,KAAA,EAAAuD,EAAAtD,KAAA,EAGDC,IAAO,CAC5BC,OAAQ,MACRC,IAAG,iBAAAjH,OAAmByJ,GACtBtC,QAAS,CACPiC,cAAA,UAAApJ,OAA4B2H,MAPR,UAUI,OAVJyC,EAAA7C,KAUX8C,WAVW,CAAAD,EAAAtD,KAAA,eAAAsD,EAAAvC,OAAA,UAWf,GAXe,OAAAuC,EAAAtD,KAAA,sBAAAsD,EAAAvD,KAAA,EAAAuD,EAAAtC,GAAAsC,EAAA,SAclB,IAAIrC,MAAMqC,EAAAtC,GAAM6B,SAdE,yBAAAS,EAAApC,SAAAmC,EAAA,iBAAH,gBAAAG,GAAA,OAAAnC,EAAAmB,MAAA1E,KAAA2E,YAAA,GAkBZgB,EAAkB,eAAAC,EAAA1H,OAAAoG,EAAA,EAAApG,CAAA4D,EAAA/D,EAAAwG,KAAG,SAAAsB,EAAOxD,GAAP,IAAAU,EAAAlB,EAAA,OAAAC,EAAA/D,EAAAgE,KAAA,SAAA+D,GAAA,cAAAA,EAAA7D,KAAA6D,EAAA5D,MAAA,cAC1Ba,EAAQqB,EAAKP,WADaiC,EAAA7D,KAAA,EAAA6D,EAAA5D,KAAA,EAGPC,IAAO,CAC5BC,OAAQ,OACRC,IAAKA,EACLE,QAAS,CACPC,OAAU,mBACVC,eAAgB,mBAChB+B,cAAA,UAAApJ,OAA4B2H,MATF,UAYF,QATtBlB,EAHwBiE,EAAAnD,MAYjB8C,WAZiB,CAAAK,EAAA5D,KAAA,eAAA4D,EAAA7C,OAAA,SAarBpB,EAASa,MAbY,OAAAoD,EAAA5D,KAAA,sBAAA4D,EAAA7D,KAAA,EAAA6D,EAAA5C,GAAA4C,EAAA,SAgBxB,IAAI3C,MAAM2C,EAAA5C,GAAM6B,SAhBQ,yBAAAe,EAAA1C,SAAAyC,EAAA,iBAAH,gBAAAE,GAAA,OAAAH,EAAAlB,MAAA1E,KAAA2E,YAAA,GCtElB,SAASqB,EAASC,GAAe,IACxC7B,EAAO,IAAI1C,EAEjB,gBAAAwE,GAAA,SAAAC,IAAA,IAAAC,EAAAvD,EAAA3E,OAAAmI,EAAA,EAAAnI,CAAA8B,KAAAmG,GAAA,QAAAG,EAAA3B,UAAAjF,OAAA6G,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA9B,UAAA8B,GAAA,OAAA5D,EAAA3E,OAAAwI,EAAA,EAAAxI,CAAA8B,MAAAoG,EAAAlI,OAAAyI,EAAA,EAAAzI,CAAAiI,IAAAS,KAAAlC,MAAA0B,EAAA,CAAApG,MAAA5E,OAAAmL,MAEEzG,MAAQ,CACN+G,YAAY,EACZC,UAAMhI,GAJV+D,EAOEkE,mBAAqB,WACnB,GAAK3C,EAAKJ,WAIR,IACE,IAAMgD,EAAU5C,EAAKD,aACrBtB,EAAKoE,SAAS,CACZJ,YAAY,EACZC,KAAME,IAGV,MAAME,GACJ9C,EAAKH,SACLpB,EAAK3C,MAAMiH,QAAQC,QAAQ,eAZ7BvE,EAAK3C,MAAMiH,QAAQC,QAAQ,WATjCvE,EAAA,OAAA3E,OAAAmJ,EAAA,EAAAnJ,CAAAiI,EAAAD,GAAAhI,OAAAoJ,EAAA,EAAApJ,CAAAiI,EAAA,EAAA/E,IAAA,SAAAhC,MAAA,WA2BI,OAAIY,KAAKF,MAAM+G,WAEX/I,EAAAC,EAAAC,cAACiI,EAAD,CACEkB,QAASnH,KAAKE,MAAMiH,QACpBL,KAAM9G,KAAKF,MAAMgH,OAKd,SApCbX,EAAA,CAAqBoB,aCHvB,IA2BIC,GA3BAC,GAAU,GACVC,GAAU,GAqBd,SAASC,GAAYC,GACnB1J,OAAO2J,KAAKD,GAAK3G,IAAI,SAAA6G,GAAK,OArB5B,SAAmBF,EAAIG,GACrB,GAAU,WAANA,GAAkBH,EAAIG,GAAJ,gBAA+BrI,OAAO,EAG1D,IAAI,IAAI0B,KAFRsG,GAAUK,GAAO,GACjBN,GAAUM,GAAO,GACFH,EAAIG,GACjBN,GAAUM,GAAK3G,GAAO,GACtBsG,GAAUK,GAAK3G,GAAK,QAElB,GAAU,WAAN2G,GAA0D,IAAxCH,EAAIG,GAAJ,gBAA+BrI,OAGzD,IAAI,IAAI0B,KAFRsG,GAAUK,GAAO,GACjBN,GAAUM,GAAO,GACFH,EAAG,EAChBH,GAAUM,GAAK3G,GAAO,GACtBsG,GAAUK,GAAK3G,GAAK,OAER,MAAN2G,GAAmB,WAANA,IACrBL,GAAUK,GAAO,GACjBN,GAAUM,GAAO,IAKjBC,CAAUJ,EAAIE,KAIlB,SAASG,GAAYL,EAAIG,GACvB,IAAI,IAAIxG,KAAQqG,EAAIG,GAClB,IAAIP,MAASI,EAAIG,GAAKxG,GAEpB,GAAY,eAARiG,IAAgC,oBAARA,GAA2B,CACrD,IAAIU,EAAG,GACPN,EAAIG,GAAKxG,GAAMiG,IAAOW,QAAQ,SAAC/I,EAAOgJ,GAEpC,IAAIZ,MAASI,EAAIG,GAAKxG,GAChB6G,EAAER,EAAIG,GAAKxG,GAAMiG,IAAO9H,QAAkB,eAAR8H,IAAgC,oBAARA,KAC5DU,EAAEV,IAASI,EAAIG,GAAKxG,GAAMiG,IAAOY,IAIlCV,GAAS,OAAWnG,GAAM7B,OAAOkI,EAAIG,GAAKxG,GAAMiG,IAAO9H,QACtDgI,GAAS,OAAWnG,GAAM8G,KAAKH,GAEnCA,EAAE,KACFA,EAAE,SAGY,eAATV,IAAmC,oBAAVA,IAChCI,EAAIG,GAAKxG,GAAMiG,IAAOW,QAAQ,SAAC/I,EAAOgJ,GACpC,GAAY,gBAARhJ,EACF,IAAIoI,MAASI,EAAIG,GAAKxG,GACR,eAARiG,IAAgC,oBAARA,IACtBY,EAAER,EAAIG,GAAKxG,GAAMiG,IAAO9H,QAAU+H,GAAS,OAAWlG,GAAM7B,OAAOkI,EAAIG,GAAKxG,GAAMiG,IAAO9H,QAC3F+H,GAAS,OAAWlG,GAAM8G,KAAKjJ,KA0D1C,SAASkJ,GAAaC,GAI7B,OAHAZ,GAAWY,GACXrK,OAAO2J,KAAKU,GAAQtH,IAAI,SAAA8G,GAAG,OAjD3B,SAAmBH,EAAIG,GACrB,GAAW,WAANA,GAAkBH,EAAG,OAAH,gBAAoClI,OAAO,GAAa,MAANqI,GAA0D,IAA7CH,EAAG,OAAH,gBAAoClI,OACtHuI,GAAYL,EAAIG,QAEf,GAAU,MAANA,GAAmB,WAANA,EACpB,IAAI,IAAIP,KAASI,EAAIG,GACnB,GAAY,eAARP,GAAgC,oBAARA,GAAqC,UAARA,EAAkB,CAC3E,IAAIU,EAAG,GACPN,EAAIG,GAAKP,GAAOW,QAAQ,SAAC/I,EAAOgJ,GAE9B,IAAIZ,KAASI,EAAIG,GACL,UAANA,GAAyC,IAAxBL,GAAUK,GAAKrI,QAAsC,SAAxBkI,EAAIG,GAAJ,OAAmB,IACjEL,GAAUK,GAAKM,KAAK,CAACG,OAAS,OAAOC,aAAe,SAG5C,eAARjB,GAAgC,oBAARA,GAAqC,UAARA,GAA2B,UAARA,IACvEY,EAAER,EAAIG,GAAKP,GAAO9H,OACnBwI,EAAEV,GAASI,EAAIG,GAAKP,GAAOY,GACX,mBAARZ,GAA4D,cAAhCI,EAAIG,GAAJ,eAA2BK,IAAoBA,EAAER,EAAIG,GAAJ,WAAuBrI,SAC5GwI,EAAEV,GAAS,UAKZE,GAAUK,GAAKrI,OAAOkI,EAAIG,GAAKP,GAAO9H,QAAUwI,GAAe,mBAARV,GAA4BE,GAAUK,GAAKrI,OAAOkI,EAAIG,GAAJ,WAAuBrI,QAAUwI,KAC7IR,GAAUK,GAAKM,KAAKH,GACpBA,EAAE,KACFA,EAAE,UAOU,eAATV,GAAmC,oBAAVA,GAAuC,UAARA,GAA2B,UAARA,IAClFI,EAAIG,GAAKP,GAAOW,QAAQ,SAAC/I,EAAOgJ,GAC1BA,EAAER,EAAIG,GAAKP,GAAO9H,QAAU+H,GAAUM,GAAKrI,OAAOkI,EAAIG,GAAKP,GAAO9H,QAAgB,UAANqI,GAC9EN,GAAUM,GAAKM,KAAKjJ,KAItB8I,EAAE,MASNQ,CAAUH,EAAOR,KACd,CAAEY,OAAQlB,GAAWmB,OAAQlB,+RC3GpC,IAAMmB,GAAO1O,UAAOC,IAAV0O,MAQJC,GAAY5O,UAAOC,IAAV4O,MAKTC,GAA+B,CACnC,CACE7L,UAAW,MACXE,YAAa,wBACbE,eAAgB,CACd+D,KAAM,QAERhE,WAAY,CACVe,YAAY,GAEdV,eAAgB,MAChBC,aAAa,EACbyB,MAAO,2FAgEI0G,KA5DI,SAAAxJ,GAAqB,IAAnBsK,EAAmBtK,EAAnBsK,KAAMK,EAAa3K,EAAb2K,QAAa+B,EACJC,oBAAS,GADLC,EAAAlL,OAAAmL,EAAA,EAAAnL,CAAAgL,EAAA,GAC/BI,EAD+BF,EAAA,GACpBG,EADoBH,EAAA,GAAAI,EAEZL,qBAFYM,EAAAvL,OAAAmL,EAAA,EAAAnL,CAAAsL,EAAA,GAE/BzM,EAF+B0M,EAAA,GAExBC,EAFwBD,EAAA,GAIhC7F,EAAWkD,GAAc,QAE/B,OACEhJ,EAAAC,EAAAC,cAAC2L,EAAD,KACE7L,EAAAC,EAAAC,cAAC4L,EAAD,KACE9L,EAAAC,EAAAC,cAAC+K,GAAD,KACEjL,EAAAC,EAAAC,cAAC6K,GAAD,KACE/K,EAAAC,EAAAC,cAAA,kBAAU4F,EAAV,gDACA9F,EAAAC,EAAAC,cAAA,4DACAF,EAAAC,EAAAC,cAAA,sCAEFF,EAAAC,EAAAC,cAAC6L,EAAD,CACEzJ,SAAS,QACTD,OAAQ8I,GACR1I,UAAWxD,EACXsD,SAAU,SAACyJ,GACTP,GAAa,GACblF,EAAQyF,GACPC,KAAK,SAAAlI,GACAA,EAASgD,IACXD,EAAQ/C,EAASgD,IAChBkF,KAAK,SAAClI,GACL,GAAIA,EAAU,CACZ0H,GAAa,GAEb,IAAMtO,EAASqN,GAAazG,GACtB3B,EDoDrB,SAAyB8J,EAAUC,GAC1C,IACIlC,EADAmC,EAAoB,GAExB,IAAInC,KAAOiC,EAAU,CACjB,IAAIG,EAAK,GACT,OAAOpC,GACH,IAAK,SACDoC,EAAKvJ,MAAQ,UACjB,MACA,IAAK,SACDuJ,EAAKvJ,MAAQ,SACjB,MACA,IAAK,QACDuJ,EAAKvJ,MAAQ,cACjB,MACA,IAAK,YACDuJ,EAAKvJ,MAAQ,uBAGrBuJ,EAAKC,MAAQ,GACH,SAANrC,GAAsB,MAANA,IACP,WAANA,EACHkC,EAAUlC,GAAKI,QAAQ,SAACkC,EAAKjC,GACzB,IAAIkC,EAAI,CACJjN,MAAO+K,EAAE,EACThJ,MAAOiL,GAED,UAANtC,GAAuB,MAANA,GACjBoC,EAAKC,MAAM/B,KAAKiC,GAEpBA,EAAE,IAEK,MAANvC,GACLkC,EAAUlC,GAAV,OAAyBI,QAAQ,SAACkC,EAAKjC,GACnC,IAAIkC,EAAI,CACJjN,MAAO+K,EAAE,EACThJ,MAAOiL,GAEF,UAANtC,GACCoC,EAAKC,MAAM/B,KAAKiC,GAEpBA,EAAE,IAGVH,EAAK3C,MAAM,GACD,WAANO,GAAwB,MAANA,EAClBiC,EAAUjC,GAAKI,QAAQ,SAACkC,EAAIjC,GACxB,IAAImC,EAAI,CACJlN,MAAO,UAAU+K,EAAE,GACnBhJ,MAAOgJ,EAAE,GAEb+B,EAAK3C,MAAMa,KAAKkC,GAChBA,EAAE,IAEK,MAANxC,GACLiC,EAAUjC,GAAV,OAAyBI,QAAQ,SAACkC,EAAIjC,GAClC,IAAImC,EAAI,CACJlN,MAAO,UAAU+K,EAAE,GACnBhJ,MAAOgJ,EAAE,GAEb+B,EAAK3C,MAAMa,KAAKkC,GAChBA,EAAE,IAGVL,EAAkB7B,KAAK8B,IAE3B,OAAOD,ECtH6BM,CAAgBvP,EAAO2N,OAAO3N,EAAO0N,QAEnD8B,eAAe9G,QAAQ,WAAY+G,KAAKC,UAAU9I,IAClD4I,eAAe9G,QAAQ,oBAAqB+G,KAAKC,UAAU1P,EAAO0N,SAClE8B,eAAe9G,QAAQ,oBAAqB+G,KAAKC,UAAU1P,EAAO2N,SAClE6B,eAAe9G,QAAQ,QAAS+G,KAAKC,UAAUzK,IAE/CiH,EAAQC,QAAQ,gBAKvBwD,MAAM,SAAA7N,GACL2M,EAAS3M,EAAMgI,eAMrBuE,GACAxL,EAAAC,EAAAC,cAAC6M,EAAD,KACE/M,EAAAC,EAAAC,cAAC8M,EAAA,EAAD,CAASC,KAAK,UACdjN,EAAAC,EAAAC,cAAA,4OC5FZ,IASe+K,GATG5O,UAAOC,IAAV4Q,MCOTC,GAA8B,CAClC,CACE7N,UAAW,QAEXE,YAAa,qBACbE,eAAgB,CACd+D,KAAM,QAERhE,WAAY,CACVe,YAAY,GAEdV,eAAgB,QAEhBC,aAAa,EACbyB,MAAO,gLAET,CACElC,UAAW,WAEXE,YAAa,WACbE,eAAgB,CACd+D,KAAM,YAERhE,WAAY,CACVe,YAAY,GAEdT,aAAa,EACbD,eAAgB,aAgCLsN,GA5BG,SAAA1O,GAAe,IAAb2K,EAAa3K,EAAb2K,QACZ/C,EAAO,IAAI1C,EADcwH,EAELC,qBAFKC,EAAAlL,OAAAmL,EAAA,EAAAnL,CAAAgL,EAAA,GAExBnM,EAFwBqM,EAAA,GAEjBM,EAFiBN,EAAA,GAI/B,OACEtL,EAAAC,EAAAC,cAAC2L,EAAD,KACE7L,EAAAC,EAAAC,cAAC4L,EAAD,KACE9L,EAAAC,EAAAC,cAACmN,GAAD,KACErN,EAAAC,EAAAC,cAAC6L,EAAD,CACEzJ,SAAS,UACTD,OAAQ8K,GACR3K,UAAWvD,EACXsD,SAAU,SAACyJ,GAAD,OAAmB1F,EAAKf,MAAMyG,GACrCC,KAAK,SAAAlI,GACDA,GACDsF,EAAQC,QAAQ,OAGnBwD,MAAM,SAAA7N,GACL2M,EAAS3M,EAAMgI,kBClDzBqG,GAAwB,CAC5B,CACEhO,UAAW,OACXQ,eAAgB,OAChBP,MAAO,OACPQ,aAAa,EACbb,YAAa,0CACbQ,eAAgB,CACd+D,KAAM,QAERhE,WAAY,CACVe,YAAY,IAGhB,CACElB,UAAW,QACXQ,eAAgB,QAChBP,MAAO,QACPQ,aAAa,EACbZ,aAAc,iBACdD,YAAa,oCACbQ,eAAgB,CACd+D,KAAM,QAERhE,WAAY,CACVe,YAAY,GAEdgB,MAAO,gLAET,CACElC,UAAW,WACXQ,eAAgB,WAChBL,WAAY,CACVe,YAAY,GAEdtB,YAAa,yEACbK,MAAO,WACPQ,aAAa,EACbZ,aAAc,oBACdO,eAAgB,CACd+D,KAAM,YAERjC,MAAO,oDAET,CACElC,UAAW,wBACXQ,eAAgB,wBAChBL,WAAY,CACVe,YAAY,GAEdtB,YAAa,6BACbK,MAAO,mBACPQ,aAAa,EACbZ,aAAc,kBACdO,eAAgB,CACd+D,KAAM,YAERjC,MAAO,qDAiCI+L,GA7BI,SAAA7O,GAAe,IAAb2K,EAAa3K,EAAb2K,QACb/C,EAAO,IAAI1C,EADewH,EAENC,qBAFMC,EAAAlL,OAAAmL,EAAA,EAAAnL,CAAAgL,EAAA,GAEzBnM,EAFyBqM,EAAA,GAElBM,EAFkBN,EAAA,GAIhC,OACEtL,EAAAC,EAAAC,cAAC2L,EAAD,KACA7L,EAAAC,EAAAC,cAAC4L,EAAD,KACE9L,EAAAC,EAAAC,cAACmN,GAAD,KACErN,EAAAC,EAAAC,cAAC6L,EAAD,CACEzJ,SAAS,UACTD,OAAQiL,GACR5K,cAAezD,EACfsD,SAAU,SAACyJ,GAAD,OAAmB1F,EAAKzC,WAAWmI,GAC1CC,KAAK,SAAAlI,GACDA,GACDsF,EAAQC,QAAQ,OAGnBwD,MAAM,SAAA7N,GACL2M,EAAS3M,EAAMgI,0SCvFtB,IAAMuG,GAAUnR,UAAOC,IAAVmR,MAIPC,GAAerR,UAAOC,IAAVqR,8HCJzB,IAIeC,GAJOvR,UAAOwR,GAAVC,qTCAnB,IAYeC,GAZK1R,UAAOC,IAAV0R,koBCCjB,IAAMC,GAAa5R,UAAOC,IAAV4R,MAIVC,GAAY9R,UAAOC,IAAV8R,KAEH,SAAA1P,GAAA,OAAAA,EAAE2P,QAAsB,KAIjB,SAAA5N,GAAA,OAAAA,EAAE6N,cAAkC,SAIjDC,GAAelS,UAAOC,IAAVkS,KACF,SAAA/I,GAAA,OAAAA,EAAEgJ,YAA8B,QAQrC,SAAA3G,GAAA,OAAAA,EAAEwE,OAAoB,YAoDlBoC,GAjDA,SAAAC,GAAgB,IAAdC,EAAcD,EAAdC,SAAcxD,EACYC,oBAAS,GADrBC,EAAAlL,OAAAmL,EAAA,EAAAnL,CAAAgL,EAAA,GACtByD,EADsBvD,EAAA,GACLwD,EADKxD,EAAA,GAAAI,EAEUL,oBAAS,GAFnBM,EAAAvL,OAAAmL,EAAA,EAAAnL,CAAAsL,EAAA,GAEtBqD,EAFsBpD,EAAA,GAENqD,EAFMrD,EAAA,GAI7B,OACE3L,EAAAC,EAAAC,cAAC+N,GAAD,KAEEjO,EAAAC,EAAAC,cAACqO,GAAD,CACEE,WAAYI,EAAkB,UAAY,OAC1CvC,MAAOuC,EAAkB,YAAS7N,EAClCiO,QAAS,WACPH,GAAeD,GACfG,GAAa,KALjB,gBAUAhP,EAAAC,EAAAC,cAACiO,GAAD,CACEE,OAAQQ,EAAkB,aAAU7N,EACpCsN,aAAcO,EAAkB,yBAAsB7N,GAGpD4N,EAASzL,IAAI,SAAC+L,EAAM5E,GAAP,OACXA,GAAK,GAAK4E,KAKhBlP,EAAAC,EAAAC,cAACqO,GAAD,CACEE,WAAYM,EAAiB,UAAY,OACzCzC,MAAOyC,EAAiB,YAAS/N,EACjCiO,QAAS,WACPD,GAAcD,GACdD,GAAc,KALlB,mBAUA9O,EAAAC,EAAAC,cAACiO,GAAD,CACEE,OAAQU,EAAiB,aAAU/N,EACnCsN,aAAcS,EAAiB,yBAAsB/N,GAEpD4N,EAAS,wOCrElB,IAOeO,GAPY9S,UAAOC,IAAV8S,6OCAxB,IAAMC,GAAahT,UAAOC,IAAVgT,MAMDD,MAEFE,GAAmBlT,kBAAOgT,GAAPhT,CAAHmT,8ICR7B,IAKeC,GALIpT,UAAOC,IAAVoT,4ICChB,IAIeC,GAJItT,kBAAOuT,KAAPvT,CAAHwT,KAEJ,SAAAnR,GAAA,IAAEgM,EAAFhM,EAAEgM,OAAF,MAAc,GAAApN,OAAGoN,EAAH,iBAA0B,0JCHpD,IAKeoF,GALQzT,UAAOC,IAAVyT,wICApB,IAKeC,GALQ3T,UAAOC,IAAV2T,8HCApB,IAIeC,GAJI7T,UAAO8T,EAAVC,wICAhB,IAKeC,GALchU,UAAOC,IAAVgU,MCyFX9R,KA3EG,SAAAE,GAAA,IAChBG,EADgBH,EAChBG,EACAiE,EAFgBpE,EAEhBoE,MACAyN,EAHgB7R,EAGhB6R,YACAC,EAJgB9R,EAIhB8R,eACAC,EALgB/R,EAKhB+R,YACAC,EANgBhS,EAMhBgS,kBACAC,EAPgBjS,EAOhBiS,cACAC,EARgBlS,EAQhBkS,iBACAC,EATgBnS,EAShBmS,uBACAC,EAVgBpS,EAUhBoS,2BACAC,EAXgBrS,EAWhBqS,iBAXgB,OAahB3R,EAAA,cAAC4R,GAAD,KACE5R,EAAA,cAAC6R,GAAD,KACE7R,EAAA,uBAAO8R,QAAQ,SAASrS,EAAErB,gBAC1B4B,EAAA,cAAC+R,GAAD,CACE5Q,KAAK,QACLe,MAAOwB,EACPsO,SAAUZ,IAGV1N,GACA1D,EAAA,cAACiS,GAAD,CAAapC,QAASwB,GACpBrR,EAAA,cAACkS,GAAArR,EAAD,CAAiBV,MAAM,OAK7BH,EAAA,cAAC6R,GAAD,KACE7R,EAAA,uBAAO8R,QAAQ,eAAerS,EAAEpB,iBAChC2B,EAAA,cAAC+R,GAAD,CACE5Q,KAAK,cACLe,MAAOiP,EACP/Q,YAAaX,EAAEnB,2BACf0T,SAAUZ,EACVe,WAAaR,KAEbA,GAAoB3R,EAAA,cAACC,EAAA,EAAD,gCAEpBkR,GACEnR,EAAA,cAACiS,GAAD,CAAYpC,QAASyB,GACnBtR,EAAA,cAACkS,GAAArR,EAAD,CAAiBV,MAAM,OAK7BgR,GAAeQ,GACf3R,EAAA,cAACoS,GAAD,KACEpS,EAAA,cAACqS,GAAD,KACErS,EAAA,cAACsS,GAAD,uBACAtS,EAAA,cAACuS,GAAA,EAAD,CACEpS,MAAM,eACNqS,QAASjB,EACTkB,eAAe,UACfC,cAAelB,EAAiBtE,MAChC8E,SAAU,SAACW,GAAclB,EAAuBkB,OAIpD3S,EAAA,cAAC4S,GAAD,KACE5S,EAAA,cAACsS,GAAD,yBACAtS,EAAA,cAAC6S,GAAA,EAAD,CACE3Q,MAAOsP,EAAiBsB,QACxBC,IAAK,EACLC,IAAK,EACLC,KAAM,GACNjB,SAAU,SAAC9P,GAAD,OAAWwP,EAA2BxP,oVCjF5D,IAcegR,GAdQjW,UAAOC,IAAViW,yHCApB,IAIeC,GAJSnW,UAAOC,IAAVmW,uHCArB,IAIeC,GAJMrW,UAAO8T,EAAVwC,wGCAlB,IAGeC,GAHUvW,UAAOC,IAAVuW,49BCAf,IAAMC,GAAczW,UAAO0W,MAAVC,MAgBXC,GAAc5W,UAAOkD,MAAV2T,yJChBxB,IAKeC,GALO9W,UAAOC,IAAV8W,uTCAnB,IAeeC,GAfchX,UAAOiX,OAAVC,MC0GXC,GA5FM,SAAA9U,GAAA,IACnB+U,EADmB/U,EACnB+U,aACAC,EAFmBhV,EAEnBgV,oBACAC,EAHmBjV,EAGnBiV,UACAC,EAJmBlV,EAInBkV,eACAC,EALmBnV,EAKnBmV,eACAC,EANmBpV,EAMnBoV,YACAC,EAPmBrV,EAOnBqV,YACAC,EARmBtV,EAQnBsV,cACAC,EATmBvV,EASnBuV,cACAC,EAVmBxV,EAUnBwV,kBACAC,EAXmBzV,EAWnByV,mBAXmB,OAanB/U,EAAA,cAAC4R,GAAD,KAEI0C,EAAsB,GACtBtU,EAAA,cAACgV,GAAD,CAAsBnF,QAAS,kBAAMkF,EAAmBV,EAAa1M,MACnE3H,EAAA,cAACkS,GAAArR,EAAD,CAAiBV,MAAM,MAG3BH,EAAA,cAACiV,GAAD,KAAiBV,EAAY,GAC7BvU,EAAA,cAAC6R,GAAD,KACE7R,EAAA,uBAAO8R,QAAQ,YAAf,aACA9R,EAAA,cAAC+R,GAAD,CACE5Q,KAAK,WACLe,MAAOmS,EAAaa,SACpBlD,SAAU,SAACmD,GAAD,OAAWX,EAAeW,EAAOd,EAAa1M,OAGxD0M,EAAaa,UACblV,EAAA,cAACiS,GAAD,CAAapC,QAAS,kBAAM4E,EAAeJ,EAAa1M,MACtD3H,EAAA,cAACkS,GAAArR,EAAD,CAAiBV,MAAM,OAI7BH,EAAA,cAACoV,GAAD,KACEpV,EAAA,sCACAA,EAAA,uCAGAqU,EAAagB,QAAQtR,IAAI,SAACuR,GAAD,OACvBtV,EAAA,cAACuV,GAAD,CAAiBrR,IAAG,SAAAhG,OAAWmW,EAAa1M,IAAxBzJ,OAA6BoX,EAAO3N,KACtD3H,EAAA,cAACwV,GAAD,QAAAtX,OAAkBqW,EAAY,EAA9B,MAAArW,OAAoCoX,EAAO3N,GAA3C,MACA3H,EAAA,cAAC6R,GAAD,KACE7R,EAAA,cAAC+R,GAAD,CACE5Q,KAAK,SACLe,MAAOoT,EAAOpT,MACd8P,SAAU,SAACmD,GAAD,OAAWP,EAAcO,EAAOd,EAAa1M,GAAI2N,EAAO3N,KAClE2D,OAAQgK,EAAO3N,KAAO0M,EAAaoB,kBAAoBH,EAAOpT,MAAQ,yBAAsBN,IAG5F0T,EAAOpT,OACPlC,EAAA,cAACmQ,GAAD,CAAmBN,QAAS,kBAAMgF,EAAcR,EAAa1M,GAAI2N,EAAO3N,MACtE3H,EAAA,cAACkS,GAAArR,EAAD,CAAiBV,MAAM,OAI7BH,EAAA,cAAC0V,GAAD,KACE1V,EAAA,cAAC0T,GAAD,CACErP,KAAK,QACLsD,GAAE,UAAAzJ,OAAYmW,EAAa1M,IAAzBzJ,OAA8BoX,EAAO3N,IACvCxG,KAAI,UAAAjD,OAAYmW,EAAa1M,IAC7BgO,QAASL,EAAO3N,KAAO0M,EAAaoB,kBAAoBH,EAAOpT,MAC/D3B,UAAW+U,EAAOpT,MAClB8P,SAAU,kBAAM8C,EAAkBT,EAAa1M,GAAI2N,EAAO3N,OAE5D3H,EAAA,cAAC6T,GAAD,CAAa/B,QAAO,UAAA5T,OAAYmW,EAAa1M,IAAzBzJ,OAA8BoX,EAAO3N,UAMjE3H,EAAA,cAAC6R,GAAD,KACE7R,EAAA,uBAAO8R,QAAQ,SAAf,UACA9R,EAAA,cAAC+R,GAAD,CACE5Q,KAAK,QACLf,YAAY,YACZ8B,MAAOmS,EAAauB,MACpB5D,SAAU,SAACmD,GAAD,OAAWT,EAAYS,EAAOd,EAAa1M,KACrDwK,WAAckC,EAAawB,cAE3BxB,EAAawB,YAAc7V,EAAA,cAACC,EAAA,EAAD,gCAE3BoU,EAAauB,OACX5V,EAAA,cAACiS,GAAD,CAAYpC,QAAS,kBAAM8E,EAAYN,EAAa1M,MAClD3H,EAAA,cAACkS,GAAArR,EAAD,CAAiBV,MAAM,SC5BpB2V,GA1DK,SAAAxW,GAAA,IAClByW,EADkBzW,EAClByW,iBACAxE,EAFkBjS,EAElBiS,cACAyE,EAHkB1W,EAGlB0W,sBACAC,EAJkB3W,EAIlB2W,gCACAC,EALkB5W,EAKlB4W,4BACA9E,EANkB9R,EAMlB8R,eACA+E,EAPkB7W,EAOlB6W,uBACAC,EARkB9W,EAQlB8W,sBARkB,OAUlBpW,EAAA,cAAC4R,GAAD,KAEE5R,EAAA,cAAC6R,GAAD,KACE7R,EAAA,uBAAO8R,QAAQ,oBAAf,iBACA9R,EAAA,cAAC+R,GAAD,CACE5Q,KAAK,mBACLe,MAAO6T,EACP3V,YAAY,YACZ4R,SAAUZ,EACVe,WAAaiE,KAEbA,GAAyBpW,EAAA,cAACC,EAAA,EAAD,gCAEzB8V,GACE/V,EAAA,cAACiS,GAAD,CAAYpC,QAASsG,GACnBnW,EAAA,cAACkS,GAAArR,EAAD,CAAiBV,MAAM,OAK7B4V,GAAoBK,GACpBpW,EAAA,cAACoS,GAAD,KACEpS,EAAA,cAACqS,GAAD,KACArS,EAAA,cAACsS,GAAD,uBACEtS,EAAA,cAACuS,GAAA,EAAD,CACEpS,MAAM,eACNqS,QAASjB,EACTkB,eAAe,UACfC,cAAesD,EAAsB9I,MACrC8E,SAAU,SAACW,GAAD,OAAcuD,EAA4BvD,OAIxD3S,EAAA,cAAC4S,GAAD,KACE5S,EAAA,cAACsS,GAAD,yBACAtS,EAAA,cAAC6S,GAAA,EAAD,CACE3Q,MAAO8T,EAAsBlD,QAC7BC,IAAK,EACLC,IAAK,EACLC,KAAM,GACNjB,SAAU,SAAC9P,GAAD,OAAW+T,EAAgC/T,qOC9DjE,IASemU,GATGpZ,UAAOqZ,GAAVC,KAGA,SAAAjX,GAAA,OAAAA,EAAEkX,UAA0B,QAC1B,SAAAnV,GAAA,OAAAA,EAAEoV,YAA8B,WAChC,SAAApQ,GAAA,OAAAA,EAAEqQ,YAA8B,UAChC,SAAAhO,GAAA,OAAAA,EAAEiO,YAA8B,QACtC,SAAApH,GAAA,OAAAA,EAAErC,OAAoB,0bCRjC,IAsBe0J,GAtBI3Z,UAAOC,IAAV2Z,KASE,SAAAvX,GAAA,IAAAwX,EAAAxX,EAAE+P,WAAF,gBAAAyH,EAAe,kBAAfA,+eCTX,IAgBMC,GAhBuB9Z,UAAOC,IAAV8Z,KAGlB,SAAA1X,GAAA,OAAAA,EAAEkX,UAA0B,QAC1B,SAAAnV,GAAA,OAAAA,EAAEoV,YAA8B,WAChC,SAAApQ,GAAA,OAAAA,EAAEqQ,YAA8B,UAI9B,SAAA1T,GAAK,OAAIA,EAAMsI,QAAU,SAS/B2L,GAAaha,UAAOC,IAAVga,mSCjBvB,IAYeC,GAZEla,UAAOC,IAAVka,KAOF,SAAA9X,GAAA,IAAA+X,EAAA/X,EAAEgM,OAAF,gBAAA+L,EAAW,OAAXA,GACO,SAAAhW,GAAA,IAAAiW,EAAAjW,EAAEkK,aAAF,gBAAA+L,EAAiB,OAAjBA,qTCRnB,IAceC,GAdAta,UAAOC,IAAVsa,KAMD,SAAAlY,GAAA,OAAAA,EAAEmY,OAASvK,OAAqB,UAC3B,SAAA7L,GAAA,OAAAA,EAAEoW,OAASpI,YAA+B,QAC3C,SAAAhJ,GAAA,OAAAA,EAAEoR,OAASjB,UAA2B,QACpC,SAAA9N,GAAA,OAAAA,EAAE+O,OAAShB,YAA+B,WAC1C,SAAAlH,GAAA,OAAAA,EAAEkI,OAASf,YAA+B,QAE/C,SAAAgB,GAAA,OAAAA,EAAED,OAASnM,QAAuB,0NCb9C,IAYeqM,GAZI1a,UAAOC,IAAV0a,MCiDHna,GAAgB,CAC3BC,GAjDgB,CAChBC,OAAQ,UACRC,OAAQ,UACRC,MAAO,QACPC,WAAY,SACZC,OAAQ,SAACC,EAASC,GAAV,SAAAC,OAAqBF,EAArB,YAAAE,OAAuCD,IAC/CE,cAAe,mEACfC,eAAgB,SAChBC,gBAAiB,UACjBC,2BAA4B,YAC5BC,OAAQ,CACNC,gBAAiB,8BACjBC,eAAgB,sFAChBE,OAAQ,4CACRC,kBAAmB,gDACnBC,SAAU,6BACVC,eAAgB,8DAChBC,UAAW,kEACXC,eAAgB,oCAChBC,WAAY,8CACZC,eAAgB,mBA8BlBC,GA1BgB,CAChBxB,OAAQ,iCACRC,OAAQ,+GACRC,MAAO,iCACPC,WAAY,wCACZC,OAAQ,SAACC,EAASC,GAAV,SAAAC,OAAqBF,EAArB,kBAAAE,OAAmCD,IAC3CE,cAAe,8VACfC,eAAgB,0DAChBC,gBAAiB,qGACjBC,2BAA4B,2GAC5BC,OAAQ,CACNC,gBAAiB,mUACjBC,eAAgB,8ZAChBE,OAAQ,8RACRC,kBAAmB,oQACnBC,SAAU,sIACVC,eAAgB,oTAChBC,UAAW,+aACXC,eAAgB,kKAChBC,WAAY,uQACZC,eAAgB,qHASPE,GAAmBC,YAAU,SAAAC,GAAA,IAAAC,EAAAD,EAAEE,YAAF,IAAAD,EAAS,KAATA,EAAA,MAAoB,CAC5DE,EAAGhC,GAAc+B,GACjBE,eAAgB,SAACC,GAAD,OAAUlC,GAAc+B,GAAMjB,OAAOoB,OCcxCP,MA5DI,SAAAE,GAUb,IATJoE,EASIpE,EATJoE,MACAqS,EAQIzW,EARJyW,iBACA8B,EAOIvY,EAPJuY,iBACAC,EAMIxY,EANJwY,cAAe/Z,EAMXuB,EANWvB,OACfga,EAKIzY,EALJyY,kBACAtY,EAIIH,EAJJG,EAAGuY,EAIC1Y,EAJD0Y,aACHhC,EAGI1W,EAHJ0W,sBACAiC,EAEI3Y,EAFJ2Y,QAASC,EAEL5Y,EAFK4Y,MAAOC,EAEZ7Y,EAFY6Y,OAAQjE,EAEpB5U,EAFoB4U,OACxBxI,EACIpM,EADJoM,OAEMwB,EAbe,SAACA,GAAD,MAAqB,SAAVA,EAAmB,QAAU,cAa/CkL,CAAeH,EAAQI,kBAAqBrC,GAAyBA,EAAsB9I,OAMzG,OALA4K,EAAgBG,EAAQK,WAAaR,EACrCI,EAAQxM,EAAOwM,OAASA,EACxBC,EAASzM,EAAOyM,QAAUA,EAC1BjE,EAASxI,EAAOwI,QAAUA,EAGxBlU,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACuY,GAAD,CACEjN,OAAQ4M,EAAM5M,OACdC,aAAc2M,EAAM3M,cAEpBvL,EAAA,cAACwY,GAAD,CACEhC,SAAU2B,EAAO3B,SACjBC,WAAY0B,EAAO1B,WACnBC,WAAYyB,EAAOzB,WACnBC,WAAYwB,EAAOxB,WACnBzJ,MAAOiL,EAAOjL,OAEb+K,EAAQvU,OAASA,GAEpB1D,EAAA,cAACyY,GAAD,CAAYpJ,WAAU,QAAAnR,OAAUgP,EAAV,MAAAhP,OAAoB+Z,EAAQS,gBAAkB1C,EAAwBA,EAAsBlD,QAAU,GAAtG,MACpB9S,EAAA,cAAC2Y,GAAD,KACE3Y,EAAA,qBAAK4Y,IAAKX,EAAQY,aAAe9C,EAAkB+C,IAAI,MAEzD9Y,EAAA,cAAC+Y,GAAD,CAAQtB,OAAQvD,EAAOuD,QACpBhY,EAAE1B,OAAO8Z,EAAkBC,EAActV,SAE5CxC,EAAA,qBAAKgZ,UAAU,wBAGnBhZ,EAAA,cAACiX,GAAD,KACEjX,EAAA,cAAC+W,GAAD,CAAgBlH,QAASkI,GAAzB,SAEID,EAAc/T,IAAI,SAAC+L,EAAMmJ,GAAP,OAChBjZ,EAAA,cAAC+W,GAAD,CACE7S,IAAK4L,EAAKnI,GACVkI,QAAS,kBAAMmI,EAAaiB,EAAQ,KAEnCA,EAAQ,KAIjBjZ,EAAA,cAAC+W,GAAD,CAAgBzL,OAAQvN,GAAU,kBAAlC,0eC/DR,IAwBemb,GAxBKjc,UAAOiX,OAAViF,KAWN,SAAA7Z,GAAA,OAAAA,EAAEmY,OAASvK,OAAqB,WAC3B,SAAA7L,GAAA,OAAAA,EAAEoW,OAASpI,YACf,SAAAhJ,GAAA,OAAAA,EAAEoR,OAASnM,QAAuB,kBAC/B,SAAA5C,GAAA,OAAAA,EAAE+O,OAASjB,UAA2B,QACpC,SAAAjH,GAAA,OAAAA,EAAEkI,OAAShB,YAA+B,WAC1C,SAAAiB,GAAA,OAAAA,EAAED,OAASf,YAA+B,UAGzC,SAAA0C,GAAA,OAAAA,EAAEC,MAAQhK,YAA+B,QAC9C,SAAAiK,GAAA,OAAAA,EAAED,MAAQnM,OAAqB,WAC9B,SAAAqM,GAAA,OAAAA,EAAEF,MAAQ/N,QAAuB,mBCwDhCkO,GArEG,SAAAla,GAWZ,IAVJoE,EAUIpE,EAVJoE,MACAyN,EASI7R,EATJ6R,YACAsI,EAQIna,EARJma,QACA3B,EAOIxY,EAPJwY,cAAe/Z,EAOXuB,EAPWvB,OACf2b,EAMIpa,EANJoa,oBACA1B,EAKI1Y,EALJ0Y,aACA2B,EAIIra,EAJJqa,mBACAnI,EAGIlS,EAHJkS,iBACAyG,EAEI3Y,EAFJ2Y,QAASC,EAEL5Y,EAFK4Y,MAAOC,EAEZ7Y,EAFY6Y,OAAQjE,EAEpB5U,EAFoB4U,OACxBxI,EACIpM,EADJoM,OAGMwB,EAfe,SAACA,GAAD,MAAqB,SAAVA,EAAmB,QAAU,cAe/CkL,CAAeH,EAAQ2B,iBAAoBpI,GAAoBA,EAAiBtE,OAM9F,OALA4K,EAAgBG,EAAQK,WAAaR,EACrCI,EAAQxM,EAAOwM,OAASA,EACxBC,EAASzM,EAAOyM,QAAUA,EAC1BjE,EAASxI,EAAOwI,QAAUA,EAGxBlU,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACuY,GAAD,CACEjN,OAAQ4M,EAAM5M,OACdC,aAAc2M,EAAM3M,cAGlB0M,EAAQvU,OAASA,EACjB1D,EAAA,cAACwY,GAAD,CACEhC,SAAU2B,EAAO3B,SACjBC,WAAY0B,EAAO1B,WACnBC,WAAYyB,EAAOzB,WACnBC,WAAYwB,EAAOxB,WACnBzJ,MAAOiL,EAAOjL,OAEb+K,EAAQvU,OAASA,QACL9B,EAEjB5B,EAAA,cAACyY,GAAD,CAAYpJ,WAAU,QAAAnR,OAAUgP,EAAV,MAAAhP,OAAoB+Z,EAAQ4B,eAAiBrI,EAAmBA,EAAiBsB,QAAU,GAA3F,MACpB9S,EAAA,cAAC2Y,GAAD,KACE3Y,EAAA,qBAAK4Y,IAAKX,EAAQ6B,YAAc3I,EAAa2H,IAAI,MAEnD9Y,EAAA,cAAC+Z,GAAD,CACEtC,OAAQvD,EAAOuD,OACf4B,MAAOnF,EAAOmF,MACdxJ,QAAS6J,GAHX,SAOA1Z,EAAA,qBAAKgZ,UAAU,wBAGnBhZ,EAAA,cAACiX,GAAD,KACEjX,EAAA,cAAC+W,GAAD,CAAgBzL,QAASmO,IAAY1b,GAAU,kBAA/C,SAEE+Z,GAAiBA,EAAc/T,IAAI,SAAC+L,EAAMmJ,GAAP,OACjCjZ,EAAA,cAAC+W,GAAD,CACE7S,IAAK4L,EAAKnI,GACVkI,QAAS,kBAAMmI,EAAaiB,EAAQ,KAEnCA,EAAQ,KAIfjZ,EAAA,cAAC+W,GAAD,CAAgBlH,QAAS8J,GAAzB,iKCxER,IAQeK,GARM/c,UAAOC,IAAV+c,6MCClB,IAQeC,GAREjd,UAAO8T,EAAVoJ,KAGC,SAAA7a,GAAA,OAAAA,EAAEkX,UAA0B,QAC1B,SAAAnV,GAAA,OAAAA,EAAEoV,YAA8B,WAEtC,SAAApQ,GAAA,OAAAA,EAAE6G,OAAoB,0WCNjC,IAAMkN,GAAqBnd,UAAOC,IAAVmd,MAMlBC,GAAMrd,UAAOC,IAAVqd,KAIG,SAAAjb,GAAA,IAAEgM,EAAFhM,EAAEgM,OAAF,MAAc,aAAApN,OAAaoN,KAAY,GAGnC,SAAAjK,GAAA,OAAAA,EAAEgO,YAA8B,gBAGnCmL,GAAeJ,GACbE,0jBCjBR,IAAMG,GAAexd,UAAOyd,GAAVC,MA4BVC,GApBC3d,UAAO4d,GAAVC,KACI,SAAAxb,GAAA,OAAAA,EAAEmY,OAAShB,YAA+B,WAC5C,SAAApV,GAAA,OAAAA,EAAEoW,OAASjB,UAA2B,QACpC,SAAAnQ,GAAA,OAAAA,EAAEgT,MAAQ3C,YAA+B,QAC/C,SAAAhO,GAAA,OAAAA,EAAE+O,OAASvK,OAAqB,WAC3B,SAAAqC,GAAA,OAAAA,EAAEwL,cAAkC,QAWvC,SAAArD,GAAA,OAAAA,EAAE2B,MAAQnM,OAAqB,igBCxBrC,IAAM8N,GAAa/d,UAAOC,IAAV+d,MAyBRC,GApBFje,UAAOiX,OAAViH,KACC,SAAA7b,GAAA,OAAAA,EAAEmY,OAASvK,OAAqB,WAC3B,SAAA7L,GAAA,OAAAA,EAAEoW,OAASpI,YAA+B,QAC9C,SAAAhJ,GAAA,OAAAA,EAAEoR,OAASnM,QAAuB,kBAE/B,SAAA5C,GAAA,OAAAA,EAAE+O,OAASjB,UAA2B,QACpC,SAAAjH,GAAA,OAAAA,EAAEkI,OAAShB,YAA+B,WAC1C,SAAAiB,GAAA,OAAAA,EAAED,OAASf,YAA+B,UAIzC,SAAA0C,GAAA,OAAAA,EAAEC,MAAQhK,YAA+B,QAC9C,SAAAiK,GAAA,OAAAA,EAAED,MAAQnM,OAAqB,WAC9B,SAAAqM,GAAA,OAAAA,EAAEF,MAAQ/N,QAAuB,mBCmHhC8P,GA3HO,SAAA9b,GAchB,IAbJwY,EAaIxY,EAbJwY,cACAuD,EAYI/b,EAZJ+b,sBACA3X,EAWIpE,EAXJoE,MACA4X,EAUIhc,EAVJgc,YACAC,EASIjc,EATJic,YACAC,EAQIlc,EARJkc,mBACAC,EAOInc,EAPJmc,iBACA1D,EAMIzY,EANJyY,kBACAC,EAKI1Y,EALJ0Y,aACA2B,EAIIra,EAJJqa,mBACA1B,EAGI3Y,EAHJ2Y,QAASC,EAGL5Y,EAHK4Y,MAAOC,EAGZ7Y,EAHY6Y,OAChBuD,EAEIpc,EAFJoc,UAAWxH,EAEP5U,EAFO4U,OACXxI,EACIpM,EADJoM,OASA,OANAoM,EAAgBG,EAAQK,WAAaR,EACrCI,EAAQxM,EAAOwM,OAASA,EACxBC,EAASzM,EAAOyM,QAAUA,EAC1BuD,EAAYhQ,EAAOgQ,WAAaA,EAChCxH,EAASxI,EAAOwI,QAAUA,EAGxBlU,EAAA,cAAAA,EAAA,cACAA,EAAA,cAACuY,GAAD,CACEjN,OAAQ4M,EAAM5M,OACdC,aAAc2M,EAAM3M,cAEpBvL,EAAA,cAAC2b,GAAD,KAEE7D,EAAc/T,IAAI,SAAC+L,EAAMmJ,GAAP,OAChBA,EAAQ,IAAMoC,GACdrb,EAAA,cAACA,EAAA,SAAD,CAAgBkE,IAAK4L,EAAKnI,IACxB3H,EAAA,cAACwY,GAAD,CACEhC,SAAU2B,EAAO3B,SACjBC,WAAY0B,EAAO1B,WACnBC,WAAYyB,EAAOzB,WACnBC,WAAYwB,EAAOxB,WACnBzJ,MAAOiL,EAAOjL,OAEb+K,EAAQvU,OAASA,GAGlBoM,EAAK8F,OACL5V,EAAA,cAACyY,GAAD,KACEzY,EAAA,cAAC2Y,GAAD,KACE3Y,EAAA,qBAAK4Y,IAAK9I,EAAK8F,MAAOkD,IAAI,OAIhC9Y,EAAA,cAAC4b,GAAD,CACEpF,SAAUkF,EAAUlF,SACpBC,WAAYiF,EAAUjF,WACtBvJ,MAAOwO,EAAUxO,OAEhB4C,EAAKoF,UAERlV,EAAA,cAACwa,GAAD,KAEI1C,EAAc/T,IAAI,SAAC+L,EAAMmJ,GAAP,OAChBjZ,EAAA,cAAC6b,GAAD,CACEvQ,OAAQ4I,EAAOuD,OAAOpI,WACtBnL,IAAK4L,EAAKnI,GACV0H,WAAY4J,EAAQ,IAAMoC,GAAyBnH,EAAOuD,OAAOpI,gBAKzErP,EAAA,cAACya,GAAD,KAEI3K,EAAKuF,QAAQtR,IAAI,SAACuR,GAAD,OACfA,EAAOpT,OACPlC,EAAA,cAAC8b,GAAD,CACE5X,IAAKoR,EAAO3N,GACZ8P,OAAQiE,EACRrC,MAAOnF,EAAOmF,MACd0B,aAAczF,EAAO3N,KAAO2T,EAAc,yBAC5BhG,EAAO3N,KAAO4T,GAAe,uBAC3C1L,QAAS,kBACS,OAAhByL,GAAwC,OAAhBC,GACxBC,EAAmBlG,EAAO3N,GAAImI,EAAK2F,oBAGpCH,EAAOpT,UAKhBlC,EAAA,cAACgb,GAAD,KACEhb,EAAA,cAAC+b,GAAD,CACE1X,KAAK,SACLoT,OAAQvD,EAAOuD,OACf4B,MAAOnF,EAAOmF,MACdxJ,QAAS4L,EACTlb,SAA0B,OAAhB+a,GAAwC,OAAhBC,IAAwB,GAL5D,cAeRvb,EAAA,cAACiX,GAAD,KACEjX,EAAA,cAAC+W,GAAD,CAAgBlH,QAASkI,GAAzB,SAEID,EAAc/T,IAAI,SAAC+L,EAAMmJ,GAAP,OAChBjZ,EAAA,cAAC+W,GAAD,CACE7S,IAAK4L,EAAKnI,GACVkI,QAAS,kBAAMmI,EAAaiB,EAAQ,IACpC3N,OAAQ2N,EAAQ,IAAMoC,GAAyB,kBAE9CpC,EAAQ,KAIjBjZ,EAAA,cAAC+W,GAAD,CAAgBlH,QAAS8J,GAAzB,cCmDOqC,8MA7KbpZ,MAAQ,CACN6W,SAAS,EACT4B,sBAAuB,EACvBC,YAAa,KACbC,YAAa,KACb1D,iBAAkB,EAClB9Z,QAAQ,EACRka,QAAS,GACTgE,KAAM,GACN/D,MAAO,GACPC,OAAQ,GACRjE,OAAQ,GACRwH,UAAW,MAGb7R,mBAAqB,WACnB,IAAMqS,EAAYC,OAAOC,OACrBF,GAAaA,EAAUG,SACzB1W,EAAK2W,WAAWJ,MAIpBI,WAAa,SAACJ,GACZvW,EAAKoE,SAAS,CACZkO,QAASiE,EAAUjE,QACnBgE,KAAMC,EAAUD,KAChB/D,MAAOgE,EAAUhE,MACjBC,OAAQ+D,EAAU/D,OAClBjE,OAAQgI,EAAUhI,OAClBwH,UAAWQ,EAAUR,eAIzBhC,oBAAsB,WACpB/T,EAAKoE,SAAS,CAAC0P,SAAS,OAG1B1B,kBAAoB,WAClBpS,EAAKoE,SAAS,CACZ0P,SAAS,EACT4B,sBAAuB,EACvBtd,QAAQ,EACRud,YAAa,KACbC,YAAa,KACb1D,iBAAkB,OAItB8B,mBAAqB,WACnBhU,EAAKoE,SAAS,CACZ0P,SAAS,EACT1b,QAAQ,OAIZia,aAAe,SAACrQ,GACdhC,EAAKoE,SAAS,CACZ0P,SAAS,EACT1b,QAAQ,EACRud,YAAa,KACbC,YAAa,KACbF,sBAAuB1T,OAI3B8T,iBAAmB,WACjB,IAAM3D,EAAgBnS,EAAK3C,MAAM8U,eAAiBnS,EAAK/C,MAAMqV,QAAQK,UAEjE3S,EAAK/C,MAAMyY,uBAAyBvD,EAActV,OACpDmD,EAAKoE,SAAS,CACZhM,QAAQ,EACR0b,SAAS,IAGX9T,EAAKoE,SAAS,CACZuR,YAAa,KACbC,YAAa,KACbF,sBAAuB1V,EAAK/C,MAAMyY,sBAAwB,OAKhEG,mBAAqB,SAACvC,EAAOxD,GAC3B,IAAMqC,EAAgBnS,EAAK3C,MAAM8U,eAAiBnS,EAAK/C,MAAMqV,QAAQK,UAEjEW,IAAUxD,EACZ9P,EAAKoE,SAAS,CACZuR,YAAarC,EACbpB,iBAAkBlS,EAAK/C,MAAMiV,iBAAmBC,EAActV,OAC5DmD,EAAK/C,MAAMiV,iBAAmB,EAAIlS,EAAK/C,MAAMiV,iBAAmB,IAGpElS,EAAKoE,SAAS,CACZuR,YAAa7F,EACb8F,YAAatC,6EAKV,IAAAlW,EAKHD,KAAKE,MAHPmO,EAFKpO,EAELoO,YAAazN,EAFRX,EAEQW,MAAOoU,EAFf/U,EAEe+U,cACpBtG,EAHKzO,EAGLyO,iBAAkBuE,EAHbhT,EAGagT,iBAClBC,EAJKjT,EAILiT,sBAAuBtK,EAJlB3I,EAIkB2I,OAJlB6Q,EAWHzZ,KAAKF,MAHP6W,EARK8C,EAQL9C,QAAS4B,EARJkB,EAQIlB,sBAAuBC,EAR3BiB,EAQ2BjB,YAChCC,EATKgB,EASLhB,YAAa1D,EATR0E,EASQ1E,iBAAkB9Z,EAT1Bwe,EAS0Bxe,OAC/Bka,EAVKsE,EAULtE,QAASC,EAVJqE,EAUIrE,MAAOC,EAVXoE,EAUWpE,OAAQjE,EAVnBqI,EAUmBrI,OAAQwH,EAV3Ba,EAU2Bb,UAGlC,OAAIjC,EAEAzZ,EAAA,cAACwc,GAAD,CACE1E,cAAeA,EACfuD,sBAAuBA,EACvB3X,MAAOA,EACP4X,YAAaA,EACbC,YAAaA,EACbC,mBAAoB1Y,KAAK0Y,mBACzBC,iBAAkB3Y,KAAK2Y,iBACvB1D,kBAAmBjV,KAAKiV,kBACxBC,aAAclV,KAAKkV,aACnB2B,mBAAoB7W,KAAK6W,mBACzB1B,QAASA,EACTC,MAAOA,EACPC,OAAQA,EACRuD,UAAWA,EACXxH,OAAQA,EACRxI,OAAQA,IAGJ3N,EAENiC,EAAA,cAACyc,GAAD,CACE/Y,MAAOA,EACPqS,iBAAkBA,EAClB8B,iBAAkBA,EAClBC,cAAeA,EACf/Z,OAAQA,EACRga,kBAAmBjV,KAAKiV,kBACxBC,aAAclV,KAAKkV,aACnBhC,sBAAuBA,EACvBiC,QAASA,EACTC,MAAOA,EACPC,OAAQA,EACRjE,OAAQA,EACRxI,OAAQA,IAKV1L,EAAA,cAAC0c,GAAD,CACEhZ,MAAOA,EACPyN,YAAaA,EACb2G,cAAeA,EACf2B,QAASA,EACTjI,iBAAkBA,EAClBkI,oBAAqB5W,KAAK4W,oBAC1B1B,aAAclV,KAAKkV,aACnB2B,mBAAoB7W,KAAK6W,mBACzB1B,QAASA,EACTC,MAAOA,EACPC,OAAQA,EACRjE,OAAQA,EACRxI,OAAQA,WAxKCnH,8hBCJnB,IA0BeoY,GA1BW1f,UAAOiX,OAAV0I,kWCAvB,IAiBeC,GAjBI5f,UAAOiX,OAAV4I,qMCAhB,IAOeC,GAPQ9f,UAAOC,IAAV8f,sQCApB,IAeeC,GAfChgB,UAAOC,IAAVggB,MCmCEC,GA7BO,SAAA7d,GAAY,IAAVK,EAAUL,EAAVK,KAAUyd,EAEM7Y,WAAe,IAFrB8Y,EAAArc,OAAAmL,EAAA,EAAAnL,CAAAoc,EAAA,GAEzBE,EAFyBD,EAAA,GAEZE,EAFYF,EAAA,GAG1BG,EAAcjZ,SAAa,MASjC,OACEvE,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACyd,GAAD,KACEzd,EAAA,cAAC0d,GAAD,KACE1d,EAAA,uBAAIsd,IAGNtd,EAAA,cAAC0d,GAAD,CAAS7N,QAdQ,SAAC8N,GACtBH,EAAYI,QAAQC,SACpBC,SAASC,YAAY,QACrBJ,EAAEK,OAAOC,QACTV,EAAe,sBAUwB7Z,MAAM,aACvC1D,EAAA,cAACke,GAAArd,EAAD,CAAUsd,aAAcb,EAAc,UAAY,cAItDtd,EAAA,cAACoe,GAAA,EAAD,CAAUC,UAAQ,EAACC,IAAKd,EAAatb,MAAOvC,soBC7BlD,IAsCe4e,GAtCCthB,kBAAOuhB,IAAPvhB,CAAHwhB,mUCKb,IAAMzhB,GAAYC,UAAOC,IAAVwhB,MAMT/S,GAAO1O,UAAO8T,EAAV4N,MA0DKC,8MAlDbhc,MAAQ,CAAEic,QAAQ,KAElBC,KAAO,kBAAMnZ,EAAKoE,SAAS,CAAE8U,QAAQ,OAErCE,MAAQ,kBAAMpZ,EAAKoE,SAAS,CAAE8U,QAAQ,6EAE7B,IACCA,EAAW/b,KAAKF,MAAhBic,OADD9b,EAEoBD,KAAKE,MAAzBrD,EAFAoD,EAEApD,KAAMqf,EAFNjc,EAEMic,WAEPC,EAAU,CAAC,CAAEC,KAAM,QAASrP,QAAS/M,KAAKic,QAEhD,OACEne,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACEX,EAAAC,EAAAC,cAACqe,GAAD,KACEve,EAAAC,EAAAC,cAACse,GAAD,CACEvP,QAAS/M,KAAKgc,KACdve,SAAUye,EACVtb,MAAOsb,EAAa,qGAAkGpd,GAHxH,YAOAhB,EAAAC,EAAAC,cAACue,GAAD,kCACAze,EAAAC,EAAAC,cAACwe,GAAD,CACEzP,QAAS,WACPtC,eAAevG,WAAW,SAC1BuG,eAAevG,WAAW,YAC1BuG,eAAevG,WAAW,qBAC1BuG,eAAevG,WAAW,sBAE5BuY,GAAG,KAPL,aAWF3e,EAAAC,EAAAC,cAAC0e,GAAA,EAAD,KACGX,GACCje,EAAAC,EAAAC,cAAC2e,GAAA,EAAD,CACER,QAASA,EACTS,QAAS5c,KAAKic,MACdY,QAAQ,6CAER/e,EAAAC,EAAAC,cAAC8e,GAAD,CAAejgB,KAAMA,cA1CXkgB,uKCnBxB,IAMeC,GANQ7iB,UAAOC,IAAV6iB,+FCApB,IAIeC,GAJS/iB,UAAOC,IAAV+iB,kGCArB,IAGehP,GAHchU,UAAOC,IAAVgjB,sGCA1B,IAIeC,GAJQljB,UAAOqZ,GAAV8J,uLCUpB,IAAMC,GAASpjB,UAAOC,IAAVojB,MA2CGC,GApCK,SAAAjhB,GAAqD,IAAnDoE,EAAmDpE,EAAnDoE,MAAO2L,EAA4C/P,EAA5C+P,WAAY3D,EAAgCpM,EAAhCoM,OAAQ8U,EAAwBlhB,EAAxBkhB,SAAUC,EAAcnhB,EAAdmhB,SAAcrD,EAC7B7Y,aAD6B8Y,EAAArc,OAAAmL,EAAA,EAAAnL,CAAAoc,EAAA,GAChEsD,EADgErD,EAAA,GACjDsD,EADiDtD,EAAA,GAEvE,OACErd,EAAA,cAAC4gB,GAAD,KACE5gB,EAAA,cAAC6gB,GAAD,KAAiBnd,GACjB1D,EAAA,cAACqgB,GAAD,KACErgB,EAAA,cAAC8gB,GAAD,KAEIzR,EAAW7M,OAAS,GACpBxC,EAAA,cAACuS,GAAA,EAAD,CACEpS,MAAM,eACNqS,QAASnD,EACTqD,cAAegO,EACf1O,SAAU,SAACW,GACT6N,EAAS7N,EAAUjP,GACnBid,EAAiBhO,OAKzB3S,EAAA,cAAC+gB,GAAD,KAEIrV,GACA1L,EAAA,cAACghB,GAAA,EAAD,CACE5gB,YAAY,+BACZ6X,QAASvM,EACTsG,SAAU,SAAA9P,GAAK,OAAIue,EAASve,EAAOwB,UChClCud,GAVI,SAAA3hB,GAAA,IAAEoE,EAAFpE,EAAEoE,MAAO+H,EAATnM,EAASmM,OAAQC,EAAjBpM,EAAiBoM,OAAQ8U,EAAzBlhB,EAAyBkhB,SAAUC,EAAnCnhB,EAAmCmhB,SAAnC,OACjBzgB,EAAA,cAACkhB,GAAD,CACExd,MAAOA,EACP2L,WAAY5D,EACZC,OAAQA,EACR8U,SAAUA,EACVC,SAAUA,+FCJd,IAAMU,GAAqBlkB,UAAOC,IAAVkkB,MAyBTC,GArBG,SAAA/hB,GAAkC,IAAhCoM,EAAgCpM,EAAhCoM,OAAQ8U,EAAwBlhB,EAAxBkhB,SAAUC,EAAcnhB,EAAdmhB,SAChCxT,EAAO,EAELqU,EAAQ5V,EAAO3H,IAAI,SAAC+L,GAAD,OACvB9P,EAAA,cAACuhB,GAAD,CACE7d,MAAOoM,EAAKpM,MACZ+H,OAAQqE,EAAK5C,MACbxB,OAAQoE,EAAKxF,MACbpG,IAAK+I,GAAM,EACXuT,SAAUA,EACVC,SAAUA,MAId,OACEzgB,EAAA,cAACmhB,GAAD,KACGG,IC8jBQxY,gNA/jBblG,MAAQ,CACNc,MAAO,GACPyN,YAAa,GACb4E,iBAAkB,GAClBpE,kBAAkB,EAClByE,uBAAuB,EACvB5E,iBAAkB,CAChBtE,MAAO,OACP4F,QAAS,IAEXkD,sBAAuB,CACrB9I,MAAO,OACP4F,QAAS,IAEXgF,cAAe,CACb,CACEnQ,GAAI,EACJiO,MAAM,GACNV,SAAU,GACVO,iBAAkB,EAClB+L,WAAW,EACX3L,YAAY,EACZR,QAAS,CACP,CAAC1N,GAAI,EAAGzF,MAAM,IACd,CAACyF,GAAI,EAAGzF,MAAM,IACd,CAACyF,GAAI,EAAGzF,MAAM,OAIpBuf,mBAAmB,EACnB/V,OAAQ,GACRgW,iBAAkB,GAClBC,iBAAkB,GAClB1J,QAAS,CACPgE,KAAM,CACJzF,SAAU,GACVoL,gBAAiB,GACjBtW,OAAQ,GACRC,aAAc,IAEhB2M,MAAO,CACL7I,WAAY,GACZ/D,OAAQ,GACRC,aAAc,IAEhB4M,OAAQ,CACN1B,WAAY,GACZD,SAAU,GACVtJ,MAAO,GACPyJ,WAAY,GACZkL,eAAgB,GAChBnL,WAAY,IAEdxC,OAAQ,CACNuD,OAAQ,CACNvK,MAAO,GACPmC,WAAY,GACZ/D,OAAQ,GACRkL,SAAU,GACVC,WAAY,GACZC,WAAY,IAEd2C,MAAO,CACLhK,WAAY,GACZnC,MAAO,GACP5B,OAAQ,KAGZoQ,UAAW,CACTjF,WAAY,GACZD,SAAU,GACVtJ,MAAO,QAKbrD,mBAAqB,WAEnB,IAAM6B,EAAS8B,KAAKsU,MAAMvU,eAAe3G,QAAQ,UAE3C8a,EAAmBlU,KAAKsU,MAAMvU,eAAe3G,QAAQ,sBAErD+a,EAAmBnU,KAAKsU,MAAMvU,eAAe3G,QAAQ,sBAEvD8E,GAAUgW,GAAoBC,GAChChc,EAAKoc,YAAYrW,EAAQgW,EAAkBC,MAI/CI,YAAc,SAACrW,EAAWgW,EAAqBC,GAC7C,IAAM1J,EAAOjX,OAAAa,EAAA,EAAAb,CAAA,GAAO2E,EAAK/C,MAAMqV,SACzB+J,EAAiBN,EACjBO,EAAiBN,EAEvB1J,EAAQC,MAAM5M,OAAS0W,EAAW9J,MAAM,IAAM8J,EAAW9J,MAAM,GAAG5M,OAClE2M,EAAQC,MAAM3M,aAAeyW,EAAW9J,MAAM,IAAM8J,EAAW9J,MAAM,GAAG3M,aACxE0M,EAAQE,OAAO1B,WAAauL,EAAW7J,OAAO,IAAM6J,EAAW7J,OAAO,GAAG1B,WACzEwB,EAAQE,OAAO3B,SAAWwL,EAAW7J,OAAO,IAAM6J,EAAW7J,OAAO,GAAG3B,SACvEyB,EAAQE,OAAOzB,WAAasL,EAAW7J,OAAO,IAAM6J,EAAW7J,OAAO,GAAGzB,WACzEuB,EAAQE,OAAOxB,WAAaqL,EAAW7J,OAAO,IAAM6J,EAAW7J,OAAO,GAAGxB,WACzEsB,EAAQE,OAAO0J,eAAiBG,EAAW7J,OAAO,IAAM6J,EAAW7J,OAAO,GAAG0J,eAC7E5J,EAAQE,OAAOjL,MAAQ+U,EAAW9J,OAAO,IAAM8J,EAAW9J,OAAO,GACjEF,EAAQ/D,OAAOuD,OAAOnM,OAAS0W,EAAW9N,OAAOuD,OAAO,IAAMuK,EAAW9N,OAAOuD,OAAO,GAAGnM,OAC1F2M,EAAQ/D,OAAOuD,OAAOvK,MAAQ8U,EAAW9N,OAAOuD,OAAO,IAAMuK,EAAW9N,OAAOuD,OAAO,GAAGvK,MACzF+K,EAAQ/D,OAAOuD,OAAOhB,WAAauL,EAAW9N,OAAOuD,OAAO,IAAMuK,EAAW9N,OAAOuD,OAAO,GAAGhB,WAC9FwB,EAAQ/D,OAAOuD,OAAOjB,SAAWwL,EAAW9N,OAAOuD,OAAO,IAAMuK,EAAW9N,OAAOuD,OAAO,GAAGjB,SAC5FyB,EAAQ/D,OAAOuD,OAAOf,WAAasL,EAAW9N,OAAOuD,OAAO,IAAMuK,EAAW9N,OAAOuD,OAAO,GAAGf,WAC9FuB,EAAQ/D,OAAOuD,OAAOpI,WAAa4S,EAAW/N,OAAOuD,OAAO,IAAMwK,EAAW/N,OAAOuD,OAAO,GAC3FQ,EAAQ/D,OAAOmF,MAAM/N,OAAS0W,EAAW9N,OAAOmF,MAAM,IAAM2I,EAAW9N,OAAOmF,MAAM,GAAG/N,OACvF2M,EAAQ/D,OAAOmF,MAAMnM,MAAQ8U,EAAW9N,OAAOmF,MAAM,IAAM2I,EAAW9N,OAAOmF,MAAM,GAAGnM,MACtF+K,EAAQ/D,OAAOmF,MAAMhK,WAAa4S,EAAW/N,OAAOmF,MAAM,IAAM4I,EAAW/N,OAAOmF,MAAM,GACxFpB,EAAQyD,UAAUjF,WAAauL,EAAWtG,UAAU,IAAMsG,EAAWtG,UAAU,GAAGjF,WAClFwB,EAAQyD,UAAUlF,SAAWwL,EAAWtG,UAAU,IAAMsG,EAAWtG,UAAU,GAAGlF,SAChFyB,EAAQyD,UAAUxO,MAAQ8U,EAAWtG,UAAU,IAAMuG,EAAWvG,UAAU,GAE1E/V,EAAKoE,SAAS,CACZ2B,SACAuM,UACAyJ,iBAAkBM,EAClBL,iBAAkBM,OAItB7Q,eAAiB,SAAC+D,GAChB,IAG4B+M,EAHtB/gB,EAAOgU,EAAM6I,OAAO7c,KACpBe,EAAQiT,EAAM6I,OAAO9b,MAE3B,GAAa,gBAATf,EACFwE,EAAKoE,UAALmY,EAAA,GAAAlhB,OAAAmhB,GAAA,EAAAnhB,CAAAkhB,EACG/gB,EAAOe,GADVlB,OAAAmhB,GAAA,EAAAnhB,CAAAkhB,EAAA,mBAEoBvc,EAAKyc,cAAclgB,IAFvCggB,SAKG,GAAa,qBAAT/gB,EAA6B,KAAAkhB,EACpC1c,EAAKoE,UAALsY,EAAA,GAAArhB,OAAAmhB,GAAA,EAAAnhB,CAAAqhB,EACGlhB,EAAOe,GADVlB,OAAAmhB,GAAA,EAAAnhB,CAAAqhB,EAAA,wBAEyB1c,EAAKyc,cAAclgB,IAF5CmgB,SAKG1c,EAAKoE,SAAL/I,OAAAmhB,GAAA,EAAAnhB,CAAA,GAAgBG,EAAOe,OAG9BmP,YAAc,WACZ1L,EAAKoE,SAAS,CAACrG,MAAO,QAGxB4N,kBAAoB,WAClB3L,EAAKoE,SAAS,CACZoH,YAAa,GACbQ,kBAAkB,OAItBwE,uBAAyB,WACvBxQ,EAAKoE,SAAS,CACZgM,iBAAkB,GAClBK,uBAAuB,OAI3B5B,eAAiB,SAACW,EAAWxN,GAC3B,IAAMmQ,EAAa9W,OAAAshB,GAAA,EAAAthB,CAAO2E,EAAK/C,MAAMkV,eAC/BzD,EAAeyD,EAAcyK,KAAK,SAAAzS,GAAI,OAAIA,EAAKnI,KAAOA,IAExD0M,IACFA,EAAaa,SAAWC,EAAM6I,OAAO9b,MACrCmS,EAAamN,UAAY7b,EAAK6c,qBAAqB7a,IAGrDhC,EAAKoE,SAAS,CAAC+N,iBAAgBnS,EAAK8c,sBAGtChR,uBAAyB,SAACvE,GACxB,IAAMsE,EAAgBxQ,OAAAa,EAAA,EAAAb,CAAA,GAAO2E,EAAK/C,MAAM4O,kBACxCA,EAAiBtE,MAAQA,EAEzBvH,EAAKoE,SAAS,CAACyH,wBAGjB0E,4BAA8B,SAAChJ,GAC7B,IAAM8I,EAAqBhV,OAAAa,EAAA,EAAAb,CAAA,GAAO2E,EAAK/C,MAAMoT,uBAC7CA,EAAsB9I,MAAQA,EAE9BvH,EAAKoE,SAAS,CAACiM,6BAGjBtE,2BAA6B,SAACoB,GAC5B,IAAMtB,EAAgBxQ,OAAAa,EAAA,EAAAb,CAAA,GAAO2E,EAAK/C,MAAM4O,kBACxCA,EAAiBsB,QAAUA,EAE3BnN,EAAKoE,SAAS,CAACyH,wBAGjByE,gCAAkC,SAACnD,GACjC,IAAMkD,EAAqBhV,OAAAa,EAAA,EAAAb,CAAA,GAAO2E,EAAK/C,MAAMoT,uBAC7CA,EAAsBlD,QAAUA,EAEhCnN,EAAKoE,SAAS,CAACiM,6BAGjBvB,eAAiB,SAAC9M,GAChB,IAAMmQ,EAAa9W,OAAAshB,GAAA,EAAAthB,CAAO2E,EAAK/C,MAAMkV,eAC/BzD,EAAeyD,EAAcyK,KAAK,SAAAzS,GAAI,OAAIA,EAAKnI,KAAOA,IACxD0M,IACFA,EAAaa,SAAW,GACxBb,EAAamN,UAAY7b,EAAK6c,qBAAqB7a,IAGrDhC,EAAKoE,SAAS,CAAC+N,iBAAgBnS,EAAK8c,sBAGtC/N,YAAc,SAACS,EAAWxN,GACxB,IAAMmQ,EAAa9W,OAAAshB,GAAA,EAAAthB,CAAO2E,EAAK/C,MAAMkV,eAC/BzD,EAAeyD,EAAcyK,KAAK,SAAAzS,GAAI,OAAIA,EAAKnI,KAAOA,IAExD0M,IACFA,EAAauB,MAAQT,EAAM6I,OAAO9b,MAClCmS,EAAawB,WAAalQ,EAAKyc,cAAcjN,EAAM6I,OAAO9b,OAC1DmS,EAAamN,UAAY7b,EAAK6c,qBAAqB7a,IAGrDhC,EAAKoE,SAAS,CAAC+N,iBAAgBnS,EAAK8c,sBAGtC9N,YAAc,SAAChN,GACb,IAAMmQ,EAAa9W,OAAAshB,GAAA,EAAAthB,CAAO2E,EAAK/C,MAAMkV,eAC/BzD,EAAeyD,EAAcyK,KAAK,SAAAzS,GAAI,OAAIA,EAAKnI,KAAOA,IACxD0M,IACFA,EAAauB,MAAQ,GACrBvB,EAAawB,YAAa,EAC1BxB,EAAamN,UAAY7b,EAAK6c,qBAAqB7a,IAGrDhC,EAAKoE,SAAS,CAAC+N,iBAAgBnS,EAAK8c,sBAGtC7N,cAAgB,SAACO,EAAWuN,EAAmBC,GAC7C,IAAM7K,EAAa9W,OAAAshB,GAAA,EAAAthB,CAAO2E,EAAK/C,MAAMkV,eAC/BzD,EAAeyD,EAAcyK,KAAK,SAAAzS,GAAI,OAAIA,EAAKnI,KAAO+a,IAE5D,GAAGrO,EAAc,CACf,IACMiB,EADOtU,OAAAshB,GAAA,EAAAthB,CAAOqT,EAAagB,SACVkN,KAAK,SAAA1hB,GAAC,OAAIA,EAAE8G,KAAOgb,IACtCrN,IACFA,EAAOpT,MAAQiT,EAAM6I,OAAO9b,MAC5BmS,EAAamN,UAAY7b,EAAK6c,qBAAqBE,IAIvD/c,EAAKoE,SAAS,CAAC+N,iBAAgBnS,EAAK8c,sBAGtC5N,cAAgB,SAAC6N,EAAmBC,GAClC,IAAM7K,EAAa9W,OAAAshB,GAAA,EAAAthB,CAAO2E,EAAK/C,MAAMkV,eAC/BzD,EAAeyD,EAAcyK,KAAK,SAAAzS,GAAI,OAAIA,EAAKnI,KAAO+a,IAE5D,GAAGrO,EAAc,CACf,IACMiB,EADOtU,OAAAshB,GAAA,EAAAthB,CAAOqT,EAAagB,SACVkN,KAAK,SAAA1hB,GAAC,OAAIA,EAAE8G,KAAOgb,IACtCrN,IACFA,EAAOpT,MAAQ,GACfmS,EAAaoB,iBAAmB,EAChCpB,EAAamN,UAAY7b,EAAK6c,qBAAqBE,IAIvD/c,EAAKoE,SAAS,CAAC+N,iBAAgBnS,EAAK8c,sBAGtC3N,kBAAoB,SAAC4N,EAAmBC,GACtC,IAAM7K,EAAa9W,OAAAshB,GAAA,EAAAthB,CAAO2E,EAAK/C,MAAMkV,eAC/BzD,EAAeyD,EAAcyK,KAAK,SAAAzS,GAAI,OAAIA,EAAKnI,KAAO+a,IAExDrO,IACFA,EAAaoB,iBAAmBkN,EAChCtO,EAAamN,UAAY7b,EAAK6c,qBAAqBE,IAGrD/c,EAAKoE,SAAS,CAAC+N,iBAAgBnS,EAAK8c,sBAGtCG,eAAiB,WACf,IAAM9K,EAAa9W,OAAAshB,GAAA,EAAAthB,CAAO2E,EAAK/C,MAAMkV,eAEjC+K,EAAY,EACZ/K,EAActV,OAAS,IACzBqgB,EAAY/K,EAAcA,EAActV,OAAQ,GAAGmF,IAKrD,IAAMmb,EAAW,CACfnb,KAHFkb,EAIEjN,MAAM,GACNV,SAAU,GACVO,iBAAkB,EAClB+L,WAAW,EACX3L,YAAY,EACZR,QAAS,CACP,CAAC1N,GAAI,EAAGzF,MAAM,IACd,CAACyF,GAAI,EAAGzF,MAAM,IACd,CAACyF,GAAI,EAAGzF,MAAM,MAGlB4V,EAAc3M,KAAK2X,GAEnBnd,EAAKoE,SAAS,CAAC+N,qBAGjB/C,mBAAqB,SAACpN,GACpBhC,EAAKoE,SAAS,CACZ+N,cAAc9W,OAAAshB,GAAA,EAAAthB,CAAK2E,EAAK/C,MAAMkV,cAAciL,OAAO,SAAAjT,GAAI,OAAIA,EAAKnI,KAAOA,MACtEhC,EAAK8c,sBAGVL,cAAgB,SAACY,GAGf,SAAIA,EAAS7gB,MAFE,2CAEgB6gB,MAMjCR,qBAAuB,SAAC7a,GAatB,QAFqBhC,EAAK/C,MAAMkV,cAAcyK,KAAM,SAAAzS,GAAI,OAAIA,EAAKnI,KAAOA,GAAwB,KAAlBmI,EAAKoF,UAAmBpF,EAAK2F,iBAAmB,OATxGJ,EAS0HvF,EAAKuF,SARvI,GAAGnT,OAASmT,EAAQ,GAAGnT,OAC/BmT,EAAQ,GAAGnT,OAASmT,EAAQ,GAAGnT,OAC/BmT,EAAQ,GAAGnT,OAASmT,EAAQ,GAAGnT,QAM4H4N,EAAK+F,WATjJ,IAACR,OAmBxBoN,kBAAoB,WACA9c,EAAK/C,MAAMkV,cAAcyK,KAAK,SAAAzS,GAAI,OAAIA,EAAK0R,YAG3D7b,EAAKoE,SAAS,CAAC0X,mBAAmB,IAGlC9b,EAAKoE,SAAS,CAAC0X,mBAAmB,OAItCjB,SAAW,SAAC7N,EAAiBjP,GAC3B,IAAMuU,EAAOjX,OAAAa,EAAA,EAAAb,CAAA,GAAO2E,EAAK/C,MAAMqV,SAE/B,OAAQvU,GACN,IAAK,cACHuU,EAAQC,MAAM7I,WAAasD,EAC3B,MAEF,IAAK,SACHsF,EAAQE,OAAOjL,MAAQyF,EACvB,MAEF,IAAK,UACHsF,EAAQ/D,OAAOuD,OAAOpI,WAAasD,EACnC,MAEF,IAAK,uBACHsF,EAAQyD,UAAUxO,MAAQyF,EAK9BhN,EAAKoE,SAAS,CAACkO,eAGjBwI,SAAW,SAACwC,EAAiBvf,GAC3B,IAAMuU,EAAOjX,OAAAa,EAAA,EAAAb,CAAA,GAAO2E,EAAK/C,MAAMqV,SACzBiL,EAAG,GAAAhlB,OAAMwF,GAANxF,OAAc+kB,EAAY/gB,OAC7Bwf,EAAuB/b,EAAK/C,MAAM8e,iBAExC,OAAQwB,GACN,IAAK,eACHjL,EAAQC,MAAM5M,OAASoW,EAAiBxJ,MAAM,GAAG5M,OACjD2M,EAAQC,MAAM3M,aAAemW,EAAiBxJ,MAAM,GAAG3M,aACvD,MAEF,IAAK,eACH0M,EAAQC,MAAM5M,OAASoW,EAAiBxJ,MAAM,GAAG5M,OACjD2M,EAAQC,MAAM3M,aAAemW,EAAiBxJ,MAAM,GAAG3M,aACvD,MAEF,IAAK,eACH0M,EAAQC,MAAM5M,OAASoW,EAAiBxJ,MAAM,GAAG5M,OACjD2M,EAAQC,MAAM3M,aAAemW,EAAiBxJ,MAAM,GAAG3M,aACvD,MAEF,IAAK,UACH0M,EAAQE,OAAO1B,WAAaiL,EAAiBvJ,OAAO,GAAG1B,WACvDwB,EAAQE,OAAO3B,SAAWkL,EAAiBvJ,OAAO,GAAG3B,SACrDyB,EAAQE,OAAOzB,WAAagL,EAAiBvJ,OAAO,GAAGzB,WACvDuB,EAAQE,OAAOxB,WAAa+K,EAAiBvJ,OAAO,GAAGxB,WACvDsB,EAAQE,OAAO0J,eAAiBH,EAAiBvJ,OAAO,GAAG0J,eAC3D,MAEF,IAAK,UACH5J,EAAQE,OAAO1B,WAAaiL,EAAiBvJ,OAAO,GAAG1B,WACvDwB,EAAQE,OAAO3B,SAAWkL,EAAiBvJ,OAAO,GAAG3B,SACrDyB,EAAQE,OAAOzB,WAAagL,EAAiBvJ,OAAO,GAAGzB,WACvDuB,EAAQE,OAAOxB,WAAa+K,EAAiBvJ,OAAO,GAAGxB,WACvDsB,EAAQE,OAAO0J,eAAiBH,EAAiBvJ,OAAO,GAAG0J,eAC3D,MAEF,IAAK,WACH5J,EAAQ/D,OAAOuD,OAAOnM,OAASoW,EAAiBxN,OAAOuD,OAAO,GAAGnM,OACjE2M,EAAQ/D,OAAOuD,OAAOvK,MAAQwU,EAAiBxN,OAAOuD,OAAO,GAAGvK,MAChE+K,EAAQ/D,OAAOuD,OAAOhB,WAAaiL,EAAiBxN,OAAOuD,OAAO,GAAGhB,WACrEwB,EAAQ/D,OAAOuD,OAAOjB,SAAWkL,EAAiBxN,OAAOuD,OAAO,GAAGjB,SACnEyB,EAAQ/D,OAAOuD,OAAOf,WAAagL,EAAiBxN,OAAOuD,OAAO,GAAGf,WACrEuB,EAAQ/D,OAAOmF,MAAM/N,OAASoW,EAAiBxN,OAAOmF,MAAM,GAAG/N,OAC/D2M,EAAQ/D,OAAOmF,MAAMnM,MAAQwU,EAAiBxN,OAAOmF,MAAM,GAAGnM,MAC9D,MAEF,IAAK,WACH+K,EAAQ/D,OAAOuD,OAAOnM,OAASoW,EAAiBxN,OAAOuD,OAAO,GAAGnM,OACjE2M,EAAQ/D,OAAOuD,OAAOvK,MAAQwU,EAAiBxN,OAAOuD,OAAO,GAAGvK,MAChE+K,EAAQ/D,OAAOuD,OAAOhB,WAAaiL,EAAiBxN,OAAOuD,OAAO,GAAGhB,WACrEwB,EAAQ/D,OAAOuD,OAAOjB,SAAWkL,EAAiBxN,OAAOuD,OAAO,GAAGjB,SACnEyB,EAAQ/D,OAAOuD,OAAOf,WAAagL,EAAiBxN,OAAOuD,OAAO,GAAGf,WACrEuB,EAAQ/D,OAAOmF,MAAM/N,OAASoW,EAAiBxN,OAAOmF,MAAM,GAAG/N,OAC/D2M,EAAQ/D,OAAOmF,MAAMnM,MAAQwU,EAAiBxN,OAAOmF,MAAM,GAAGnM,MAC9D,MAEF,IAAK,wBACH+K,EAAQyD,UAAUjF,WAAaiL,EAAiBhG,UAAU,GAAGjF,WAC7DwB,EAAQyD,UAAUlF,SAAWkL,EAAiBhG,UAAU,GAAGlF,SAC3D,MAEF,IAAK,wBACHyB,EAAQyD,UAAUjF,WAAaiL,EAAiBhG,UAAU,GAAGjF,WAC7DwB,EAAQyD,UAAUlF,SAAWkL,EAAiBhG,UAAU,GAAGlF,SAC3D,MAEF,IAAK,wBACHyB,EAAQyD,UAAUjF,WAAaiL,EAAiBhG,UAAU,GAAGjF,WAC7DwB,EAAQyD,UAAUlF,SAAWkL,EAAiBhG,UAAU,GAAGlF,SAI/D7Q,EAAKoE,SAAS,CAACkO,qFAGR,ICjearV,EDiebC,EAAAC,KAAAyZ,EAcHzZ,KAAKF,MAXPc,EAHK6Y,EAGL7Y,MACAyN,EAJKoL,EAILpL,YACA2G,EALKyE,EAKLzE,cACAtG,EANK+K,EAML/K,iBACAuE,EAPKwG,EAOLxG,iBACAC,EARKuG,EAQLvG,sBACAyL,EATKlF,EASLkF,kBACA9P,EAVK4K,EAUL5K,iBACAyE,EAXKmG,EAWLnG,sBACA1K,EAZK6Q,EAYL7Q,OACAuM,EAbKsE,EAaLtE,QAGI1G,EAAgB,CACpB,CAACpR,MAAO,QAAS+B,MAAO,QACxB,CAAC/B,MAAO,QAAS+B,MAAO,SAG1B,OACElC,EAAA,cAACyM,EAAD,KACEzM,EAAA,cAAC0M,EAAD,KACE1M,EAAA,cAACmjB,GAAD,kDACAnjB,EAAA,cAACojB,GAAD,KACEpjB,EAAA,wBAAIA,EAAA,cAACqjB,GAAAxiB,EAAD,CAAgBV,MAAM,GAAGge,aAAa,YAA1C,sBACAne,EAAA,yIAEFA,EAAA,cAACoO,GAAD,KACEpO,EAAA,cAACsjB,GAAD,KACEtjB,EAAA,cAACujB,GAAD,CACE7f,MAAOA,EACPyN,YAAaA,EACbC,eAAgBtO,KAAKsO,eACrBC,YAAavO,KAAKuO,YAClBC,kBAAmBxO,KAAKwO,kBACxBG,uBAAwB3O,KAAK2O,uBAC7BF,cAAeA,EACfC,iBAAkBA,EAClBE,2BAA4B5O,KAAK4O,2BACjCC,iBAAkBA,IAEpB3R,EAAA,cAACwjB,GAAA,EAAD,KAEE1L,EAAc/T,IAAI,SAAC+L,EAAMmJ,GAAP,OAChBjZ,EAAA,cAACyjB,GAAA,EAAD,CAAevf,IAAK4L,EAAKnI,GAAI+b,QAAS,IAAKC,WAAW,QACpD3jB,EAAA,cAAC4jB,GAAD,CACErP,UAAW0E,EACX5E,aAAcvE,EACdwE,oBAAqBwD,EAActV,OACnCgS,eAAgB3R,EAAK2R,eACrBE,YAAa7R,EAAK6R,YAClBD,eAAgB5R,EAAK4R,eACrBE,YAAa9R,EAAK8R,YAClBC,cAAe/R,EAAK+R,cACpBC,cAAehS,EAAKgS,cACpBC,kBAAmBjS,EAAKiS,kBACxBC,mBAAoBlS,EAAKkS,yBAQ/B+C,EAActV,OAAS,GACvBxC,EAAA,cAAC6jB,GAAD,CACEhU,QAAS/M,KAAK8f,gBAEd5iB,EAAA,cAAC8jB,GAAAjjB,EAAD,CAAeV,MAAM,GAAGge,aAAa,YAHvC,gBAQFne,EAAA,cAAC+jB,GAAD,CACEhO,iBAAkBA,EAClBxE,cAAeA,EACfyE,sBAAuBA,EACvBC,gCAAiCnT,KAAKmT,gCACtCC,4BAA6BpT,KAAKoT,4BAClC9E,eAAgBtO,KAAKsO,eACrB+E,uBAAwBrT,KAAKqT,uBAC7BC,sBAAuBA,IAIvB1K,GACA1L,EAAA,cAACgkB,GAAD,CACEtY,OAAQA,EACR8U,SAAU1d,KAAK0d,SACfC,SAAU3d,KAAK2d,YAKrBzgB,EAAA,cAACsO,GAAD,KACEtO,EAAA,cAAC4Y,GAAD,CACElV,MAAOA,EACPyN,YAAaA,EACb4E,iBAAkBA,EAClB+B,cAAeA,EACftG,iBAAkBA,EAClBwE,sBAAuBA,EACvBtK,OAAQuM,IAEVjY,EAAA,cAACikB,GAAD,CACEtkB,MC5kBQiD,ED4kBME,KAAKF,MC3kBjC,sIAAA1E,OAMkB0E,EAAMc,MANxB,oCAAAxF,OAO4B0E,EAAM4O,iBAAiBtE,MAPnD,gCAAAhP,OAQwB0E,EAAM4O,iBAAiBsB,QAR/C,8BAAA5U,OASuB0E,EAAMuO,YAT7B,qCAAAjT,OAU6B0E,EAAMoT,sBAAsB9I,MAVzD,iCAAAhP,OAWyB0E,EAAMoT,sBAAsBlD,QAXrD,+BAAA5U,OAYwB0E,EAAMmT,iBAZ9B,6BAAA7X,OAaqBsP,KAAKC,UAAU7K,EAAMkV,eAb1C,wDAAA5Z,OAgBqB0E,EAAMqV,QAAQgE,KAAKzF,SAhBxC,oCAAAtY,OAiB4B0E,EAAMqV,QAAQgE,KAAK2F,gBAjB/C,2BAAA1jB,OAkBmB0E,EAAMqV,QAAQgE,KAAK3Q,OAlBtC,iCAAApN,OAmByB0E,EAAMqV,QAAQgE,KAAK1Q,aAnB5C,6DAAArN,OAsBuB0E,EAAMqV,QAAQC,MAAM7I,WAtB3C,2BAAAnR,OAuBmB0E,EAAMqV,QAAQC,MAAM5M,OAvBvC,iCAAApN,OAwByB0E,EAAMqV,QAAQC,MAAM3M,aAxB7C,8DAAArN,OA2BuB0E,EAAMqV,QAAQE,OAAO1B,WA3B5C,6BAAAvY,OA4BqB0E,EAAMqV,QAAQE,OAAO3B,SA5B1C,0BAAAtY,OA6BkB0E,EAAMqV,QAAQE,OAAOjL,MA7BvC,+BAAAhP,OA8BuB0E,EAAMqV,QAAQE,OAAOxB,WA9B5C,mCAAAzY,OA+B2B0E,EAAMqV,QAAQE,OAAO0J,eA/BhD,+BAAA3jB,OAgCuB0E,EAAMqV,QAAQE,OAAOzB,WAhC5C,gFAAAxY,OAoCoB0E,EAAMqV,QAAQ/D,OAAOuD,OAAOvK,MApChD,iCAAAhP,OAqCyB0E,EAAMqV,QAAQ/D,OAAOuD,OAAOpI,WArCrD,6BAAAnR,OAsCqB0E,EAAMqV,QAAQ/D,OAAOuD,OAAOnM,OAtCjD,+BAAApN,OAuCuB0E,EAAMqV,QAAQ/D,OAAOuD,OAAOjB,SAvCnD,iCAAAtY,OAwCyB0E,EAAMqV,QAAQ/D,OAAOuD,OAAOhB,WAxCrD,iCAAAvY,OAyCyB0E,EAAMqV,QAAQ/D,OAAOuD,OAAOf,WAzCrD,mEAAAxY,OA4CyB0E,EAAMqV,QAAQ/D,OAAOmF,MAAMhK,WA5CpD,4BAAAnR,OA6CoB0E,EAAMqV,QAAQ/D,OAAOmF,MAAMnM,MA7C/C,6BAAAhP,OA8CqB0E,EAAMqV,QAAQ/D,OAAOmF,MAAM/N,OA9ChD,+EAAApN,OAkDuB0E,EAAMqV,QAAQyD,UAAUjF,WAlD/C,6BAAAvY,OAmDqB0E,EAAMqV,QAAQyD,UAAUlF,SAnD7C,0BAAAtY,OAoDkB0E,EAAMqV,QAAQyD,UAAUxO,MApD1C,iEAAAhP,OAyDiBie,OAAO+H,SAASC,OAzDjC,qEAAAjmB,OA0DiBie,OAAO+H,SAASC,OA1DjC,wEAAAjmB,OA2DiBie,OAAO+H,SAASC,OA3DjC,4DD4kBcnF,WAAYyC,eAvjBHld,4CEDV6f,GAlBO,SAAA9kB,GAA0C,IAAxC+kB,EAAwC/kB,EAAxC+kB,OAAQC,EAAgChlB,EAAhCglB,WAAYC,EAAoBjlB,EAApBilB,eAC1C,OACE3jB,EAAAC,EAAAC,cAAC0e,GAAA,EAAD,KACE5e,EAAAC,EAAAC,cAAC2e,GAAA,EAAD,CACER,QAAS,CACP,CAACC,KAAM,SAAUrP,QAAS,kBAAMyU,EAAWD,KAC3C,CAACnF,KAAM,SAAUrb,WAAY,UAAWgM,QAAS0U,IAEnD1gB,WAAW,SACX8b,QAAQ,mBAER/e,EAAAC,EAAAC,cAAA,yDACAF,EAAAC,EAAAC,cAAA,kMCXR,IAAM0jB,GAAsBvnB,UAAOC,IAAVunB,MAoBVC,GAdgB,SAAAplB,GAA8B,IAA5BqlB,EAA4BrlB,EAA5BqlB,WAAYC,EAAgBtlB,EAAhBslB,WACrCC,EAAQvb,MAAMwb,KAAK,CAACtiB,OAAQmiB,EAAWI,WAAY,SAACC,EAAGC,GAAJ,OAAUA,EAAI,IAEvE,OACErkB,EAAAC,EAAAC,cAAC0jB,GAAD,KACE5jB,EAAAC,EAAAC,cAACokB,GAAA,EAAD,CACEL,MAAOA,EACPM,cAAeR,EAAWS,aAAe,EACzCpT,SAAU,SAAC2L,EAAG0H,GAAJ,OAAaT,EAAU,eAAA1mB,OAAgBmnB,2cCPzD,IAAMC,GAAWroB,UAAOsoB,GAAVC,MASRC,GAAWxoB,UAAOyoB,GAAVC,MA4HC7c,gNA/GblG,MAAQ,CACNgjB,MAAO,CACL,CACEje,GAAI,EACJxC,IAAK,GACL0gB,QAAS,GACTC,UAAW,GACXpgB,OAAQ,GACR7F,MAAO,CACL,CACEF,KAAM,KACNkI,QAAS,GACTke,cAAe,GACfxnB,OAAQ,CAAC,QAKjBomB,WAAY,GACZqB,qBAAe,QAOjBC,gBAAkB,SAAC9gB,GACjBsD,EAAmBtD,GAClB0H,KAAK,SAAAlI,GAAQ,OAAIgB,EAAKugB,iBAAiBvhB,KACvC+I,MAAM,SAAA7N,GAAK,OAAIsmB,QAAQC,IAAIvmB,QAG9BqmB,iBAAmB,SAAC1gB,GAClBG,EAAKoE,SAAS,CACZ6b,MAAOpgB,EAAKogB,MACZjB,WAAYnf,EAAKmf,gBAIrB0B,mBAAqB,SAAC1e,GAAD,OAAehC,EAAKoE,SAAS,CAACic,qBAAere,OAElE2c,WAAa,SAAC3c,GACZS,EAAaT,GACZkF,KAAM,SAAA9O,GACFA,GACD4H,EAAKoE,SAAS,CACZ6b,MAAM5kB,OAAAshB,GAAA,EAAAthB,CAAK2E,EAAK/C,MAAMgjB,MAAM7C,OAAO,SAAAjT,GAAI,OAAIA,EAAKnI,KAAOA,YAM/D4c,eAAiB,kBAAM5e,EAAKoE,SAAS,CAACic,qBAAe,UAErDpB,WAAa,SAACzf,GAAD,OAAgBQ,EAAKsgB,gBAAgB9gB,uFA/BhDrC,KAAKmjB,gBAAgB,kDAiCd,IAAApjB,EAAAC,KAAAyZ,EACoCzZ,KAAKF,MAAzCgjB,EADArJ,EACAqJ,MAAOI,EADPzJ,EACOyJ,mBAAerB,EADtBpI,EACsBoI,WAE7B,OACE/jB,EAAAC,EAAAC,cAAC2L,EAAD,KACE7L,EAAAC,EAAAC,cAAC4L,EAAD,KACE9L,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,oDACAF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACwkB,GAAD,WACA1kB,EAAAC,EAAAC,cAACwkB,GAAD,YACA1kB,EAAAC,EAAAC,cAACwkB,GAAD,cACA1kB,EAAAC,EAAAC,cAACwkB,GAAD,eACA1kB,EAAAC,EAAAC,cAACwkB,GAAD,iBAEDM,EAAM7hB,IAAI,SAAA+L,GAAI,OACblP,EAAAC,EAAAC,cAAA,MAAIoD,IAAK4L,EAAKnI,IACZ/G,EAAAC,EAAAC,cAAC2kB,GAAD,KAAW3V,EAAKnI,IAChB/G,EAAAC,EAAAC,cAAC2kB,GAAD,KAAW3V,EAAK3K,KAChBvE,EAAAC,EAAAC,cAAC2kB,GAAD,KAAW3V,EAAKgW,WAChBllB,EAAAC,EAAAC,cAAC2kB,GAAD,KAAW3V,EAAKpK,QAChB9E,EAAAC,EAAAC,cAAC2kB,GAAD,KACE7kB,EAAAC,EAAAC,cAACwlB,GAAA,EAAD,CACEC,QAAQ,gBACRC,YAAY,SACZC,YAAY,EACZC,SAAS,gBAET9lB,EAAAC,EAAAC,cAAC6lB,GAAA,EAAD,KACE/lB,EAAAC,EAAAC,cAAC8lB,GAAA,EAAD,CAAc/W,QAAS,kBAAMhN,EAAKwjB,mBAAmBvW,EAAKnI,MAA1D,YAMFqe,IAAkBlW,EAAKnI,IACvB/G,EAAAC,EAAAC,cAAC+lB,GAAD,CACExC,OAAQvU,EAAKnI,GACb2c,WAAYzhB,EAAKyhB,WACjBC,eAAgB1hB,EAAK0hB,uBAQnC3jB,EAAAC,EAAAC,cAACgmB,GAAD,CAAwBnC,WAAYA,EAAYC,WAAY9hB,KAAK8hB,sBAzGjDva,yvBC1B1B,IAAM0c,GAAW9pB,kBAAOuhB,IAAPvhB,CAAH+pB,MAiBRC,GAAYhqB,kBAAO8pB,GAAP9pB,CAAHiqB,MAYTC,GAAYlqB,UAAOC,IAAVkqB,MA4BAC,eAvBF,WACX,IAAMngB,EAAO,IAAI1C,EAMjB,OACE5D,EAAAC,EAAAC,cAACqmB,GAAD,KAEIjgB,EAAKJ,WACHlG,EAAAC,EAAAC,cAACimB,GAAD,CAAUxH,GAAG,SAAS1P,QART,WACnB3I,EAAKH,WAOC,YAEAnG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAU,SAAA,KACEX,EAAAC,EAAAC,cAACmmB,GAAD,CAAW1H,GAAG,iBAAd,WACA3e,EAAAC,EAAAC,cAACimB,GAAD,CAAUxH,GAAG,UAAb,0GChDZ,IAAM+H,GAAYrqB,UAAOsqB,IAAVC,MAgBAH,eAZH,WAGV,OAFa,IAAI7iB,GAGVsC,YACLlG,EAAAC,EAAAC,cAACwmB,GAAD,KACE1mB,EAAAC,EAAAC,cAACwe,GAAD,CAASC,GAAG,KAAZ,QACA3e,EAAAC,EAAAC,cAACwe,GAAD,CAASC,GAAG,iBAAZ,2TChBN,IAQekI,GARFxqB,UAAOC,IAAVwqB,0YCQV,IAAMC,GAAS1qB,UAAOkb,OAAVyP,MAMNC,GAAkB5qB,kBAAOD,EAAPC,CAAH6qB,MAIfC,GAAQ9qB,UAAOC,IAAV8qB,MA4BIC,GAvBH,WACV,OACErnB,EAAAC,EAAAC,cAAConB,EAAA,EAAD,KACEtnB,EAAAC,EAAAC,cAAC6mB,GAAD,KACE/mB,EAAAC,EAAAC,cAAC+mB,GAAD,KACEjnB,EAAAC,EAAAC,cAACinB,GAAD,KACEnnB,EAAAC,EAAAC,cAACqnB,GAAD,MACAvnB,EAAAC,EAAAC,cAACsnB,GAAD,OAEFxnB,EAAAC,EAAAC,cAACunB,GAAD,QAGJznB,EAAAC,EAAAC,cAACwnB,EAAA,EAAD,KACE1nB,EAAAC,EAAAC,cAACwnB,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,KACjC9nB,EAAAC,EAAAC,cAACwnB,EAAA,EAAD,CAAOC,KAAK,SAASE,UAAWza,KAChCpN,EAAAC,EAAAC,cAACwnB,EAAA,EAAD,CAAOC,KAAK,gBAAgBE,UAAWta,KACvCvN,EAAAC,EAAAC,cAACwnB,EAAA,EAAD,CAAOC,KAAK,UAAUE,UAAWE,KACjC/nB,EAAAC,EAAAC,cAACwnB,EAAA,EAAD,CAAOC,KAAK,gBAAgBE,UAAWG,sBCnC/CC,IAASC,OACPloB,EAAAC,EAAAC,cAACioB,GAAD,MACAjL,SAASkL,eAAe","file":"static/js/main.4e1fdccb.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 0 15px;\r\n`\r\nexport default Container","import styled from 'styled-components'\r\n\r\nconst SpinnerContainer = styled.div`\r\n  text-align: center;\r\n  display: block;\r\n  margin: 0 auto;\r\n`\r\nexport default SpinnerContainer","import styled from 'styled-components'\r\n\r\nconst AppMain = styled.main`\r\n  padding: 90px 0 30px 0;\r\n`\r\nexport default AppMain","import { withProps } from 'recompose'\r\n\r\nexport interface ITranslations {\r\n  signIn: string\r\n  signUp: string\r\n  start: string\r\n  errorTitle: string\r\n  result: (correct: any, all: any) => string\r\n  editorHeading: string\r\n  basicPartTitle: string\r\n  basicPartTeaser: string\r\n  basicPartTeaserPlaceholder: string\r\n  errors: {\r\n    LOGIN_TOO_SHORT: string\r\n    PASSWORD_ERROR: string\r\n    PASSWORD_AS_EMAIL: string\r\n    IN_USE: string\r\n    PASSWORD_NOT_SAME: string\r\n    IS_EMPTY: string\r\n    MAX_CHARACTERS: string\r\n    INCORRECT: string\r\n    SITE_URL_ERROR: string\r\n    PARS_ERROR: string\r\n    NAME_TOO_SHORT: string\r\n  }\r\n}\r\n\r\nexport interface IWithTranslations {\r\n  T?: ITranslations\r\n  getErrorByCode?: (code: string) => string | undefined\r\n}\r\n\r\nexport const en: ITranslations = {\r\n  signIn: 'Sign In',\r\n  signUp: 'Sign Up',\r\n  start: 'Start',\r\n  errorTitle: 'Error!',\r\n  result: (correct, all) => `${correct} out of ${all}`,\r\n  editorHeading: 'That\\'s cool! You can start creating your Interactive right away!',\r\n  basicPartTitle: 'Title:',\r\n  basicPartTeaser: 'Teaser:',\r\n  basicPartTeaserPlaceholder: 'Enter URL',\r\n  errors: {\r\n    LOGIN_TOO_SHORT: 'Please enter a valid email',\r\n    PASSWORD_ERROR: 'The password must contain 6 to 50 characters with at least one uppercase and one number',\r\n    PASSWORD_AS_EMAIL: 'Password cannot match User\\'s login',\r\n    IN_USE: 'Username already in use, try another one',\r\n    PASSWORD_NOT_SAME: 'Passwords do not match',\r\n    IS_EMPTY: 'The field can not be empty',\r\n    MAX_CHARACTERS: 'You have exceeded the maximum number of characters allowed',\r\n    INCORRECT: 'Sorry, your login or password are incorrect. Please, try again',\r\n    SITE_URL_ERROR: 'Enter the correct website address',\r\n    PARS_ERROR: 'Parsing is not completed. Please, try again',\r\n    NAME_TOO_SHORT: 'Name too short'\r\n  },\r\n}\r\n\r\nexport const ru: ITranslations = {\r\n  signIn: 'Войти',\r\n  signUp: 'Зарегистрироваться',\r\n  start: 'Старт',\r\n  errorTitle: 'Ошибка!',\r\n  result: (correct, all) => `${correct} из ${all}`,\r\n  editorHeading: 'Это круто! Вы можете начать создавать свой Интерактив прямо сейчас!',\r\n  basicPartTitle: 'Заголовок:',\r\n  basicPartTeaser: 'Тизер изображения:',\r\n  basicPartTeaserPlaceholder: 'Введите адрес сайта',\r\n  errors: {\r\n    LOGIN_TOO_SHORT: 'Введите, пожалуйста, действительный адрес электронной почты',\r\n    PASSWORD_ERROR: 'Пароль должен содержать не менее 6 символов с комбинацией цифр, строчных и прописных букв',\r\n    PASSWORD_AS_EMAIL: 'Пароль не может совпадать с логином пользователя',\r\n    IN_USE: 'Имя пользователя уже используется, попробуйте другой',\r\n    PASSWORD_NOT_SAME: 'Поля \"Пароль\" и \"Повторить пароль\" должны совпадать',\r\n    IS_EMPTY: 'Поле не может быть пустым',\r\n    MAX_CHARACTERS: 'Вы превысили максимально допустимое количество символов',\r\n    INCORRECT: 'Извините, ваше имя пользователя или пароль неверны. Пожалуйста, попробуйте еще раз',\r\n    SITE_URL_ERROR: 'Введите правильно адрес сайта',\r\n    PARS_ERROR: 'Разбор не завершен. Пожалуйста, попробуйте еще раз',\r\n    NAME_TOO_SHORT: 'Слишком короткое имя!'\r\n  },\r\n}\r\n\r\nexport const languageTable = {\r\n  en,\r\n  ru,\r\n}\r\n\r\nexport const withTranslations = withProps<any, any>(({lang = 'en'}) => ({\r\n  T: languageTable[lang],\r\n  getErrorByCode: (code: string) => languageTable[lang].errors[code],\r\n}))\r\n","import * as React from 'react'\r\nimport {\r\n  ErrorMessage,\r\n  HelperMessage,\r\n  ValidMessage,\r\n} from '@atlaskit/form'\r\n\r\n\r\ninterface IFieldMessage {\r\n  error?: string\r\n  helpMessage?: string\r\n  validMessage?: string\r\n}\r\n\r\nconst FieldMessage = ({error, helpMessage, validMessage}: IFieldMessage) =>\r\n<>\r\n  {!error && !validMessage && (\r\n    <HelperMessage>{helpMessage}</HelperMessage>\r\n  )}\r\n  {error && (\r\n    <ErrorMessage>{error}</ErrorMessage>\r\n  )}\r\n  {validMessage && (\r\n    <ValidMessage>{validMessage}</ValidMessage>\r\n  )}\r\n</>\r\n\r\nexport default FieldMessage;","import React from 'react'\r\nimport { Field as BaseField } from '@atlaskit/form'\r\nimport TextField from '@atlaskit/field-text'\r\n\r\nimport FieldMessage from './components/FieldMessage'\r\nimport { IWithTranslations, withTranslations } from '../../Translation'\r\nimport { IFormState } from '../Form'\r\n\r\nexport interface IRegexField extends IWithTranslations, IFormState {\r\n  regex?: RegExp\r\n  fieldName: string\r\n  label?: string\r\n  placeholder?: string\r\n  fieldProps?: any\r\n  textFieldProps?: TextField\r\n  validMessage?: string\r\n  helpMessage?: string\r\n  showValidLine?: boolean\r\n  validOnType?: boolean\r\n  validationType?: string\r\n  validate?: any\r\n  disabled?: any\r\n}\r\n\r\nconst Field = ({\r\n  fieldName,\r\n  label,\r\n  placeholder,\r\n  fieldProps,\r\n  textFieldProps,\r\n  getErrorByCode,\r\n  validMessage,\r\n  disabled,\r\n  helpMessage,\r\n  validate,\r\n  submitted,\r\n  validationType,\r\n  validOnType }: IRegexField) => {\r\n  return (\r\n    <BaseField\r\n      defaultValue=\"\"\r\n      name={fieldName}\r\n      validate={validate}\r\n      isRequired={true}\r\n      label={label}\r\n      {...fieldProps}\r\n    >\r\n      {({fieldProps, error, meta}) => (\r\n        <>\r\n          <TextField\r\n            placeholder={placeholder}\r\n            disabled={disabled}\r\n            isLabelHidden\r\n            shouldFitContainer\r\n            maxLength={fieldName === 'email' || fieldName === 'url' || fieldName === 'name' ? '255' : fieldName === 'password' || fieldName === 'password_confirmation' ? '50' : undefined}\r\n            {...{...textFieldProps, ...fieldProps}}\r\n          />\r\n          <FieldMessage \r\n            error={getErrorByCode && getErrorByCode(error)}\r\n            helpMessage={helpMessage}\r\n            validMessage={\r\n              validationType &&\r\n              (validOnType || submitted) &&\r\n              meta.valid && validMessage\r\n            }\r\n          />\r\n        </>\r\n      )}\r\n    </BaseField>\r\n  )\r\n}\r\n\r\nexport default withTranslations(Field)\r\n","import { IRegexField } from '../Field'\r\n\r\nexport interface IFormParams {\r\n  formProps: {\r\n    ref: any\r\n    onSubmit: (e: Event) => void\r\n    onKeyDown: (e: KeyboardEvent) => void\r\n  }\r\n  disabled: boolean\r\n  dirty: boolean\r\n  submitting: boolean\r\n  getValues: () => any\r\n}\r\n\r\nexport const validate = (\r\n  fieldProps: IRegexField,\r\n  formParams: IFormParams,\r\n  getSubmitted: () => boolean\r\n) => (value: string) => {\r\n  const match = value.match(fieldProps.regex as RegExp)\r\n  const values = formParams.getValues()\r\n\r\n  const submitted = getSubmitted();\r\n\r\n  if(!fieldProps.validOnType && !submitted){\r\n    return undefined;\r\n  }\r\n  switch (fieldProps.validationType) {\r\n    case 'password': {\r\n      if (values.password.length < 1) return 'IS_EMPTY';\r\n      if (values.password.length > 50) return 'MAX_CHARACTERS'\r\n      if (values.password === values.email) return 'PASSWORD_AS_EMAIL'\r\n      const passwordToShort = match ? undefined : 'PASSWORD_ERROR';\r\n      return passwordToShort;\r\n    }\r\n    case 'email': {\r\n      if (values.email.length < 1) return 'IS_EMPTY';\r\n      if (values.email.length > 255) return 'MAX_CHARACTERS'\r\n      const loginTooShort = match && values.email.length > 0 ? undefined : 'LOGIN_TOO_SHORT';\r\n      return loginTooShort;\r\n    }\r\n    case 'password_confirmation': {\r\n      if (values.password_confirmation < 1) return 'IS_EMPTY';\r\n      const isValid = match && values.password_confirmation === values.password;\r\n      return isValid ? undefined : 'PASSWORD_NOT_SAME';\r\n    }\r\n    case 'url': {\r\n      if (values.siteUrl < 1) return 'IS_EMPTY';\r\n      const isValid = match ? undefined : 'SITE_URL_ERROR';\r\n      return isValid;\r\n    }\r\n    case 'name': {\r\n      if (values.name < 1) return 'IS_EMPTY';\r\n      const isValid = values.name.length >= 3 ? undefined : 'NAME_TOO_SHORT';\r\n      return isValid;\r\n    }\r\n  }\r\n}\r\n","import * as React from 'react'\r\nimport Button from '@atlaskit/button'\r\nimport BaseForm, { FormFooter, FormHeader, FormSection } from '@atlaskit/form'\r\nimport SectionMessage from '@atlaskit/section-message'\r\n\r\nimport { IWithTranslations, withTranslations } from '../../Translation'\r\nimport Field, { IRegexField } from '../Field'\r\nimport { IFormParams, validate } from './validate'\r\n\r\nexport interface IField extends IRegexField {}\r\n\r\nexport interface ILoginForm extends IWithTranslations {\r\n  fields: IField[]\r\n  formName: string\r\n  onSubmit: any\r\n  authError: string\r\n  parsError: string\r\n  registerError: string\r\n}\r\n\r\nexport interface IFormState {\r\n  submitted?: boolean,\r\n}\r\n\r\nclass Form extends React.Component<ILoginForm, IFormState> {\r\n  state = {\r\n    submitted: false,\r\n  }\r\n\r\n  render () {\r\n    const {T, fields, formName, onSubmit, authError, parsError, registerError} = this.props;\r\n    const { submitted } = this.state;\r\n    const getSubmitted = () => submitted;\r\n\r\n    return (\r\n      <BaseForm\r\n        onSubmit={onSubmit}\r\n      >\r\n        {(formParams: IFormParams) => (\r\n          // @ts-ignore\r\n          <form {...formParams.formProps}>\r\n          <FormHeader \r\n            title={formName==='SIGN IN' && T && T.signIn.toUpperCase() || \r\n                  formName==='SIGN UP' && T && T.signUp.toUpperCase()}\r\n          />\r\n            {\r\n              authError === '422' &&\r\n                <SectionMessage appearance=\"error\" title={T && T.errorTitle} >\r\n                  <p>{T && T.errors.INCORRECT}</p>\r\n                </SectionMessage>\r\n            }\r\n            {\r\n              parsError &&\r\n                <SectionMessage appearance=\"error\" title={T && T.errorTitle} >\r\n                  <p>{T && T.errors.PARS_ERROR}</p>\r\n                </SectionMessage>\r\n            }\r\n            {\r\n              registerError &&\r\n              <SectionMessage appearance=\"error\" title={T && T.errorTitle} >\r\n                <p>{registerError}</p>\r\n              </SectionMessage>\r\n            }\r\n            <FormSection>\r\n              {\r\n                fields.map(fieldProps =>\r\n                  <Field\r\n                    disabled={formParams.submitting}\r\n                    key={fieldProps.fieldName}\r\n                    validate={validate(fieldProps, formParams, getSubmitted)}\r\n                    {...{...fieldProps, ...this.state}}\r\n                  />\r\n                )\r\n              }\r\n            </FormSection>\r\n            <FormFooter>\r\n              <Button\r\n                shouldFitContainer\r\n                type=\"submit\"\r\n                isLoading={formName !== 'START' && formParams.submitting}\r\n                appearance=\"primary\"\r\n              >\r\n                {formName === 'SIGN IN' && T && T.signIn}\r\n                {formName === 'SIGN UP' && T && T.signUp}\r\n                {formName === 'START' && T && T.start}\r\n              </Button>\r\n            </FormFooter>\r\n          </form>\r\n        )}\r\n      </BaseForm>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withTranslations(Form)\r\n","import axios from 'axios'\r\n\r\nexport default class AuthService {\r\n\r\n  toRegister = async ({name, email, password, password_confirmation}) => {\r\n    try {\r\n      const response = await axios({\r\n        method: 'POST',\r\n        url: '/registration',\r\n        credentails: 'include',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        data: {\r\n          name,\r\n          email,\r\n          password,\r\n          password_confirmation\r\n        },\r\n      });\r\n      if (response.status >= 200 && response.status < 300) {\r\n        this.setToken(response.data.data.token);\r\n        this.setName(response.data.data.name);\r\n        return response.data.data.token;\r\n      }\r\n    }\r\n    catch (error) {\r\n      throw new Error(error.response.status);\r\n    }\r\n  }\r\n\r\n  logIn = async ({email, password}) => {\r\n    try {\r\n      const response = await axios({\r\n        method: 'POST',\r\n        url: '/login',\r\n        credentails: 'include',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        data: {\r\n          email,\r\n          password\r\n        },\r\n      });\r\n      if (response.status >= 200 && response.status < 300) {\r\n        this.setToken(response.data.data.token);\r\n        this.setName(response.data.data.name);\r\n        return response.data.data.token;\r\n      }\r\n    }\r\n    catch (error) {\r\n      throw new Error(error.response.status);\r\n    }\r\n  }\r\n\r\n  setToken = userToken => {\r\n    localStorage.setItem('user_token', userToken)\r\n  }\r\n\r\n  setName = (userName) => {\r\n    localStorage.setItem('user_name', userName)\r\n  }\r\n\r\n  getToken = () => {\r\n    return localStorage.getItem('user_token')\r\n  }\r\n\r\n  getName = () => {\r\n    return localStorage.getItem('user_name')\r\n  }\r\n\r\n  loggedIn = () => {\r\n    const token = this.getToken();\r\n    return token ? true : false\r\n  }\r\n\r\n  logout = () => {\r\n    localStorage.removeItem('user_token');\r\n    localStorage.removeItem('user_name');\r\n  }\r\n\r\n  getProfile = () => {\r\n    return this.getName();\r\n  }\r\n}","import axios from 'axios'\r\nimport AuthService from '../components/Auth/AuthService';\r\n\r\nconst Auth = new AuthService();\r\n\r\nexport const sendURL = async (url) => {\r\n  const token = Auth.getToken();\r\n  try {\r\n    const response = await axios({\r\n      method: 'POST',\r\n      url: '/parser/store',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization':  `Bearer ${token}`,\r\n      },\r\n      data: url\r\n    })\r\n    return(response.data);\r\n  }\r\n  catch (error) {\r\n    throw new Error(error.response.status);\r\n  }\r\n}\r\n\r\nexport const getData = async (id) => {\r\n  const token = Auth.getToken()\r\n  try {\r\n    const response = await axios({\r\n      method: 'GET',\r\n      url: `/parser/results/${id}`,\r\n      headers: {\r\n        'Authorization':  `Bearer ${token}`,\r\n      }\r\n    });\r\n    if (response.data.data.status === 'success'){\r\n      return(response.data.data.result);\r\n    }\r\n    else {\r\n      await pause(5)\r\n      return getData(id)\r\n    }\r\n  }\r\n  catch (error) {\r\n    throw new Error(error.message);\r\n  }\r\n}\r\n\r\nconst pause = time =>\r\n  new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      res()\r\n    }, time * 1000);\r\n  });\r\n\r\n  export const deleteResult = async (id) => {\r\n    const token = Auth.getToken();\r\n    try {\r\n      const response = await axios ({\r\n        method: 'GET',\r\n        url: `/pages/delete/${id}`,\r\n        headers: {\r\n          'Authorization':  `Bearer ${token}`,\r\n        }\r\n      })\r\n      if (response.statusText === 'OK') {\r\n        return true\r\n      }\r\n    }catch (error) {\r\n      throw new Error(error.message)\r\n    }\r\n  }\r\n\r\n  export const fetchParserResults = async (url) => {\r\n    const token = Auth.getToken();\r\n    try {\r\n      const response = await axios ({\r\n        method: 'POST',\r\n        url: url,\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization':  `Bearer ${token}`,\r\n        }\r\n      })\r\n      if (response.statusText === 'OK') {\r\n        return response.data\r\n      }\r\n    }catch (error) {\r\n      throw new Error(error.message)\r\n    }\r\n  }","import React, { Component } from 'react';\r\nimport AuthService from '../AuthService';\r\n\r\nexport default function withAuth(AuthComponent) {\r\n  const Auth = new AuthService();\r\n\r\n  return class extends Component {\r\n\r\n    state = {\r\n      authorized: false,\r\n      user: undefined\r\n    }\r\n    \r\n    componentWillMount = () => {\r\n      if (!Auth.loggedIn()) {\r\n        this.props.history.replace('/login');\r\n      }\r\n      else {\r\n        try {\r\n          const profile = Auth.getProfile();\r\n          this.setState({\r\n            authorized: true,\r\n            user: profile\r\n          })\r\n        }\r\n        catch(err){\r\n          Auth.logout();\r\n          this.props.history.replace('/login');\r\n        }\r\n      }\r\n    }\r\n\r\n    render() {\r\n      if (this.state.authorized) {\r\n        return (\r\n          <AuthComponent\r\n            history={this.props.history}\r\n            user={this.state.user}\r\n          />\r\n        )\r\n      }\r\n      else {\r\n        return null\r\n      }\r\n    }\r\n  }\r\n}","//this function is for configuring default styles or mock api (json)\r\n// this prepares arrays for buttons\r\n//@ts-ignore\r\nvar colorsObj={};\r\nvar stylesObj={};\r\nfunction makeArray(obj,abs) {\r\n  if((abs==='button')&&(obj[abs][\"normal\"][\"fontSize\"].length>0)){\r\n    stylesObj[abs] = {};\r\n    colorsObj[abs] = {};\r\n    for(var key in obj[abs]){\r\n      colorsObj[abs][key] = [];\r\n      stylesObj[abs][key]=[]\r\n    }\r\n  }else if((abs==='button')&&(obj[abs][\"normal\"][\"fontSize\"].length===0)){\r\n    stylesObj[abs] = {};\r\n    colorsObj[abs] = {};\r\n    for(var key in obj[\"a\"]){\r\n      colorsObj[abs][key] = [];\r\n      stylesObj[abs][key]=[]\r\n    }\r\n  }else if((abs!=='a')&&(abs!=='button')){\r\n    stylesObj[abs] = [];\r\n    colorsObj[abs] = [];\r\n  }\r\n}\r\nfunction makeStyles (obj) {\r\n  Object.keys(obj).map(abstr => (\r\n    makeArray(obj,abstr)\r\n  ));\r\n}\r\nvar style;\r\nfunction StyleButton(obj,abs){\r\n  for(var type in obj[abs]){\r\n    for(style in obj[abs][type]){\r\n\r\n      if((style!=='background')&&(style!=='backgroundColor')){\r\n        var s ={}\r\n        obj[abs][type][style].forEach((value, i) => {\r\n              \r\n          for(style in obj[abs][type]){\r\n            if((i<obj[abs][type][style].length)&&(style!=='background')&&(style!=='backgroundColor')){\r\n              s[style] = obj[abs][type][style][i];\r\n            }\r\n          }\r\n          \r\n          if(stylesObj[\"button\"][type].length<obj[abs][type][style].length){\r\n              stylesObj[\"button\"][type].push(s);  \r\n              }\r\n          s=null;  \r\n          s={};   \r\n        });\r\n      }\r\n      else if((style ==='background')||(style === \"backgroundColor\")){\r\n        obj[abs][type][style].forEach((value, i) =>{\r\n          if (value!=='transparent'){\r\n            for(style in obj[abs][type]){\r\n              if((style==='background')||(style==='backgroundColor')){\r\n                if((i<obj[abs][type][style].length)&&(colorsObj[\"button\"][type].length<obj[abs][type][style].length)){\r\n                  colorsObj[\"button\"][type].push(value);\r\n                }\r\n              }\r\n            } \r\n          }\r\n        });\r\n      }\r\n  }}\r\n}\r\n\r\n//main function of configuration\r\nfunction StyleConf(obj,abs) {\r\n  if(((abs==='button')&&(obj['button']['normal']['fontSize'].length>0))||((abs==='a')&&(obj['button']['normal']['fontSize'].length===0))){\r\n      StyleButton(obj,abs);\r\n  }\r\n  else if((abs!=='a')&&(abs!==\"button\")){\r\n    for(var style in obj[abs]) {\r\n      if((style!=='background')&&(style!=='backgroundColor')&&(style!=='color')) {\r\n      var s ={};\r\n      obj[abs][style].forEach((value, i) => {\r\n        \r\n        for(style in obj[abs]){\r\n          if((abs==='block')&&(stylesObj[abs].length===0)&&(obj[abs][\"border\"][0]!==\"none\")){\r\n              stylesObj[abs].push({'border':'none','borderRadius':'none'})\r\n          }\r\n          \r\n          if((style!=='background')&&(style!=='backgroundColor')&&(style!=='color')&&(style!=='Color')){\r\n            if(i<obj[abs][style].length){\r\n              s[style] = obj[abs][style][i];\r\n            }else if((style==='textDecoration')&&(obj[abs][\"textDecoration\"][i]===\"undefined\")&&(i<obj[abs][\"fontFamily\"].length)){\r\n              s[style] = 'none';\r\n            }\r\n          }\r\n        }\r\n\r\n        if(((stylesObj[abs].length<obj[abs][style].length)&&(s))||((style===\"textDecoration\")&&(stylesObj[abs].length<obj[abs]['fontFamily'].length)&&(s))) {\r\n          stylesObj[abs].push(s);\r\n          s=null;\r\n          s={};\r\n        } \r\n    });\r\n          \r\n      \r\n      \r\n      }\r\n    else if((style ==='background')||(style === \"backgroundColor\")||(style==='color')||(style==='Color')){\r\n      obj[abs][style].forEach((value, i) => {\r\n        if((i<obj[abs][style].length)&&(colorsObj[abs].length<obj[abs][style].length)&&(abs!=='block')){\r\n          colorsObj[abs].push(value);\r\n        }\r\n    }); \r\n        \r\n        s=null; \r\n    }\r\n  }}\r\n}\r\n\r\n// configurating all styles\r\nexport function configureAll(object){\r\nmakeStyles(object);\r\nObject.keys(object).map(abs => (\r\n    StyleConf(object,abs)))\r\nreturn { colors: colorsObj, styles: stylesObj}\r\n}\r\n\r\n//prepare props\r\nexport function makePropsStyles(objStyles,objColors){\r\nvar StylesParserProps = [];\r\nvar abs;\r\nfor(abs in objStyles){\r\n    var temp={};\r\n    switch(abs){\r\n        case \"button\":\r\n            temp.title = \"Button:\"\r\n        break;\r\n        case \"header\":\r\n            temp.title = \"Title:\"\r\n        break;\r\n        case \"block\": \r\n            temp.title = \"Quiz Block:\"\r\n        break;\r\n        case \"paragraph\":\r\n            temp.title = \"Questions & Answers:\"\r\n        break;\r\n    }\r\n    temp.color = [];\r\n    if((abs!=='base')&&(abs!=='a')){\r\n        if(abs!==\"button\"){\r\n        objColors[abs].forEach((val, i) => {\r\n            var t = {\r\n                label: i+1,\r\n                value: val\r\n            }\r\n            if((abs!=='block')&&(abs!=='a')){\r\n                temp.color.push(t);\r\n            }\r\n            t=0;\r\n        })\r\n    }else if(abs!=='a'){\r\n        objColors[abs]['normal'].forEach((val, i) => {\r\n            var t = {\r\n                label: i+1,\r\n                value: val\r\n            }\r\n            if(abs!=='block'){\r\n                temp.color.push(t);\r\n            }\r\n            t=0;\r\n        })\r\n    }\r\n    temp.style=[];\r\n    if((abs!==\"button\")&&(abs!=='a')){\r\n        objStyles[abs].forEach((val,i) => {\r\n            var h = {\r\n                label: \"Style \"+(i+1),\r\n                value: i+1\r\n            }\r\n            temp.style.push(h);\r\n            h=0;\r\n        })\r\n    }else if(abs!=='a'){\r\n        objStyles[abs]['normal'].forEach((val,i) => {\r\n            var h = {\r\n                label: \"Style \"+(i+1),\r\n                value: i+1\r\n            }\r\n            temp.style.push(h);\r\n            h=0;\r\n        })\r\n    }\r\n    StylesParserProps.push(temp)\r\n}}\r\nreturn StylesParserProps\r\n}","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Spinner from '@atlaskit/spinner'\r\n\r\nimport Container from '../components/WidthContainer'\r\nimport SpinnerContainer from '../components/SpinnerContainer'\r\nimport AppMain from '../components/AppMain'\r\nimport { IRegexField } from '../components/Field'\r\nimport Form from '../components/Form'\r\nimport { sendURL, getData } from '../api'\r\nimport withAuth from '../components/Auth/component/WithAuth'\r\nimport { configureAll, makePropsStyles } from '../Configurations'\r\n\r\nconst Text = styled.div`\r\n  text-align: center;\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  & p {\r\n    margin: 0;\r\n  }\r\n`\r\nconst FormWrapp = styled.div`\r\n  max-width: 450px;\r\n  margin: 10% auto;\r\n`\r\n\r\nconst SiteUrlFields: IRegexField[] = [\r\n  {\r\n    fieldName: 'url',\r\n    placeholder: 'Enter website address',\r\n    textFieldProps: {\r\n      type: 'text',\r\n    },\r\n    fieldProps: {\r\n      isRequired: true,\r\n    },\r\n    validationType: 'url',\r\n    validOnType: true,\r\n    regex: /^http(s)?:\\/\\/(www\\.)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$/\r\n  }\r\n]\r\n\r\nconst ParserPage = ({user, history}) => {\r\n  const [submiting, setSubmiting] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const userName = user ? user : 'guest';\r\n\r\n  return (\r\n    <AppMain>\r\n      <Container>\r\n        <FormWrapp>\r\n          <Text>\r\n            <p>Hello {userName}! Start creating your interactive right now.</p>\r\n            <p>First, let's look at the design of your website</p>\r\n            <p>Please enter the address</p>\r\n          </Text>\r\n          <Form\r\n            formName=\"START\"\r\n            fields={SiteUrlFields}\r\n            parsError={error}\r\n            onSubmit={(formData: any) => {\r\n              setSubmiting(true);\r\n              sendURL(formData)\r\n              .then(response => {\r\n                if (response.id) {\r\n                  getData(response.id)\r\n                  .then((response: any) => {\r\n                    if (response) {\r\n                      setSubmiting(false);\r\n\r\n                      const result = configureAll(response);\r\n                      const props = makePropsStyles(result.styles,result.colors);\r\n                      \r\n                      sessionStorage.setItem('parsData', JSON.stringify(response));\r\n                      sessionStorage.setItem('configured colors', JSON.stringify(result.colors));\r\n                      sessionStorage.setItem('configured styles', JSON.stringify(result.styles));\r\n                      sessionStorage.setItem('props', JSON.stringify(props));\r\n\r\n                      history.replace('/editor');\r\n                    }\r\n                  })\r\n                }\r\n              })\r\n              .catch(error => {\r\n                setError(error.message);\r\n              })}\r\n            }\r\n          />\r\n        </FormWrapp>\r\n        {\r\n          submiting &&\r\n          <SpinnerContainer>\r\n            <Spinner size=\"large\" />\r\n            <p>Please, wait</p>\r\n          </SpinnerContainer>\r\n        }\r\n      </Container>\r\n    </AppMain>\r\n  )\r\n}\r\n\r\nexport default withAuth(ParserPage)","import styled from 'styled-components'\r\n\r\nconst FormWrapp = styled.div`\r\n  border: solid 1px #DBDDE2;\r\n  max-width: 400px;\r\n  border-radius: 3px;\r\n  padding: 40px;\r\n  margin: 5% auto;\r\n  background: #fff;\r\n`\r\n\r\nexport default FormWrapp","import React, { useState } from 'react'\r\n\r\nimport { IRegexField } from '../components/Field'\r\nimport AppMain from '../components/AppMain'\r\nimport Container from '../components/WidthContainer'\r\nimport Form from '../components/Form'\r\nimport FormWrapp from '../components/FormWrapp'\r\nimport AuthService from '../components/Auth/AuthService'\r\n\r\nconst SignInFields: IRegexField[] = [\r\n  {\r\n    fieldName: 'email',\r\n    // label: 'Email',\r\n    placeholder: 'username@your.mail',\r\n    textFieldProps: {\r\n      type: 'text',\r\n    },\r\n    fieldProps: {\r\n      isRequired: true,\r\n    },\r\n    validationType: 'email',\r\n    // validMessage: 'Email is valid',\r\n    validOnType: true,\r\n    regex: /^(([^<>()\\\\[\\]\\\\.,;:\\s@“]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@“]+)*)|(“.+“))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n  },\r\n  {\r\n    fieldName: 'password',\r\n    // label: 'Password',\r\n    placeholder: 'password',\r\n    textFieldProps: {\r\n      type: 'password',\r\n    },\r\n    fieldProps: {\r\n      isRequired: true,\r\n    },\r\n    validOnType: true,\r\n    validationType: 'password',\r\n  }\r\n]\r\n\r\nconst LoginPage = ({history}) => {\r\n  const Auth = new AuthService();\r\n  const [error, setError] = useState();\r\n \r\n  return (\r\n    <AppMain>\r\n      <Container>\r\n        <FormWrapp>\r\n          <Form\r\n            formName=\"SIGN IN\"\r\n            fields={SignInFields}\r\n            authError={error}\r\n            onSubmit={(formData: any) => Auth.logIn(formData)\r\n              .then(response => {\r\n                if(response) {\r\n                  history.replace('/');\r\n                }\r\n              })\r\n              .catch(error => {\r\n                setError(error.message);\r\n              })}\r\n          />\r\n        </FormWrapp>\r\n      </Container>\r\n    </AppMain>\r\n  )\r\n}\r\n  \r\nexport default LoginPage","import React, { useState } from 'react'\r\n\r\nimport Container from '../components/WidthContainer'\r\nimport AppMain from '../components/AppMain'\r\nimport { IRegexField } from '../components/Field'\r\nimport Form from '../components/Form'\r\nimport FormWrapp from '../components/FormWrapp'\r\nimport AuthService from '../components/Auth/AuthService'\r\n\r\nconst singUp: IRegexField[] = [\r\n  {\r\n    fieldName: 'name',\r\n    validationType: 'name',\r\n    label: 'Name',\r\n    validOnType: true,\r\n    helpMessage: 'Name must contain at least 3 characters',\r\n    textFieldProps: {\r\n      type: 'text',\r\n    },\r\n    fieldProps: {\r\n      isRequired: true,\r\n    },\r\n  },\r\n  {\r\n    fieldName: 'email',\r\n    validationType: 'email',\r\n    label: 'Email',\r\n    validOnType: true,\r\n    validMessage: 'Email is valid',\r\n    helpMessage: 'Email example: username@your.name',\r\n    textFieldProps: {\r\n      type: 'text',\r\n    },\r\n    fieldProps: {\r\n      isRequired: true,\r\n    },\r\n    regex: /^(([^<>()\\\\[\\]\\\\.,;:\\s@“]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@“]+)*)|(“.+“))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n  },\r\n  {\r\n    fieldName: 'password',\r\n    validationType: 'password',\r\n    fieldProps: {\r\n      isRequired: true,\r\n    },\r\n    helpMessage: 'Use from 6 to 50 characters with at least one uppercase and one number',\r\n    label: 'Password',\r\n    validOnType: true,\r\n    validMessage: 'Password is valid',\r\n    textFieldProps: {\r\n      type: 'password',\r\n    },\r\n    regex: /(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}/\r\n  },\r\n  {\r\n    fieldName: 'password_confirmation',\r\n    validationType: 'password_confirmation',\r\n    fieldProps: {\r\n      isRequired: true,\r\n    },\r\n    helpMessage: 'Passwords must be the same',\r\n    label: 'Confirm Password',\r\n    validOnType: true,\r\n    validMessage: 'Passwords match',\r\n    textFieldProps: {\r\n      type: 'password',\r\n    },\r\n    regex: /(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}/\r\n  }\r\n]\r\n\r\nconst SignUpPage = ({history}) => {\r\n  const Auth = new AuthService();\r\n  const [error, setError] = useState();\r\n\r\n  return(\r\n    <AppMain>\r\n    <Container>\r\n      <FormWrapp>\r\n        <Form\r\n          formName=\"SIGN UP\"\r\n          fields={singUp}\r\n          registerError={error}\r\n          onSubmit={(formData: any) => Auth.toRegister(formData)\r\n            .then(response => {\r\n              if(response) {\r\n                history.replace('/');\r\n              }\r\n            })\r\n            .catch(error => {\r\n              setError(error.message);\r\n            })\r\n          }\r\n        />\r\n      </FormWrapp>\r\n    </Container>\r\n  </AppMain>\r\n  )\r\n}\r\n\r\nexport default SignUpPage","import styled from 'styled-components'\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n`\r\n\r\nexport const ContentRight = styled.div`\r\n  width: 50%;\r\n  margin-left: 50px\r\n`","import styled from 'styled-components'\r\n\r\nconst EditorHeading = styled.h3`\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n`\r\nexport default EditorHeading","import styled from 'styled-components'\r\n\r\nconst TextMessage = styled.div`\r\n  font-weight: bold;\r\n  margin-bottom: 25px;\r\n  background: linear-gradient(to right, #f3f3f3 0%,#dce8fe 43%,#f3f3f3 100%);\r\n  padding: 10px 0;\r\n  text-align: center;\r\n  > h3 {\r\n    > span {\r\n      line-height: 26px;\r\n    }\r\n  }\r\n`\r\nexport default TextMessage\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst SlideWrapp = styled.div`\r\n  width: 50%;\r\n  height: 100%;\r\n`\r\nconst SlideItem = styled.div`\r\n  background: #fff;\r\n  height: ${({height}) => height || '0'};\r\n  overflow-Y: scroll;\r\n  border-right: solid 1px #BEBEBE;\r\n  border-left: solid 1px #BEBEBE;\r\n  border-bottom: ${({borderBottom}) => borderBottom || 'none'};\r\n  padding: 0 20px;\r\n  transition: height .3s;\r\n`\r\nconst SlideHeading = styled.div`\r\n  background: ${({background}) => background || 'none'};\r\n  border: solid 1px #BEBEBE;\r\n  margin: 2px 0;\r\n  padding: 5px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  user-select: none;\r\n  transition: .3s;\r\n  color: ${({color}) => color || 'inherit'};\r\n`\r\n\r\nconst Slider = ({children}) => {\r\n  const [isToggleContent, ToggleContent] = useState(true);\r\n  const [isToggleStyles, toggleStyles] = useState(false);\r\n\r\n  return (\r\n    <SlideWrapp>\r\n\r\n      <SlideHeading\r\n        background={isToggleContent ? '#0052CC' : '#fff'}\r\n        color={isToggleContent ? '#fff' : undefined}\r\n        onClick={() => {\r\n          ToggleContent(!isToggleContent);\r\n          toggleStyles(false);\r\n        }}\r\n      >\r\n        Quiz Content\r\n      </SlideHeading>\r\n      <SlideItem\r\n        height={isToggleContent ? '600px' : undefined}\r\n        borderBottom={isToggleContent ? 'solid 1px #BEBEBE' : undefined}\r\n      >\r\n        {\r\n          children.map((item, i) => (\r\n            i <= 3 && item\r\n          ))\r\n        }\r\n      </SlideItem>\r\n\r\n      <SlideHeading\r\n        background={isToggleStyles ? '#0052CC' : '#fff'}\r\n        color={isToggleStyles ? '#fff' : undefined}\r\n        onClick={() => {\r\n          toggleStyles(!isToggleStyles);\r\n          ToggleContent(false);\r\n        }}\r\n      >\r\n        Styles & Design\r\n      </SlideHeading>\r\n      <SlideItem\r\n        height={isToggleStyles ? '600px' : undefined}\r\n        borderBottom={isToggleStyles ? 'solid 1px #BEBEBE' : undefined}\r\n      >\r\n        {children[4]}\r\n      </SlideItem>\r\n\r\n    </SlideWrapp>\r\n  )\r\n}\r\n\r\nexport default Slider","import styled from 'styled-components'\r\n\r\nconst BasicPartContainer = styled.div`\r\n  margin: 20px 0;\r\n  border: solid 2px #dce8fe;\r\n  border-radius: 5px;\r\n  padding: 20px;\r\n  position: relative;\r\n`\r\nexport default BasicPartContainer","import styled from 'styled-components'\r\n\r\nconst RemoveIcon = styled.div`\r\n  position: absolute;\r\n  top: 28px;\r\n  right: 3px;\r\n  cursor: pointer;\r\n`\r\nexport default RemoveIcon\r\n\r\nexport const RemoveIconAnswer = styled(RemoveIcon)`\r\n  top: 8px;\r\n`","import styled from 'styled-components'\r\n\r\nconst InputGroup = styled.div`\r\n  margin-bottom: 10px;\r\n  position: relative;\r\n  width: 100%;\r\n`\r\nexport default InputGroup","import Textfield from '@atlaskit/textfield'\r\nimport styled from 'styled-components'\r\n\r\nconst BasicField = styled(Textfield)`\r\n  padding-right: 25px !important;\r\n  border: ${({border}) => `${border} !important` || 'none'};\r\n`\r\nexport default BasicField","import styled from 'styled-components'\r\n\r\nconst ContentControl = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\nexport default ContentControl","import styled from 'styled-components'\r\n\r\nconst RangeContainer = styled.div`\r\n  width: 60%;\r\n  display: flex;\r\n  align-items: center;\r\n`\r\nexport default RangeContainer","import styled from 'styled-components'\r\n\r\nconst RangeLabel = styled.p`\r\n  margin-right: 10px;\r\n  white-space: nowrap;\r\n`\r\nexport default RangeLabel","import styled from 'styled-components'\r\n\r\nconst ColorPickerContainer = styled.div`\r\n  width: 30%;\r\n  display: flex;\r\n  align-items: center;\r\n`\r\nexport default ColorPickerContainer","import * as React from 'react'\r\nimport EditorCloseIcon from '@atlaskit/icon/glyph/editor/close'\r\nimport ColorPicker from '@atlaskit/color-picker'\r\nimport FieldRange from '@atlaskit/field-range'\r\nimport { ErrorMessage } from '@atlaskit/form'\r\n\r\nimport { withTranslations } from '../../Translation'\r\nimport BasicPartContainer from './components/BasicPartContainer'\r\nimport RemoveIcon from './components/RemoveIcon'\r\nimport InputGroup from './components/InputGroup'\r\nimport BasicField from './components/BasicField'\r\nimport ContentControl from './components/ControlContainer'\r\nimport RangeContainer from './components/RangeContainer'\r\nimport ControlLabel from './components/RangeLabel'\r\nimport ColorPickerContainer from './components/ColorPickerContainer'\r\n\r\nconst BasicPart = ({\r\n  T,\r\n  title,\r\n  teaserImage,\r\n  onChangeHandle,\r\n  removeTitle,\r\n  removeTeaserImage,\r\n  simplePalette,\r\n  teaserBackground,\r\n  changeBackgroundTeaser,\r\n  setOpacityBackgroundTeaser,\r\n  teaserImageValid\r\n}) => (\r\n  <BasicPartContainer>\r\n    <InputGroup>\r\n      <label htmlFor=\"title\">{T.basicPartTitle}</label>\r\n      <BasicField\r\n        name=\"title\"\r\n        value={title}\r\n        onChange={onChangeHandle}\r\n      />\r\n      {\r\n        title &&\r\n        <RemoveIcon  onClick={removeTitle}>\r\n          <EditorCloseIcon label='' />\r\n        </RemoveIcon>\r\n      }\r\n    </InputGroup>\r\n        \r\n    <InputGroup>     \r\n      <label htmlFor=\"teaserImage\">{T.basicPartTeaser}</label>\r\n      <BasicField\r\n        name=\"teaserImage\"\r\n        value={teaserImage}\r\n        placeholder={T.basicPartTeaserPlaceholder}\r\n        onChange={onChangeHandle}\r\n        isInvalid ={!teaserImageValid}\r\n      />\r\n      {!teaserImageValid && <ErrorMessage>Enter correct image URL</ErrorMessage>}\r\n      {\r\n        teaserImage &&\r\n          <RemoveIcon onClick={removeTeaserImage}>\r\n            <EditorCloseIcon label='' />\r\n          </RemoveIcon>\r\n      }\r\n    </InputGroup>\r\n    {\r\n      teaserImage && teaserImageValid &&\r\n      <ContentControl>\r\n        <ColorPickerContainer>\r\n          <ControlLabel>Overlay Color:</ControlLabel>\r\n          <ColorPicker\r\n            label=\"Change color\"\r\n            palette={simplePalette}\r\n            checkMarkColor='#24B124'\r\n            selectedColor={teaserBackground.color}\r\n            onChange={(newColor) => {changeBackgroundTeaser(newColor)}}\r\n          />\r\n        </ColorPickerContainer>\r\n        \r\n        <RangeContainer>\r\n          <ControlLabel>Overlay Opacity:</ControlLabel>\r\n          <FieldRange\r\n            value={teaserBackground.opacity}\r\n            min={0}\r\n            max={1}\r\n            step={0.1}\r\n            onChange={(value) => setOpacityBackgroundTeaser(value)}\r\n          />\r\n        </RangeContainer>\r\n      </ContentControl>\r\n    }\r\n  </BasicPartContainer>\r\n)\r\n\r\nexport default withTranslations(BasicPart)","import styled from 'styled-components'\r\n\r\nconst QuestionNumber = styled.div`\r\n  width: 25px;\r\n  height: 25px;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  line-height: 25px;\r\n  background: #fff;\r\n  border: solid 2px #dce8fe;\r\n  border-radius: 50%;\r\n  position: absolute;\r\n  left: -15px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n`\r\nexport default QuestionNumber","import styled from 'styled-components'\r\n\r\nconst AnswerContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\nexport default AnswerContainer","import styled from 'styled-components'\r\n\r\nconst AnswerNumber = styled.p`\r\n  width: 40px;\r\n  margin-bottom: 10px;\r\n`\r\nexport default AnswerNumber","import styled from 'styled-components'\r\n\r\nconst ToggleConteainer = styled.div`\r\n  margin: 0 0 5px 10px;\r\n`\r\nexport default ToggleConteainer","import styled from 'styled-components'\r\n\r\nexport const ToggleInput = styled.input`\r\n  position: absolute;\r\n  z-index: -1;\r\n  opacity: 0;\r\n  margin: 10px 0 0 20px;\r\n  outline: none;\r\n  &:disabled + label {\r\n    cursor: not-allowed;\r\n  }\r\n  &:checked + label::before {\r\n    background: #689F4B;\r\n  }\r\n  &:checked + label::after {\r\n    left: 25px;\r\n  }\r\n`\r\nexport const ToggleLabel = styled.label`\r\n  position: relative;\r\n  padding: 0 0 0 46px;\r\n  cursor: pointer;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    top: -2px;\r\n    left: 2px;\r\n    width: 18px;\r\n    height: 18px;\r\n    border-radius: 10px;\r\n    background: #FFF;\r\n    box-shadow: 0 2px 5px rgba(0,0,0,.3);\r\n    transition: .2s;\r\n  }\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: -4px;\r\n    left: 0;\r\n    width: 45px;\r\n    height: 22px;\r\n    border-radius: 13px;\r\n    background: #CDD1DA;\r\n    box-shadow: inset 0 2px 3px rgba(0,0,0,.2);\r\n    transition: .2s;\r\n  }\r\n`","import styled from 'styled-components'\r\n\r\nconst AnswersHeader = styled.div`\r\n  margin-top: 15px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\nexport default AnswersHeader","import styled from 'styled-components'\r\n\r\nconst RemoveQuestionButton = styled.button`\r\n  position: absolute;\r\n  top: 8px;\r\n  right: 8px;\r\n  width: 25px;\r\n  height: 23px;\r\n  background: #B90010;\r\n  color: #fff;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  outline: none;\r\n  border-radius: 3px;\r\n  z-index: 1;\r\n`\r\nexport default RemoveQuestionButton","import * as React from 'react'\r\nimport EditorCloseIcon from '@atlaskit/icon/glyph/editor/close'\r\nimport { ErrorMessage } from '@atlaskit/form'\r\n\r\nimport BasicPartContainer from './components/BasicPartContainer'\r\nimport InputGroup from './components/InputGroup'\r\nimport BasicField from './components/BasicField'\r\nimport RemoveIcon, { RemoveIconAnswer } from './components/RemoveIcon'\r\nimport QuestionNumber from './components/QuestionNumber'\r\nimport AnswerContainer from './components/AnswerContainer'\r\nimport AnswerNumber from './components/AnswerNumber'\r\nimport ToggleConteainer from './components/ToggleContainer'\r\nimport { ToggleInput, ToggleLabel} from './components/Toggler'\r\nimport AnswersHeader from './components/AnswersHeader'\r\nimport RemoveQuestionButton from './components/RemoveQuestionButton'\r\n\r\nconst QuestionPart = ({\r\n  questionItem,\r\n  questionItemsLength,\r\n  itemIndex,\r\n  changeQuestion,\r\n  removeQuestion,\r\n  changeImage,\r\n  removeImage,\r\n  changeAnswers,\r\n  removeAnswers,\r\n  selectRightAnswer,\r\n  removeQuestionItem,\r\n}) => (\r\n  <BasicPartContainer>\r\n    {\r\n      questionItemsLength > 1 &&\r\n      <RemoveQuestionButton onClick={() => removeQuestionItem(questionItem.id)}>\r\n        <EditorCloseIcon label='' />\r\n      </RemoveQuestionButton>\r\n    }\r\n    <QuestionNumber>{itemIndex + 1}</QuestionNumber>\r\n    <InputGroup>\r\n      <label htmlFor=\"question\">Question:</label>\r\n      <BasicField\r\n        name=\"question\"\r\n        value={questionItem.question}\r\n        onChange={(event) => changeQuestion(event, questionItem.id)}\r\n      />\r\n      {\r\n        questionItem.question &&\r\n        <RemoveIcon  onClick={() => removeQuestion(questionItem.id)}>\r\n          <EditorCloseIcon label='' />\r\n        </RemoveIcon>\r\n      }\r\n    </InputGroup>\r\n    <AnswersHeader>\r\n      <span>Answers:</span>\r\n      <span>Correct:</span>\r\n    </AnswersHeader>\r\n    {\r\n      questionItem.answers.map((answer) => (\r\n        <AnswerContainer key={`answer${questionItem.id}${answer.id}`}>\r\n          <AnswerNumber>{`${itemIndex + 1}. ${answer.id}.`}</AnswerNumber>\r\n          <InputGroup>\r\n            <BasicField\r\n              name=\"answer\"\r\n              value={answer.value}\r\n              onChange={(event) => changeAnswers(event, questionItem.id, answer.id)}\r\n              border={answer.id === questionItem.indexRightAnswer && answer.value ? 'solid 1px #9CCE64' : undefined}\r\n            />\r\n            {\r\n              answer.value &&\r\n              <RemoveIconAnswer  onClick={() => removeAnswers(questionItem.id, answer.id)}>\r\n                <EditorCloseIcon label='' />\r\n              </RemoveIconAnswer>\r\n            }\r\n          </InputGroup>\r\n          <ToggleConteainer>\r\n            <ToggleInput\r\n              type=\"radio\"\r\n              id={`toggler${questionItem.id}${answer.id}`}\r\n              name={`toggler${questionItem.id}`}\r\n              checked={answer.id === questionItem.indexRightAnswer && answer.value}\r\n              disabled={!answer.value}\r\n              onChange={() => selectRightAnswer(questionItem.id, answer.id)}\r\n            />            \r\n            <ToggleLabel htmlFor={`toggler${questionItem.id}${answer.id}`} />\r\n          </ToggleConteainer>\r\n        </AnswerContainer>\r\n      ))\r\n    }\r\n\r\n    <InputGroup>     \r\n      <label htmlFor=\"image\">Image:</label>\r\n      <BasicField\r\n        name=\"image\"\r\n        placeholder='Enter URL' \r\n        value={questionItem.image}\r\n        onChange={(event) => changeImage(event, questionItem.id)}\r\n        isInvalid = {!questionItem.imageValid}\r\n      />\r\n      {!questionItem.imageValid && <ErrorMessage>Enter correct image URL</ErrorMessage>}\r\n      {\r\n        questionItem.image &&\r\n          <RemoveIcon onClick={() => removeImage(questionItem.id)}>\r\n            <EditorCloseIcon label='' />\r\n          </RemoveIcon>\r\n      }\r\n    </InputGroup>\r\n  </BasicPartContainer>\r\n)\r\n\r\nexport default QuestionPart","import * as React from 'react'\r\nimport EditorCloseIcon from '@atlaskit/icon/glyph/editor/close'\r\nimport ColorPicker from '@atlaskit/color-picker'\r\nimport FieldRange from '@atlaskit/field-range'\r\nimport { ErrorMessage } from '@atlaskit/form'\r\n\r\nimport BasicPartContainer from './components/BasicPartContainer'\r\nimport BasicField from './components/BasicField'\r\nimport InputGroup from './components/InputGroup'\r\nimport RemoveIcon from './components/RemoveIcon'\r\nimport ContentControl from './components/ControlContainer'\r\nimport RangeContainer from './components/RangeContainer'\r\nimport ControlLabel from './components/RangeLabel'\r\nimport ColorPickerContainer from './components/ColorPickerContainer'\r\n\r\nconst FinalTeaser = ({\r\n  finalTeaserImage,\r\n  simplePalette,\r\n  finalTeaserBackground,\r\n  setOpacityFinalBackgroundTeaser,\r\n  changeFinalBackgroundTeaser,\r\n  onChangeHandle,\r\n  removeFinalTeaserImage,\r\n  finalTeaserImageValid\r\n}) => (\r\n  <BasicPartContainer>\r\n        \r\n    <InputGroup>     \r\n      <label htmlFor=\"finalTeaserImage\">Final Teaser:</label>\r\n      <BasicField\r\n        name=\"finalTeaserImage\"\r\n        value={finalTeaserImage}\r\n        placeholder='Enter URL'\r\n        onChange={onChangeHandle}\r\n        isInvalid ={!finalTeaserImageValid}\r\n      />\r\n      {!finalTeaserImageValid && <ErrorMessage>Enter correct image URL</ErrorMessage>}\r\n      {\r\n        finalTeaserImage &&\r\n          <RemoveIcon onClick={removeFinalTeaserImage}>\r\n            <EditorCloseIcon label='' />\r\n          </RemoveIcon>\r\n      }\r\n    </InputGroup>\r\n    {\r\n      finalTeaserImage && finalTeaserImageValid &&\r\n      <ContentControl>\r\n        <ColorPickerContainer>\r\n        <ControlLabel>Overlay Color:</ControlLabel>\r\n          <ColorPicker\r\n            label=\"Change color\"\r\n            palette={simplePalette}\r\n            checkMarkColor='#24B124'\r\n            selectedColor={finalTeaserBackground.color}\r\n            onChange={(newColor) => changeFinalBackgroundTeaser(newColor)}\r\n          />\r\n        </ColorPickerContainer>\r\n        \r\n        <RangeContainer>\r\n          <ControlLabel>Overlay Opacity:</ControlLabel>\r\n          <FieldRange\r\n            value={finalTeaserBackground.opacity}\r\n            min={0}\r\n            max={1}\r\n            step={0.1}\r\n            onChange={(value) => setOpacityFinalBackgroundTeaser(value)}\r\n          />\r\n        </RangeContainer>\r\n      </ContentControl>\r\n    }\r\n  </BasicPartContainer>\r\n)\r\n\r\nexport default FinalTeaser","import styled from 'styled-components'\r\n//import { withHeaderStyles } from '../../withDefinedStyles'\r\n\r\nconst QuizTitle = styled.h4`\r\n  margin: 0 0 10px 0;\r\n  word-wrap: break-word;\r\n  font-size: ${({fontSize}) => fontSize || '24px'};\r\n  font-family: ${({fontFamily}) => fontFamily || 'inherit'};\r\n  font-weight: ${({fontWeight}) => fontWeight || 'normal'};\r\n  line-height: ${({lineHeight}) => lineHeight || '2rem'};\r\n  color: ${({color}) => color || '#000'};\r\n`\r\nexport default QuizTitle\r\n","import styled from 'styled-components'\r\n\r\nconst QuizHeader = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  padding-bottom: 56.25%;\r\n  /*Ths border was why the pixels moved right*/\r\n  /*border: solid 1px #d1d1d1;*/\r\n  box-sizing: border-box;\r\n  \r\n  .teaser-image-fade{\r\n    background: ${({background = 'rgba(0,0,0,0.5)'}) => background};\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 1;\r\n    position: absolute;\r\n    top: 0;\r\n  }\r\n  \r\n  .button{\r\n    z-index: 2;\r\n  }\r\n`\r\n\r\nexport default QuizHeader\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledPaginationItem = styled.div`\r\n  display: inline-block; \r\n  margin: 10px 10px;\r\n  font-size: ${({fontSize}) => fontSize || '20px'};\r\n  font-family: ${({fontFamily}) => fontFamily || \"inherit\"};\r\n  font-weight: ${({fontWeight}) => fontWeight || 'normal'};\r\n  min-width: 5px;\r\n  text-align: center;\r\n  padding: 0 10px;\r\n  border-bottom: ${props => props.border || 'none'};\r\n  cursor: pointer;\r\n  user-select: none;\r\n    &:hover {\r\n      color: blue;\r\n    }\r\n`\r\nexport const PaginationItem = StyledPaginationItem;\r\n\r\nexport const Pagination = styled.div`\r\n  display: flex; \r\n  justify-content: center;\r\n  margin: 20px 0;\r\n`\r\n","import styled from 'styled-components'\r\n//import { withBlockStyles } from '../../withDefinedStyles'\r\n\r\nconst QuizWrap = styled.div`\r\n  padding: 10px;\r\n  margin: 15px 0;\r\n  width: 100%;\r\n  max-width: 800px;\r\n  min-width: 320px;\r\n  background: 'transparent';\r\n  border: ${({border = \"none\"}) => border};\r\n  border-radius: ${({borderRadius = \"none\"}) => borderRadius};\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n`\r\nexport default QuizWrap\r\n","import styled from 'styled-components'\r\n//import { withButtonStyles } from '../../withDefinedStyles'\r\n\r\nconst Result = styled.div`\r\n  position: absolute;\r\n  z-index: 2;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  color: ${({normal: {color}}) => color || '2a2a2a'};\r\n  background: ${({normal: {background}}) => background || '#ddd'};\r\n  font-size: ${({normal: {fontSize}}) => fontSize || '24px'};\r\n  font-family: ${({normal: {fontFamily}}) => fontFamily || 'inherit'};\r\n  font-weight: ${({normal: {fontWeight}}) => fontWeight || 'bold'};\r\n  padding: 20px;\r\n  border: ${({normal: {border}}) => border || 'solid 2px #fff'};\r\n`\r\nexport default Result\r\n","import styled from 'styled-components'\r\n\r\nconst ImageBlock = styled.div`\r\n  position: absolute;\r\n  left:0;\r\n  top:0;\r\n  right:0;\r\n  bottom:0;\r\n  \r\n  > img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`\r\nexport default ImageBlock","import { withProps } from 'recompose'\r\n\r\n\r\nexport const en = {\r\n  signIn: 'Sign In',\r\n  signUp: 'Sign Up',\r\n  start: 'Start',\r\n  errorTitle: 'Error!',\r\n  result: (correct, all) => `${correct} out of ${all}`,\r\n  editorHeading: 'That\\'s cool! You can start creating your Interactive right away!',\r\n  basicPartTitle: 'Title:',\r\n  basicPartTeaser: 'Teaser:',\r\n  basicPartTeaserPlaceholder: 'Enter URL',\r\n  errors: {\r\n    LOGIN_TOO_SHORT: 'Please enter a valid email.',\r\n    PASSWORD_ERROR: 'Password must contain 10 to 50 characters with a mix of letters, numbers & symbols.',\r\n    IN_USE: 'Username already in use, try another one.',\r\n    PASSWORD_NOT_SAME: 'Password and retry password must be the same.',\r\n    IS_EMPTY: 'The field can not be empty',\r\n    MAX_CHARACTERS: 'You have exceeded the maximum number of characters allowed.',\r\n    INCORRECT: 'Sorry, your login or password are incorrect. Please, try again.',\r\n    SITE_URL_ERROR: 'Enter the correct website address',\r\n    PARS_ERROR: 'Parsing is not completed. Please, try again',\r\n    NAME_TOO_SHORT: 'Name too short'\r\n  },\r\n}\r\n\r\nexport const ru = {\r\n  signIn: 'Войти',\r\n  signUp: 'Зарегистрироваться',\r\n  start: 'Старт',\r\n  errorTitle: 'Ошибка!',\r\n  result: (correct, all) => `${correct} из ${all}`,\r\n  editorHeading: 'Это круто! Вы можете начать создавать свой Интерактив прямо сейчас!',\r\n  basicPartTitle: 'Заголовок:',\r\n  basicPartTeaser: 'Тизер изображения:',\r\n  basicPartTeaserPlaceholder: 'Введите адрес сайта',\r\n  errors: {\r\n    LOGIN_TOO_SHORT: 'Введите, пожалуйста, действительный адрес электронной почты.',\r\n    PASSWORD_ERROR: 'Пароль должен содержать от 10 до 50 символов с сочетанием букв, цифр и спец. символов.',\r\n    IN_USE: 'Имя пользователя уже используется, попробуйте другой.',\r\n    PASSWORD_NOT_SAME: 'Поля \"Пароль\" и \"Повторить пароль\" должны совпадать.',\r\n    IS_EMPTY: 'Поле не может быть пустым.',\r\n    MAX_CHARACTERS: 'Вы превысили максимально допустимое количество символов',\r\n    INCORRECT: 'Извините, ваше имя пользователя или пароль неверны. Пожалуйста, попробуйте еще раз.',\r\n    SITE_URL_ERROR: 'Введите правильно адрес сайта',\r\n    PARS_ERROR: 'Разбор не завершен. Пожалуйста, попробуйте еще раз',\r\n    NAME_TOO_SHORT: 'Слишком короткое имя!'\r\n  },\r\n}\r\n\r\nexport const languageTable = {\r\n  en,\r\n  ru,\r\n}\r\n\r\nexport const withTranslations = withProps(({lang = 'en'}) => ({\r\n  T: languageTable[lang],\r\n  getErrorByCode: (code) => languageTable[lang].errors[code],\r\n}))\r\n","import * as React from 'react'\r\n\r\nimport QuizTitle from './components/QuizTitle'\r\nimport QuizHeader from './components/QuizHeader'\r\nimport { Pagination, PaginationItem } from './components/Pagination'\r\nimport QuizWrap from './components/QuizWrap'\r\nimport Result from './components/Result'\r\nimport ImageBlock from './components/ImageBlock'\r\nimport { withTranslations } from './Translation'\r\n\r\nconst transformColor = (color) => color === '#000' ? '0,0,0' : '255,255,255'\r\n\r\nconst ResultPage = ({\r\n  title,\r\n  finalTeaserImage,\r\n  countRightAnswer,\r\n  questionItems, result,\r\n  handleOnPageStart,\r\n  T, handleOnPage,\r\n  finalTeaserBackground,\r\n  options, block, header, button,\r\n  styles\r\n}) => {\r\n  const color = transformColor(options.resultBackground || (finalTeaserBackground && finalTeaserBackground.color));\r\n  questionItems = options.questions || questionItems;\r\n  block = styles.block || block;\r\n  header = styles.header || header;\r\n  button = styles.button || button;\r\n\r\n  return (\r\n    <>\r\n      <QuizWrap\r\n        border={block.border}\r\n        borderRadius={block.borderRadius}\r\n      >\r\n        <QuizTitle\r\n          fontSize={header.fontSize}\r\n          fontFamily={header.fontFamily}\r\n          fontWeight={header.fontWeight}\r\n          lineHeight={header.lineHeight}\r\n          color={header.color}\r\n        >\r\n          {options.title || title}\r\n        </QuizTitle>\r\n        <QuizHeader background={`rgba(${color}, ${options.resultOpacity || (finalTeaserBackground ? finalTeaserBackground.opacity : 0)})`}>\r\n          <ImageBlock>\r\n            <img src={options.resultImage || finalTeaserImage} alt=\"\" />\r\n          </ImageBlock>\r\n          <Result normal={button.normal}>\r\n            {T.result(countRightAnswer, questionItems.length)}\r\n          </Result>\r\n          <div className=\"teaser-image-fade\"/>\r\n        </QuizHeader>\r\n      </QuizWrap>\r\n      <Pagination>\r\n        <PaginationItem onClick={handleOnPageStart}>start</PaginationItem>\r\n          {\r\n            questionItems.map((item, index) => (\r\n              <PaginationItem\r\n                key={item.id}\r\n                onClick={() => handleOnPage(index + 1)}\r\n              >\r\n                {index + 1}\r\n              </PaginationItem>\r\n            ))\r\n          }\r\n        <PaginationItem border={result && 'solid 2px blue'}>results</PaginationItem>\r\n      </Pagination>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withTranslations(ResultPage)\r\n","import styled from 'styled-components'\r\n// import { withButtonStyles } from '../../withDefinedStyles'\r\n\r\nconst ButtonStart = styled.button`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 20px 100px;\r\n  text-transform: uppercase;\r\n  transition: .3s;\r\n  cursor: pointer;\r\n  outline: none;\r\n  z-index:2;\r\n  color: ${({normal: {color}}) => color || '#2a2a2a'};\r\n  background: ${({normal: {background}}) => background};\r\n  border: ${({normal: {border}}) => border || '2px solid #ddd'};\r\n  font-size: ${({normal: {fontSize}}) => fontSize || '24px'};\r\n  font-family: ${({normal: {fontFamily}}) => fontFamily || \"inherit\"};\r\n  font-weight: ${({normal: {fontWeight}}) => fontWeight || 'normal'};\r\n\r\n  &:hover {\r\n    background: ${({hover: {background}}) => background || '#fff'};\r\n    color: ${({hover: {color}}) => color || '#2a2a2a'};\r\n    border: ${({hover: {border}}) => border || '2px solid #ddd'};\r\n  }\r\n`\r\nexport default ButtonStart","import * as React from 'react'\r\n\r\nimport QuizTitle from './components/QuizTitle'\r\nimport QuizHeader from './components/QuizHeader'\r\nimport { Pagination, PaginationItem } from './components/Pagination'\r\nimport QuizWrap from './components/QuizWrap'\r\nimport ButtonStart from './components/ButtonStart'\r\nimport ImageBlock from './components/ImageBlock'\r\n\r\nconst transformColor = (color) => color === '#000' ? '0,0,0' : '255,255,255'\r\n\r\nconst StartPage = ({\r\n  title,\r\n  teaserImage,\r\n  preview,\r\n  questionItems, result,\r\n  handleStartQuestion,\r\n  handleOnPage,\r\n  handleOnPageResult,\r\n  teaserBackground,\r\n  options, block, header, button,\r\n  styles\r\n}) => {\r\n\r\n  const color = transformColor(options.startBackground || (teaserBackground && teaserBackground.color));\r\n  questionItems = options.questions || questionItems;\r\n  block = styles.block || block;\r\n  header = styles.header || header;\r\n  button = styles.button || button;\r\n  \r\n  return (\r\n    <>\r\n      <QuizWrap\r\n        border={block.border}\r\n        borderRadius={block.borderRadius}\r\n      >\r\n        {\r\n          options.title || title ?\r\n          <QuizTitle \r\n            fontSize={header.fontSize}\r\n            fontFamily={header.fontFamily}\r\n            fontWeight={header.fontWeight}\r\n            lineHeight={header.lineHeight}\r\n            color={header.color}\r\n          >\r\n            {options.title || title}\r\n          </QuizTitle> : undefined\r\n        }\r\n        <QuizHeader background={`rgba(${color}, ${options.startOpacity || (teaserBackground ? teaserBackground.opacity : 0)})`}>\r\n          <ImageBlock>\r\n            <img src={options.startImage || teaserImage} alt=\"\"/>\r\n          </ImageBlock>\r\n          <ButtonStart\r\n            normal={button.normal}\r\n            hover={button.hover}\r\n            onClick={handleStartQuestion}\r\n          >\r\n            Start\r\n          </ButtonStart>\r\n          <div className=\"teaser-image-fade\"/>\r\n        </QuizHeader>\r\n      </QuizWrap>\r\n      <Pagination>\r\n        <PaginationItem border={!preview && !result && 'solid 2px blue'}>start</PaginationItem>\r\n        {\r\n          questionItems && questionItems.map((item, index) => (\r\n            <PaginationItem\r\n              key={item.id}\r\n              onClick={() => handleOnPage(index + 1)}\r\n            >\r\n              {index + 1}\r\n            </PaginationItem>\r\n          ))\r\n        }\r\n        <PaginationItem onClick={handleOnPageResult}>results</PaginationItem>\r\n      </Pagination>\r\n    </>\r\n  )\r\n}\r\n  \r\nexport default StartPage","import styled from 'styled-components'\r\n\r\nconst QuestionCont = styled.div`\r\n  width: 100%;\r\n  /* margin: 0 auto; */\r\n  >img {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nexport default QuestionCont","import styled from 'styled-components'\r\n//import { withParagraphStyles } from '../../withDefinedStyles'\r\n\r\nconst Question = styled.p`\r\n  text-align: center;\r\n  word-wrap: break-word;\r\n  font-size: ${({fontSize}) => fontSize || '24px'};\r\n  font-family: ${({fontFamily}) => fontFamily || 'inherit'};\r\n  font-weight: bold;\r\n  color: ${({color}) => color || '#2a2a2a'};\r\n`\r\nexport default Question\r\n","import styled from 'styled-components'\r\n// import { withBaseStyles } from '../../withDefinedStyles'\r\n\r\nconst StyledDotContainer = styled.div`\r\n  display: flex; \r\n  justify-content: center;\r\n  margin: 20px auto;\r\n`\r\n\r\nconst Dot = styled.div`\r\n  display: inline-block;\r\n  height: 12px;\r\n  width: 12px;\r\n  border: ${({border}) => `1px solid ${border}` || '1px solid grey'};\r\n  border-radius: 50%;\r\n  margin: 10px;\r\n  background: ${({background}) => background || 'transparent'};\r\n`\r\n\r\nexport const DotContainer = StyledDotContainer\r\nexport default Dot\r\n","import styled from 'styled-components'\r\n//import { withButtonStyles } from '../../withDefinedStyles'\r\n\r\nexport const VariantItems = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-left: 0;\r\n  min-width: 70%;\r\n  list-style: none;\r\n`\r\n\r\nconst Variant = styled.li`\r\n  font-family: ${({normal: {fontFamily}}) => fontFamily || 'inherit'};\r\n  font-size: ${({normal: {fontSize}}) => fontSize || '16px'};\r\n  font-weight: ${({hover: {fontWeight}}) => fontWeight || 'bold'};\r\n  color: ${({normal: {color}}) => color || \"#8a8888\"};\r\n  box-shadow: ${({answerBorder}) => answerBorder || 'none'};\r\n  background: #e9e9e9;\r\n  text-align: center;\r\n  word-wrap: break-word;\r\n  padding: 15px 10px;\r\n  margin: 2px 0;\r\n  cursor: pointer;\r\n  transition: .2s;\r\n\r\n  &:hover {\r\n    background: #F1F1F1;\r\n    color: ${({hover: {color}}) => color || '#fff'};\r\n  }\r\n`\r\n\r\nexport default Variant \r\n","import styled from 'styled-components'\r\n// import { withButtonStyles } from '../../withDefinedStyles'\r\n\r\nexport const ButtonNext = styled.div`\r\n  width: 100%;\r\n  text-align: center;\r\n  padding-top: 40px;\r\n`\r\nconst Next = styled.button`\r\n  color: ${({normal: {color}}) => color || '#2a2a2a'};\r\n  background: ${({normal: {background}}) => background || '#ddd'};\r\n  border: ${({normal: {border}}) => border || '2px solid #ddd'};\r\n  padding: 10px 40px;\r\n  font-size: ${({normal: {fontSize}}) => fontSize || '16px'};\r\n  font-family: ${({normal: {fontFamily}}) => fontFamily || \"inherit\"};\r\n  font-weight: ${({normal: {fontWeight}}) => fontWeight || 'normal'};\r\n  transition: .3s;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: ${({hover: {background}}) => background || '#fff'};\r\n    color: ${({hover: {color}}) => color || '#2a2a2a'};\r\n    border: ${({hover: {border}}) => border || '2px solid #ddd'};\r\n  }\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n  }\r\n`\r\n\r\nexport default Next\r\n","import * as React from 'react'\r\n\r\nimport QuizWrap from './components/QuizWrap'\r\nimport QuestionsCont from './components/QuestionsCont'\r\nimport Question from './components/Question'\r\nimport QuizTitle from './components/QuizTitle'\r\nimport ImageBlock from './components/ImageBlock'\r\nimport QuizHeader from './components/QuizHeader'\r\nimport  Dot, { DotContainer } from './components/Dot'\r\nimport Variant, { VariantItems }  from './components/Variant'\r\nimport Next, { ButtonNext } from './components/ButtonNext'\r\nimport { Pagination, PaginationItem } from './components/Pagination'\r\n\r\nconst QuestionsPage = ({\r\n  questionItems,\r\n  selectedQuestionIndex,\r\n  title,\r\n  rightAnswer,\r\n  wrongAnswer,\r\n  handleSelectAnswer,\r\n  handleChangeQuiz,\r\n  handleOnPageStart,\r\n  handleOnPage,\r\n  handleOnPageResult,\r\n  options, block, header,\r\n  paragraph, button,\r\n  styles\r\n}) => {\r\n\r\n  questionItems = options.questions || questionItems;\r\n  block = styles.block || block;\r\n  header = styles.header || header;\r\n  paragraph = styles.paragraph || paragraph;\r\n  button = styles.button || button;\r\n  \r\n  return (\r\n    <>\r\n    <QuizWrap\r\n      border={block.border}\r\n      borderRadius={block.borderRadius}\r\n    >\r\n      <QuestionsCont>\r\n      {\r\n        questionItems.map((item, index) => (\r\n          index + 1 === selectedQuestionIndex &&\r\n          <React.Fragment key={item.id}>\r\n            <QuizTitle\r\n              fontSize={header.fontSize}\r\n              fontFamily={header.fontFamily}\r\n              fontWeight={header.fontWeight}\r\n              lineHeight={header.lineHeight}\r\n              color={header.color}\r\n            >\r\n              {options.title || title}\r\n            </QuizTitle>\r\n            {\r\n              item.image &&\r\n              <QuizHeader>\r\n                <ImageBlock>\r\n                  <img src={item.image} alt=\"\" />\r\n                </ImageBlock>\r\n              </QuizHeader>\r\n            }\r\n            <Question\r\n              fontSize={paragraph.fontSize}\r\n              fontFamily={paragraph.fontFamily}\r\n              color={paragraph.color}\r\n            >\r\n              {item.question}\r\n            </Question>\r\n            <DotContainer>\r\n              {\r\n                questionItems.map((item, index) => (\r\n                  <Dot\r\n                    border={button.normal.background}\r\n                    key={item.id}\r\n                    background={index + 1 === selectedQuestionIndex && button.normal.background}\r\n                  />\r\n                ))\r\n              }\r\n            </DotContainer>\r\n            <VariantItems>\r\n              {\r\n                item.answers.map((answer) => (\r\n                  answer.value &&\r\n                  <Variant\r\n                    key={answer.id}\r\n                    normal={paragraph}\r\n                    hover={button.hover}\r\n                    answerBorder={answer.id === rightAnswer ? '0 0 10px 0 inset green' :\r\n                                  answer.id === wrongAnswer && '0 0 10px 0 inset red' }\r\n                    onClick={() =>\r\n                      rightAnswer === null && wrongAnswer === null &&\r\n                      handleSelectAnswer(answer.id, item.indexRightAnswer)\r\n                    }\r\n                  >\r\n                    {answer.value}\r\n                  </Variant>\r\n                ))\r\n              }\r\n            </VariantItems>\r\n            <ButtonNext>\r\n              <Next\r\n                type=\"button\"\r\n                normal={button.normal}\r\n                hover={button.hover}\r\n                onClick={handleChangeQuiz}\r\n                disabled={rightAnswer === null && wrongAnswer === null && true}\r\n              >\r\n                Next\r\n              </Next>\r\n            </ButtonNext>\r\n          </React.Fragment>\r\n        ))\r\n      }\r\n      </QuestionsCont>\r\n     </QuizWrap>\r\n      <Pagination>\r\n        <PaginationItem onClick={handleOnPageStart}>start</PaginationItem>\r\n          {\r\n            questionItems.map((item, index) => (\r\n              <PaginationItem\r\n                key={item.id}\r\n                onClick={() => handleOnPage(index + 1)}\r\n                border={index + 1 === selectedQuestionIndex && 'solid 2px blue'}\r\n              >\r\n                {index + 1}\r\n              </PaginationItem>\r\n            ))\r\n          }\r\n        <PaginationItem onClick={handleOnPageResult}>results</PaginationItem>\r\n      </Pagination>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default QuestionsPage\r\n","import * as React from 'react'\r\n\r\nimport ResultPage from './ResultPage'\r\nimport StartPage from './StartPage'\r\nimport QuestionsPage from './QuestionsPage'\r\n\r\nclass Quiz extends React.Component  {\r\n\r\n  state = {\r\n    preview: false,\r\n    selectedQuestionIndex: 1,\r\n    rightAnswer: null,\r\n    wrongAnswer: null,\r\n    countRightAnswer: 0,\r\n    result: false,\r\n    options: {},\r\n    base: {},\r\n    block: {},\r\n    header: {},\r\n    button: {},\r\n    paragraph: {},\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    const htmlProps = window.funlib;\r\n    if (htmlProps && htmlProps.isEmbed) {\r\n      this.setOptions(htmlProps);\r\n    }\r\n  }\r\n\r\n  setOptions = (htmlProps) => {\r\n    this.setState({\r\n      options: htmlProps.options,\r\n      base: htmlProps.base,\r\n      block: htmlProps.block,\r\n      header: htmlProps.header,\r\n      button: htmlProps.button,\r\n      paragraph: htmlProps.paragraph,\r\n    });\r\n  }\r\n\r\n  handleStartQuestion = () => {\r\n    this.setState({preview: true})\r\n  }\r\n\r\n  handleOnPageStart = () => {\r\n    this.setState({\r\n      preview: false,\r\n      selectedQuestionIndex: 1,\r\n      result: false,\r\n      rightAnswer: null,\r\n      wrongAnswer: null,\r\n      countRightAnswer: 0,\r\n    })\r\n  }\r\n\r\n  handleOnPageResult = () => {\r\n    this.setState({\r\n      preview: false,\r\n      result: true,\r\n    })\r\n  }\r\n\r\n  handleOnPage = (id) => {\r\n    this.setState({\r\n      preview: true,\r\n      result: false,\r\n      rightAnswer: null,\r\n      wrongAnswer: null,\r\n      selectedQuestionIndex: id,\r\n    })\r\n  }\r\n\r\n  handleChangeQuiz = () => {\r\n    const questionItems = this.props.questionItems || this.state.options.questions;\r\n\r\n    if (this.state.selectedQuestionIndex >= questionItems.length) {\r\n      this.setState({\r\n        result: true,\r\n        preview: false\r\n      })\r\n    }else {\r\n      this.setState({\r\n        rightAnswer: null,\r\n        wrongAnswer: null,\r\n        selectedQuestionIndex: this.state.selectedQuestionIndex + 1\r\n      })\r\n    }\r\n  }\r\n\r\n  handleSelectAnswer = (index, indexRightAnswer) => {\r\n    const questionItems = this.props.questionItems || this.state.options.questions;\r\n\r\n    if (index === indexRightAnswer) {\r\n      this.setState({\r\n        rightAnswer: index,\r\n        countRightAnswer: this.state.countRightAnswer < questionItems.length ?\r\n          this.state.countRightAnswer + 1 : this.state.countRightAnswer + 0\r\n      })\r\n    } else {\r\n      this.setState({\r\n        rightAnswer: indexRightAnswer,\r\n        wrongAnswer: index\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      teaserImage, title, questionItems,\r\n      teaserBackground, finalTeaserImage,\r\n      finalTeaserBackground, styles\r\n    } = this.props;\r\n\r\n    const {\r\n      preview, selectedQuestionIndex, rightAnswer,\r\n      wrongAnswer, countRightAnswer, result,\r\n      options, block, header, button, paragraph, //base\r\n    } = this.state;\r\n    \r\n    if (preview) {\r\n      return (\r\n        <QuestionsPage\r\n          questionItems={questionItems}\r\n          selectedQuestionIndex={selectedQuestionIndex}\r\n          title={title}\r\n          rightAnswer={rightAnswer}\r\n          wrongAnswer={wrongAnswer}\r\n          handleSelectAnswer={this.handleSelectAnswer}\r\n          handleChangeQuiz={this.handleChangeQuiz}\r\n          handleOnPageStart={this.handleOnPageStart}\r\n          handleOnPage={this.handleOnPage}\r\n          handleOnPageResult={this.handleOnPageResult}\r\n          options={options}\r\n          block={block}\r\n          header={header}\r\n          paragraph={paragraph}\r\n          button={button}\r\n          styles={styles}\r\n        />\r\n      )\r\n    }else if (result) {\r\n      return (\r\n        <ResultPage\r\n          title={title}\r\n          finalTeaserImage={finalTeaserImage}\r\n          countRightAnswer={countRightAnswer}\r\n          questionItems={questionItems}\r\n          result={result}\r\n          handleOnPageStart={this.handleOnPageStart}\r\n          handleOnPage={this.handleOnPage}\r\n          finalTeaserBackground={finalTeaserBackground}\r\n          options={options}\r\n          block={block}\r\n          header={header}\r\n          button={button}\r\n          styles={styles}\r\n        />\r\n      )\r\n    }else {\r\n      return (\r\n        <StartPage\r\n          title={title}\r\n          teaserImage={teaserImage}\r\n          questionItems={questionItems}\r\n          preview={preview}\r\n          teaserBackground={teaserBackground}\r\n          handleStartQuestion={this.handleStartQuestion}\r\n          handleOnPage={this.handleOnPage}\r\n          handleOnPageResult={this.handleOnPageResult}\r\n          options={options}\r\n          block={block}\r\n          header={header}\r\n          button={button}\r\n          styles={styles}\r\n        />\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Quiz\r\n","import styled from 'styled-components'\r\n\r\nconst AddQuestionButton = styled.button`\r\n  margin: 0 auto;\r\n  display: block;\r\n  border: solid 2px #6a90e8;\r\n  border-radius: 3px;\r\n  background: #fff;\r\n  color: #6a90e8;\r\n  padding: 5px 15px 5px 35px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  outline: none;\r\n  position: relative;\r\n  &:hover {\r\n    color: #244AC2;\r\n    > span {\r\n      color: #244AC2;\r\n    }\r\n  }\r\n  > span {\r\n    border-right: solid 1px #6a90e8;\r\n    padding: 0 2px;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n  }\r\n`\r\nexport default AddQuestionButton","import styled from 'styled-components'\r\n\r\nconst CodeButton = styled.button`\r\n  color: #fff;\r\n  border: none;\r\n  padding: 8px 15px;\r\n  border-radius: 3px;\r\n  background: #0052CC;\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n    color: #B2B2B2;\r\n  } \r\n  &:hover {\r\n    background: #0065FF;\r\n  }\r\n`\r\nexport default CodeButton","import styled from 'styled-components'\r\n\r\nconst IconsContainer = styled.div`\r\n  width:100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`\r\n\r\nexport default IconsContainer","import styled from 'styled-components'\r\n\r\nconst Wrapper = styled.div`\r\n  > span {\r\n    cursor: pointer;\r\n    margin-left: 5px;\r\n    margin-bottom: 5px;\r\n    > svg {\r\n      width: 30px;\r\n      height: 30px;\r\n    }\r\n  }\r\n  > p {\r\n    color: #689F4B;\r\n  }\r\n`\r\n\r\nexport default Wrapper","import * as React from 'react'\r\n\r\nimport TextArea from '@atlaskit/textarea'\r\nimport CopyIcon from '@atlaskit/icon/glyph/copy'\r\n\r\nimport IconsContainer from './IconsContainer'\r\nimport Wrapper from './Wrapper'\r\n\r\nconst CodeGenerator = ({code}) => {\r\n\r\n  const [copySuccess, setCopySuccess] = React.useState('');\r\n  const textAreaRef = React.useRef(null);\r\n\r\n  const copyToClipboard =(e) => {\r\n    textAreaRef.current.select();\r\n    document.execCommand('copy');\r\n    e.target.focus();\r\n    setCopySuccess('Сode copied!');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconsContainer>\r\n        <Wrapper>\r\n          <p>{copySuccess}</p>\r\n        </Wrapper>\r\n\r\n        <Wrapper onClick={copyToClipboard} title='Copy code'>\r\n          <CopyIcon primaryColor={copySuccess ? '#689F4B' : '#424242'} />\r\n        </Wrapper>\r\n      </IconsContainer>\r\n\r\n      <TextArea readOnly ref={textAreaRef} value={code} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CodeGenerator","import styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NavLink = styled(Link)`\r\n  color: #070707;\r\n  font-size: 18px;\r\n  position: relative;\r\n  margin-right: 15px;\r\n  \r\n  &:last-child {\r\n    margin-right: 0;\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    display: block;\r\n    width: 100%;\r\n    height: 2px;\r\n    background: #1A3E73;\r\n    position: absolute;\r\n    top: 25px;\r\n    left: 0;\r\n    transform: scale(0);\r\n    opacity: 0;\r\n    transition: .2s\r\n  } \r\n\r\n  &:hover {\r\n    color: #1A3E73;\r\n    text-decoration: none;\r\n\r\n    &::after {\r\n      transform: scale(1);\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  &:active, &:focus {\r\n    outline: none;\r\n  }\r\n`\r\nexport default NavLink","import React, { PureComponent } from 'react'\r\nimport Modal, { ModalTransition } from '@atlaskit/modal-dialog'\r\nimport styled from 'styled-components'\r\n\r\nimport CodeButton from './components/CodeButton'\r\nimport CodeGenerator from '../CodeGeneration'\r\nimport NavLink from '../NavLink'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 50px;\r\n`\r\nconst Text = styled.p`\r\n  display: block;\r\n  margin: 0 10px;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n`\r\n\r\nclass CodeModal extends PureComponent {\r\n  state = { isOpen: false }\r\n\r\n  open = () => this.setState({ isOpen: true })\r\n\r\n  close = () => this.setState({ isOpen: false })\r\n\r\n  render() {\r\n    const { isOpen } = this.state;\r\n    const {code, isDisabled} = this.props;\r\n\r\n    const actions = [{ text: 'Close', onClick: this.close }]\r\n\r\n    return (\r\n      <>\r\n        <Container>\r\n          <CodeButton\r\n            onClick={this.open} \r\n            disabled={isDisabled}\r\n            title={isDisabled ? 'Please add a questions, at least\\n2 answers and do not forget\\nto specify the correct answer.' : undefined}\r\n          >\r\n            Get code\r\n          </CodeButton>\r\n          <Text>or you can create totally</Text>\r\n          <NavLink\r\n            onClick={() => {\r\n              sessionStorage.removeItem('props');\r\n              sessionStorage.removeItem('parsData');\r\n              sessionStorage.removeItem('configured colors');\r\n              sessionStorage.removeItem('configured styles');\r\n            }} \r\n            to=\"/\">New Quiz</NavLink\r\n          >\r\n        </Container>\r\n\r\n        <ModalTransition>\r\n          {isOpen &&\r\n            <Modal\r\n              actions={actions}\r\n              onClose={this.close}\r\n              heading=\"Great! Now you get your interactive code!\"\r\n            >\r\n              <CodeGenerator code={code} />\r\n            </Modal>\r\n          }\r\n        </ModalTransition>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeModal","import styled from 'styled-components'\r\n\r\nconst StyleContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 30px;\r\n`\r\n\r\nexport default StyleContainer","import styled from 'styled-components'\r\n\r\nconst SelectContainer = styled.div`\r\n  width: 100%;\r\n`\r\n\r\nexport default SelectContainer","import styled from 'styled-components'\r\n\r\nconst ColorPickerContainer = styled.div`\r\n  min-width:40px;\r\n`\r\nexport default ColorPickerContainer","import styled from 'styled-components'\r\n\r\nconst TitleContainer = styled.h4`\r\n  margin-bottom: 5px;\r\n`\r\n\r\nexport default TitleContainer","import * as React from 'react'\r\nimport Select from '@atlaskit/select';\r\nimport ColorPicker from '@atlaskit/color-picker';\r\nimport styled from 'styled-components'\r\n\r\nimport StyleContainer from '../StyleContainer'\r\nimport SelectContainer from '../StyleSelectContainer'\r\nimport ColorPickerContainer from '../ColorPickerContainer'\r\nimport TitleContainer from '../StyleTitle'\r\n\r\n\r\n// for checking \r\nconst RowDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid #B6B6B6;\r\n  padding-bottom: 10px;\r\n`\r\n\r\nconst StyleChoose = ({title, background, styles, setColor, setStyle}) => {\r\n  const [SelectedColor, setSelectedColor] = React.useState();\r\n  return (\r\n    <StyleContainer>\r\n      <TitleContainer>{title}</TitleContainer>\r\n      <RowDiv>\r\n        <ColorPickerContainer>\r\n          {\r\n            background.length > 0 && \r\n            <ColorPicker\r\n              label=\"Change color\"\r\n              palette={background}\r\n              selectedColor={SelectedColor}\r\n              onChange={(newColor) => {\r\n                setColor(newColor, title);\r\n                setSelectedColor(newColor);\r\n              }}\r\n            />\r\n          }\r\n        </ColorPickerContainer>\r\n        <SelectContainer>\r\n          { \r\n            styles && \r\n            <Select\r\n              placeholder=\"Select a style for the item.\"\r\n              options={styles}\r\n              onChange={value => setStyle(value, title)}\r\n            /> \r\n          }\r\n        </SelectContainer>\r\n      </RowDiv>\r\n    </StyleContainer>\r\n  );\r\n}\r\n\r\n\r\nexport default StyleChoose\r\n","import * as React from 'react'\r\nimport StyleChoose from '../StyleChoose'\r\n\r\nconst ListStyles = ({title, colors, styles, setColor, setStyle}) => (\r\n  <StyleChoose \r\n    title={title} \r\n    background={colors} \r\n    styles={styles}\r\n    setColor={setColor} \r\n    setStyle={setStyle}\r\n  />\r\n)\r\n\r\nexport default ListStyles","import * as React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport ListStyles from '../ListStyles'\r\n\r\nconst AllStylesContainer = styled.div`\r\n  margin: 50px;\r\n`\r\n\r\nconst AllStyles = ({styles, setColor, setStyle}) => {\r\n  let temp = 0;\r\n\r\n  const Items = styles.map((item) => \r\n    <ListStyles \r\n      title={item.title} \r\n      colors={item.color}\r\n      styles={item.style}\r\n      key={temp+=1}\r\n      setColor={setColor} \r\n      setStyle={setStyle}\r\n    />\r\n  )\r\n\r\n  return (\r\n    <AllStylesContainer>\r\n      {Items}\r\n    </AllStylesContainer>\r\n  )\r\n}\r\n\r\nexport default AllStyles","import * as React from 'react'\r\nimport AddCircleIcon from '@atlaskit/icon/glyph/add-circle'\r\nimport EditorInfoIcon from '@atlaskit/icon/glyph/editor/info';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport withAuth from '../components/Auth/component/WithAuth'\r\nimport AppMain from '../components/AppMain'\r\nimport Container from '../components/WidthContainer'\r\nimport { Content, ContentRight } from '../components/Content'\r\nimport EditorHeading from '../components/Editor/components/EditorHeading'\r\nimport TextMessage from '../components/Editor/components/textMessage'\r\nimport Slider from '../components/Slider'\r\nimport BasicPart from '../components/Editor/BasicPart'\r\nimport QuestionPart from '../components/Editor/QuestionPart'\r\nimport FinalTeaser from '../components/Editor/FinalTeaser'\r\nimport Quiz from '@components/quiz'\r\nimport AddQuestionButton from '../components/Editor/components/AddQuestionButton'\r\nimport CodeModal from '../components/CodeModal'\r\nimport AllStyles from '../components/StylesSelect/AllStyles'\r\nimport { getCode } from '../Configurations/code'\r\n\r\n\r\nclass EditorPage extends React.Component {\r\n\r\n  state = {\r\n    title: '',\r\n    teaserImage: '',\r\n    finalTeaserImage: '',\r\n    teaserImageValid: true,\r\n    finalTeaserImageValid: true,\r\n    teaserBackground: {\r\n      color: '#000',\r\n      opacity: 0.5\r\n    },\r\n    finalTeaserBackground: {\r\n      color: '#000',\r\n      opacity: 0.5\r\n    },\r\n    questionItems: [\r\n      {\r\n        id: 1,\r\n        image:'',\r\n        question: '',\r\n        indexRightAnswer: 0,\r\n        itemValid: false,\r\n        imageValid: true,\r\n        answers: [\r\n          {id: 1, value:''},\r\n          {id: 2, value:''},\r\n          {id: 3, value:''}\r\n        ]\r\n      }\r\n    ],\r\n    codeModalDisabled: true,\r\n    styles: [],\r\n    configuredStyles: {},\r\n    configuredColors: {},\r\n    options: {\r\n      base: {\r\n        fontSize: '',\r\n        backgroundColor: '',\r\n        border: '',\r\n        borderRadius: '',\r\n      },\r\n      block: {\r\n        background: '',\r\n        border: '',\r\n        borderRadius: '',\r\n      },\r\n      header: {\r\n        fontFamily: '',\r\n        fontSize: '',\r\n        color: '',\r\n        lineHeight: '',\r\n        textDecoration: '',\r\n        fontWeight: '',\r\n      },\r\n      button: {\r\n        normal: {\r\n          color: '',\r\n          background: '',\r\n          border: '',\r\n          fontSize: '',\r\n          fontFamily: '',\r\n          fontWeight: '',\r\n        },\r\n        hover: {\r\n          background: '',\r\n          color: '',\r\n          border: '',\r\n        },\r\n      },\r\n      paragraph: {\r\n        fontFamily: '',\r\n        fontSize: '',\r\n        color: '',\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    //@ts-ignore\r\n    const styles = JSON.parse(sessionStorage.getItem('props'));\r\n    //@ts-ignore\r\n    const configuredStyles = JSON.parse(sessionStorage.getItem('configured styles'));\r\n    //@ts-ignore\r\n    const configuredColors = JSON.parse(sessionStorage.getItem('configured colors'));\r\n\r\n    if (styles && configuredStyles && configuredColors) {\r\n      this.setParsData(styles, configuredStyles, configuredColors);\r\n    }\r\n  }\r\n\r\n  setParsData = (styles:[], configuredStyles:{}, configuredColors:{}) => {\r\n    const options = {...this.state.options};\r\n    const confStyles:any = configuredStyles;\r\n    const confColors:any = configuredColors;\r\n\r\n    options.block.border = confStyles.block[0] && confStyles.block[0].border;\r\n    options.block.borderRadius = confStyles.block[0] && confStyles.block[0].borderRadius;\r\n    options.header.fontFamily = confStyles.header[0] && confStyles.header[0].fontFamily;\r\n    options.header.fontSize = confStyles.header[0] && confStyles.header[0].fontSize;\r\n    options.header.fontWeight = confStyles.header[0] && confStyles.header[0].fontWeight;\r\n    options.header.lineHeight = confStyles.header[0] && confStyles.header[0].lineHeight;\r\n    options.header.textDecoration = confStyles.header[0] && confStyles.header[0].textDecoration;\r\n    options.header.color = confColors.header[0] && confColors.header[0];\r\n    options.button.normal.border = confStyles.button.normal[0] && confStyles.button.normal[0].border;\r\n    options.button.normal.color = confStyles.button.normal[0] && confStyles.button.normal[0].color;\r\n    options.button.normal.fontFamily = confStyles.button.normal[0] && confStyles.button.normal[0].fontFamily;\r\n    options.button.normal.fontSize = confStyles.button.normal[0] && confStyles.button.normal[0].fontSize;\r\n    options.button.normal.fontWeight = confStyles.button.normal[0] && confStyles.button.normal[0].fontWeight;\r\n    options.button.normal.background = confColors.button.normal[0] && confColors.button.normal[0];\r\n    options.button.hover.border = confStyles.button.hover[0] && confStyles.button.hover[0].border;\r\n    options.button.hover.color = confStyles.button.hover[0] && confStyles.button.hover[0].color;\r\n    options.button.hover.background = confColors.button.hover[0] && confColors.button.hover[0];\r\n    options.paragraph.fontFamily = confStyles.paragraph[0] && confStyles.paragraph[0].fontFamily;\r\n    options.paragraph.fontSize = confStyles.paragraph[0] && confStyles.paragraph[0].fontSize;\r\n    options.paragraph.color = confStyles.paragraph[0] && confColors.paragraph[0];\r\n\r\n    this.setState({\r\n      styles,\r\n      options,\r\n      configuredStyles: confStyles,\r\n      configuredColors: confColors\r\n    });\r\n  }\r\n\r\n  onChangeHandle = (event:any) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    if (name === 'teaserImage') {\r\n      this.setState({\r\n        [name]: value,\r\n        teaserImageValid: this.validateImage(value)\r\n      });\r\n    }\r\n    else if (name === 'finalTeaserImage') {\r\n      this.setState({\r\n        [name]: value,\r\n        finalTeaserImageValid: this.validateImage(value)\r\n      });\r\n    }\r\n    else this.setState({[name]: value});\r\n  }\r\n\r\n  removeTitle = () => {\r\n    this.setState({title: ''});\r\n  }\r\n\r\n  removeTeaserImage = () => {\r\n    this.setState({\r\n      teaserImage: '',\r\n      teaserImageValid: true\r\n    });\r\n  }\r\n\r\n  removeFinalTeaserImage = () => {\r\n    this.setState({\r\n      finalTeaserImage: '',\r\n      finalTeaserImageValid: true\r\n    });\r\n  }\r\n\r\n  changeQuestion = (event:any, id:number) => {\r\n    const questionItems = [...this.state.questionItems];\r\n    const questionItem = questionItems.find(item => item.id === id);\r\n\r\n    if (questionItem) {\r\n      questionItem.question = event.target.value;\r\n      questionItem.itemValid = this.validateQuestionItem(id)\r\n    }\r\n      \r\n    this.setState({questionItems}, this.activateCodeModal);\r\n  }\r\n\r\n  changeBackgroundTeaser = (color:string) => {\r\n    const teaserBackground = {...this.state.teaserBackground};\r\n    teaserBackground.color = color;\r\n\r\n    this.setState({teaserBackground});\r\n  }\r\n\r\n  changeFinalBackgroundTeaser = (color:string) => {\r\n    const finalTeaserBackground = {...this.state.finalTeaserBackground};\r\n    finalTeaserBackground.color = color;\r\n\r\n    this.setState({finalTeaserBackground});\r\n  }\r\n\r\n  setOpacityBackgroundTeaser = (opacity:number) => {\r\n    const teaserBackground = {...this.state.teaserBackground};\r\n    teaserBackground.opacity = opacity;\r\n\r\n    this.setState({teaserBackground});\r\n  }\r\n\r\n  setOpacityFinalBackgroundTeaser = (opacity:number) => {\r\n    const finalTeaserBackground = {...this.state.finalTeaserBackground};\r\n    finalTeaserBackground.opacity = opacity;\r\n\r\n    this.setState({finalTeaserBackground});\r\n  }\r\n\r\n  removeQuestion = (id:number) => {\r\n    const questionItems = [...this.state.questionItems];\r\n    const questionItem = questionItems.find(item => item.id === id);\r\n    if (questionItem) {\r\n      questionItem.question = '';\r\n      questionItem.itemValid = this.validateQuestionItem(id)\r\n    }\r\n      \r\n    this.setState({questionItems}, this.activateCodeModal);\r\n  }\r\n\r\n  changeImage = (event:any, id:number) => {\r\n    const questionItems = [...this.state.questionItems];\r\n    const questionItem = questionItems.find(item => item.id === id);\r\n    \r\n    if (questionItem) {\r\n      questionItem.image = event.target.value;\r\n      questionItem.imageValid = this.validateImage(event.target.value);\r\n      questionItem.itemValid = this.validateQuestionItem(id);\r\n    }\r\n      \r\n    this.setState({questionItems}, this.activateCodeModal);\r\n  }\r\n\r\n  removeImage = (id:number) => {\r\n    const questionItems = [...this.state.questionItems];\r\n    const questionItem = questionItems.find(item => item.id === id);\r\n    if (questionItem) {\r\n      questionItem.image = '';\r\n      questionItem.imageValid = true;\r\n      questionItem.itemValid = this.validateQuestionItem(id)\r\n    }\r\n      \r\n    this.setState({questionItems}, this.activateCodeModal);\r\n  }\r\n\r\n  changeAnswers = (event:any, questionID:number, answerID:number) => { \r\n    const questionItems = [...this.state.questionItems];\r\n    const questionItem = questionItems.find(item => item.id === questionID);\r\n\r\n    if(questionItem) {\r\n      const answers = [...questionItem.answers];\r\n      const answer = answers.find(a => a.id === answerID);\r\n      if (answer) {\r\n        answer.value = event.target.value;\r\n        questionItem.itemValid = this.validateQuestionItem(questionID)\r\n      }\r\n    }\r\n\r\n    this.setState({questionItems}, this.activateCodeModal);\r\n  }\r\n\r\n  removeAnswers = (questionID:number, answerID:number) => {\r\n    const questionItems = [...this.state.questionItems];\r\n    const questionItem = questionItems.find(item => item.id === questionID);\r\n\r\n    if(questionItem) {\r\n      const answers = [...questionItem.answers];\r\n      const answer = answers.find(a => a.id === answerID);\r\n      if (answer) {\r\n        answer.value = '';\r\n        questionItem.indexRightAnswer = 0;\r\n        questionItem.itemValid = this.validateQuestionItem(questionID)\r\n      }\r\n    }\r\n\r\n    this.setState({questionItems}, this.activateCodeModal);\r\n  }\r\n\r\n  selectRightAnswer = (questionID:number, answerID:number) => {\r\n    const questionItems = [...this.state.questionItems];\r\n    const questionItem = questionItems.find(item => item.id === questionID);\r\n\r\n    if (questionItem) {\r\n      questionItem.indexRightAnswer = answerID;\r\n      questionItem.itemValid = this.validateQuestionItem(questionID)\r\n    }\r\n      \r\n    this.setState({questionItems}, this.activateCodeModal);\r\n  }\r\n\r\n  addNewQuestion = () => {\r\n    const questionItems = [...this.state.questionItems];\r\n\r\n    let newItemID = 0;\r\n    if (questionItems.length > 0) {\r\n      newItemID = questionItems[questionItems.length -1].id;\r\n    }\r\n    \r\n    newItemID++;\r\n\r\n    const newItems = {\r\n      id: newItemID,\r\n      image:'',\r\n      question: '',\r\n      indexRightAnswer: 0,\r\n      itemValid: false,\r\n      imageValid: true,\r\n      answers: [\r\n        {id: 1, value:''},\r\n        {id: 2, value:''},\r\n        {id: 3, value:''}\r\n      ]\r\n    }\r\n    questionItems.push(newItems);\r\n\r\n    this.setState({questionItems});\r\n  }\r\n\r\n  removeQuestionItem = (id:number) => {\r\n    this.setState({\r\n      questionItems: [...this.state.questionItems.filter(item => item.id !== id)]\r\n    }, this.activateCodeModal);\r\n  }\r\n\r\n  validateImage = (imageUrl:string) => {\r\n    const regexp = /^http(s)?:\\/\\/\\S+(?:jpg|jpeg|png|gif)$/;\r\n    \r\n    if (imageUrl.match(regexp) || !imageUrl) {\r\n      return true;\r\n    }\r\n    else return false;\r\n  }\r\n\r\n  validateQuestionItem = (id:number):any => {\r\n\r\n    const checkAnswers = (answers:object) => {\r\n      if (answers[0].value && answers[1].value || \r\n          answers[0].value && answers[2].value || \r\n          answers[1].value && answers[2].value) {\r\n        return true;\r\n      }\r\n      else return false;\r\n    }\r\n\r\n    const questionItem = this.state.questionItems.find( item => item.id === id && item.question !== '' && item.indexRightAnswer > 0 && checkAnswers(item.answers) && item.imageValid);\r\n    \r\n    if (questionItem) {\r\n      return true;\r\n    } \r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  activateCodeModal = () => {\r\n    const itemValid = this.state.questionItems.find(item => item.itemValid);\r\n    \r\n    if (itemValid) {\r\n      this.setState({codeModalDisabled: false});\r\n    }\r\n    else {\r\n      this.setState({codeModalDisabled: true});\r\n    }\r\n  }\r\n\r\n  setColor = (newColor:string, title:string) => {\r\n    const options = {...this.state.options};\r\n\r\n    switch (title) {\r\n      case 'Quiz Block:': {\r\n        options.block.background = newColor;\r\n        break;\r\n      }\r\n      case 'Title:': {\r\n        options.header.color = newColor;\r\n        break;\r\n      }\r\n      case 'Button:': {\r\n        options.button.normal.background = newColor;\r\n        break;\r\n      }\r\n      case 'Questions & Answers:': {\r\n        options.paragraph.color = newColor;\r\n        break;\r\n      }\r\n    }\r\n    \r\n    this.setState({options});\r\n  }\r\n\r\n  setStyle = (selectValue:any, title:string) => {\r\n    const options = {...this.state.options};\r\n    const exp = `${title}${selectValue.value}`;\r\n    const configuredStyles:any = this.state.configuredStyles;\r\n\r\n    switch (exp) {\r\n      case 'Quiz Block:1': {\r\n        options.block.border = configuredStyles.block[0].border;\r\n        options.block.borderRadius = configuredStyles.block[0].borderRadius;\r\n        break;\r\n      }\r\n      case 'Quiz Block:2': {\r\n        options.block.border = configuredStyles.block[1].border;\r\n        options.block.borderRadius = configuredStyles.block[1].borderRadius;\r\n        break;\r\n      }\r\n      case 'Quiz Block:3': {\r\n        options.block.border = configuredStyles.block[2].border;\r\n        options.block.borderRadius = configuredStyles.block[2].borderRadius;\r\n        break;\r\n      }\r\n      case 'Title:1': {\r\n        options.header.fontFamily = configuredStyles.header[0].fontFamily;\r\n        options.header.fontSize = configuredStyles.header[0].fontSize;\r\n        options.header.fontWeight = configuredStyles.header[0].fontWeight;\r\n        options.header.lineHeight = configuredStyles.header[0].lineHeight;\r\n        options.header.textDecoration = configuredStyles.header[0].textDecoration;\r\n        break;\r\n      }\r\n      case 'Title:2': {\r\n        options.header.fontFamily = configuredStyles.header[1].fontFamily;\r\n        options.header.fontSize = configuredStyles.header[1].fontSize;\r\n        options.header.fontWeight = configuredStyles.header[1].fontWeight;\r\n        options.header.lineHeight = configuredStyles.header[1].lineHeight;\r\n        options.header.textDecoration = configuredStyles.header[1].textDecoration;\r\n        break;\r\n      }\r\n      case 'Button:1': {\r\n        options.button.normal.border = configuredStyles.button.normal[0].border;\r\n        options.button.normal.color = configuredStyles.button.normal[0].color;\r\n        options.button.normal.fontFamily = configuredStyles.button.normal[0].fontFamily;\r\n        options.button.normal.fontSize = configuredStyles.button.normal[0].fontSize;\r\n        options.button.normal.fontWeight = configuredStyles.button.normal[0].fontWeight;\r\n        options.button.hover.border = configuredStyles.button.hover[0].border;\r\n        options.button.hover.color = configuredStyles.button.hover[0].color;\r\n        break;\r\n      }\r\n      case 'Button:2': {\r\n        options.button.normal.border = configuredStyles.button.normal[1].border;\r\n        options.button.normal.color = configuredStyles.button.normal[1].color;\r\n        options.button.normal.fontFamily = configuredStyles.button.normal[1].fontFamily;\r\n        options.button.normal.fontSize = configuredStyles.button.normal[1].fontSize;\r\n        options.button.normal.fontWeight = configuredStyles.button.normal[1].fontWeight;\r\n        options.button.hover.border = configuredStyles.button.hover[1].border;\r\n        options.button.hover.color = configuredStyles.button.hover[1].color;\r\n        break;\r\n      }\r\n      case 'Questions & Answers:1': {\r\n        options.paragraph.fontFamily = configuredStyles.paragraph[0].fontFamily;\r\n        options.paragraph.fontSize = configuredStyles.paragraph[0].fontSize;\r\n        break;\r\n      }\r\n      case 'Questions & Answers:2': {\r\n        options.paragraph.fontFamily = configuredStyles.paragraph[1].fontFamily;\r\n        options.paragraph.fontSize = configuredStyles.paragraph[1].fontSize;\r\n        break;\r\n      }\r\n      case 'Questions & Answers:3': {\r\n        options.paragraph.fontFamily = configuredStyles.paragraph[2].fontFamily;\r\n        options.paragraph.fontSize = configuredStyles.paragraph[2].fontSize;\r\n        break;\r\n      }\r\n    }\r\n    this.setState({options})\r\n  }\r\n\r\n  render() {\r\n    \r\n    const {\r\n      title,\r\n      teaserImage,\r\n      questionItems,\r\n      teaserBackground,\r\n      finalTeaserImage,\r\n      finalTeaserBackground,\r\n      codeModalDisabled,\r\n      teaserImageValid,\r\n      finalTeaserImageValid,\r\n      styles,\r\n      options\r\n    } = this.state;\r\n\r\n    const simplePalette = [\r\n      {label: 'black', value: '#000'},\r\n      {label: 'white', value: '#fff'}\r\n    ]\r\n    \r\n    return (\r\n      <AppMain>\r\n        <Container>\r\n          <EditorHeading>That's cool! Create your Quiz right away!</EditorHeading>\r\n          <TextMessage>\r\n            <h3><EditorInfoIcon label='' primaryColor='#244AC2' /> Before you start!</h3>\r\n            <p>for each block provide question and at least 2 answers, and do not forget to specify which answer is correct.</p>\r\n          </TextMessage>\r\n          <Content>\r\n            <Slider>\r\n              <BasicPart\r\n                title={title}\r\n                teaserImage={teaserImage}\r\n                onChangeHandle={this.onChangeHandle}\r\n                removeTitle={this.removeTitle}\r\n                removeTeaserImage={this.removeTeaserImage}\r\n                changeBackgroundTeaser={this.changeBackgroundTeaser}\r\n                simplePalette={simplePalette}\r\n                teaserBackground={teaserBackground}\r\n                setOpacityBackgroundTeaser={this.setOpacityBackgroundTeaser}\r\n                teaserImageValid={teaserImageValid}\r\n              />\r\n              <TransitionGroup>\r\n              {\r\n                questionItems.map((item, index) => (\r\n                  <CSSTransition key={item.id} timeout={300} classNames=\"item\">\r\n                    <QuestionPart\r\n                      itemIndex={index}\r\n                      questionItem={item}\r\n                      questionItemsLength={questionItems.length}\r\n                      changeQuestion={this.changeQuestion}\r\n                      changeImage={this.changeImage}\r\n                      removeQuestion={this.removeQuestion}\r\n                      removeImage={this.removeImage}\r\n                      changeAnswers={this.changeAnswers}\r\n                      removeAnswers={this.removeAnswers}\r\n                      selectRightAnswer={this.selectRightAnswer}\r\n                      removeQuestionItem={this.removeQuestionItem}\r\n                    />\r\n                  </CSSTransition>\r\n                ))\r\n              }\r\n              </TransitionGroup>\r\n\r\n              {\r\n                questionItems.length < 5 &&\r\n                <AddQuestionButton\r\n                  onClick={this.addNewQuestion}\r\n                >\r\n                  <AddCircleIcon label='' primaryColor='#6a90e8' />\r\n                  Add Question\r\n                </AddQuestionButton>\r\n              }\r\n              \r\n              <FinalTeaser\r\n                finalTeaserImage={finalTeaserImage}\r\n                simplePalette={simplePalette}\r\n                finalTeaserBackground={finalTeaserBackground}\r\n                setOpacityFinalBackgroundTeaser={this.setOpacityFinalBackgroundTeaser}\r\n                changeFinalBackgroundTeaser={this.changeFinalBackgroundTeaser}\r\n                onChangeHandle={this.onChangeHandle}\r\n                removeFinalTeaserImage={this.removeFinalTeaserImage}\r\n                finalTeaserImageValid={finalTeaserImageValid}\r\n              />\r\n            \r\n              {\r\n                styles && \r\n                <AllStyles \r\n                  styles={styles}\r\n                  setColor={this.setColor}\r\n                  setStyle={this.setStyle}\r\n                />\r\n              }\r\n            </Slider>\r\n\r\n            <ContentRight>\r\n              <Quiz\r\n                title={title}\r\n                teaserImage={teaserImage}\r\n                finalTeaserImage={finalTeaserImage}\r\n                questionItems={questionItems}\r\n                teaserBackground={teaserBackground}\r\n                finalTeaserBackground={finalTeaserBackground}\r\n                styles={options}\r\n              />\r\n              <CodeModal\r\n                code={getCode(this.state)}\r\n                isDisabled={codeModalDisabled}\r\n              />\r\n            </ContentRight>\r\n          </Content>\r\n        </Container>\r\n      </AppMain>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAuth(EditorPage)\r\n","export const getCode = (state) => {\r\n  return `\r\n    <div id=\"funlib\"></div>\r\n    <script>\r\n      var funlib = {\r\n        isEmbed : true,\r\n        options: {\r\n          title: '${state.title}',\r\n          startBackground: '${state.teaserBackground.color}',\r\n          startOpacity: ${state.teaserBackground.opacity},\r\n          startImage: '${state.teaserImage}',\r\n          resultBackground: '${state.finalTeaserBackground.color}',\r\n          resultOpacity: ${state.finalTeaserBackground.opacity},\r\n          resultImage: '${state.finalTeaserImage}',\r\n          questions: ${JSON.stringify(state.questionItems)}\r\n        },\r\n        base: {\r\n          fontSize: '${state.options.base.fontSize}',\r\n          backgroundColor: '${state.options.base.backgroundColor}',\r\n          border: '${state.options.base.border}',\r\n          borderRadius: '${state.options.base.borderRadius}',\r\n        },\r\n        block: {\r\n          background: '${state.options.block.background}',\r\n          border: '${state.options.block.border}',\r\n          borderRadius: '${state.options.block.borderRadius}',\r\n        },\r\n        header: {\r\n          fontFamily: '${state.options.header.fontFamily}',\r\n          fontSize: '${state.options.header.fontSize}',\r\n          color: '${state.options.header.color}',\r\n          lineHeight: '${state.options.header.lineHeight}',\r\n          textDecoration: '${state.options.header.textDecoration}',\r\n          fontWeight: '${state.options.header.fontWeight}',\r\n        },\r\n        button: {\r\n          normal: {\r\n            color: '${state.options.button.normal.color}',\r\n            background: '${state.options.button.normal.background}',\r\n            border: '${state.options.button.normal.border}',\r\n            fontSize: '${state.options.button.normal.fontSize}',\r\n            fontFamily: '${state.options.button.normal.fontFamily}',\r\n            fontWeight: '${state.options.button.normal.fontWeight}',\r\n          },\r\n          hover: {\r\n            background: '${state.options.button.hover.background}',\r\n            color: '${state.options.button.hover.color}',\r\n            border: '${state.options.button.hover.border}',\r\n          },\r\n        },\r\n        paragraph: {\r\n          fontFamily: '${state.options.paragraph.fontFamily}',\r\n          fontSize: '${state.options.paragraph.fontSize}',\r\n          color: '${state.options.paragraph.color}',\r\n        },\r\n      }\r\n    </script>\r\n\r\n    <script src=\"${window.location.origin}/funlib/shared/2.647966a5.chunk.js\"></script>\r\n    <script src=\"${window.location.origin}/funlib/shared/main.cb066904.chunk.js\"></script>\r\n    <script src=\"${window.location.origin}/funlib/shared/runtime~main.c5541365.js\"></script>\r\n  `\r\n}","import React from 'react'\r\nimport Modal, { ModalTransition } from '@atlaskit/modal-dialog'\r\n\r\nconst ConfirmDelete = ({itemId, deleteItem, cancelDeleting}) => {\r\n  return (\r\n    <ModalTransition>\r\n      <Modal \r\n        actions={[\r\n          {text: 'Delete', onClick: () => deleteItem(itemId)},\r\n          {text: 'Cancel', appearance: 'primary', onClick: cancelDeleting}\r\n        ]}\r\n        appearance='danger'\r\n        heading='Please, confirm'\r\n      >\r\n        <p>Are you sure you want to delete this result?</p>\r\n        <p>This action cannot be aborted.</p>\r\n      </Modal>\r\n    </ModalTransition>\r\n  )\r\n}\r\n\r\nexport default ConfirmDelete","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Pagination from '@atlaskit/pagination'\r\n\r\nconst PaginationContainer = styled.div`\r\n  margin: 30px 0;\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst ParserResultPagination = ({pagination, selectPage}) => {\r\n  const pages = Array.from({length: pagination.last_page}, (v, k) => k + 1)\r\n\r\n  return (\r\n    <PaginationContainer>\r\n      <Pagination\r\n        pages={pages} \r\n        selectedIndex={pagination.current_page - 1}\r\n        onChange={(e, page) => selectPage(`/pages?page=${page}`)}\r\n      />\r\n    </PaginationContainer>\r\n  )\r\n}\r\n\r\nexport default ParserResultPagination","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport DropdownMenu, { DropdownItemGroup, DropdownItem } from '@atlaskit/dropdown-menu'\r\n\r\nimport ConfirmDelete from '../components/ParserResultsTable/ConfirmDelete';\r\nimport withAuth from '../components/Auth/component/WithAuth'\r\nimport Container from '../components/WidthContainer'\r\nimport AppMain from '../components/AppMain'\r\nimport ParserResultPagination from '../components/ParserResultsPagination'\r\nimport { fetchParserResults, deleteResult } from '../api'\r\n\r\nconst StyledTh = styled.th`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  border: solid 1px #ddd;\r\n  padding: 4px 8px;\r\n  :first-child {\r\n    padding-left: 8px;\r\n  }\r\n`\r\nconst StyledTd = styled.td`\r\n  text-align: center;\r\n  border: solid 1px #ddd;\r\n  padding: 0 8px;\r\n  :first-child {\r\n    padding-left: 8px;\r\n  }\r\n  button {\r\n    margin: 5px 10px;\r\n  }\r\n`\r\n\r\nclass ParsedPages extends Component {\r\n  state = {\r\n    items: [\r\n      {\r\n        id: 1,\r\n        url: '',\r\n        results: '',\r\n        parsed_at: '',\r\n        status: '',\r\n        error: [\r\n          {\r\n            code: null,\r\n            message: '',\r\n            recomendation: '',\r\n            errors: ['']\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    pagination: {},\r\n    deleteСonfirm: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getParserResult('/pages?page=1')\r\n  }\r\n\r\n  getParserResult = (url:string) => {\r\n    fetchParserResults(url)\r\n    .then(response => this.setParserResults(response))\r\n    .catch(error => console.log(error))\r\n  }\r\n\r\n  setParserResults = (data:any) => {\r\n    this.setState({\r\n      items: data.items,\r\n      pagination: data.pagination\r\n    })\r\n  }\r\n\r\n  deleteConfirmation = (id:number) => this.setState({deleteСonfirm: id})\r\n\r\n  deleteItem = (id:number) => {\r\n    deleteResult(id)\r\n    .then (result => {\r\n      if(result) {\r\n        this.setState({\r\n          items: [...this.state.items.filter(item => item.id !== id)],\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  cancelDeleting = () => this.setState({deleteСonfirm: null})\r\n\r\n  selectPage = (url:string) => this.getParserResult(url)\r\n\r\n  render() {\r\n    const {items, deleteСonfirm, pagination} = this.state\r\n    \r\n    return (\r\n      <AppMain>\r\n        <Container>\r\n          <table>\r\n            <caption>Table of processed pages of sites</caption>\r\n            <tbody>\r\n              <tr>\r\n                <StyledTh>id</StyledTh>\r\n                <StyledTh>url</StyledTh>\r\n                <StyledTh>dates</StyledTh>\r\n                <StyledTh>status</StyledTh>\r\n                <StyledTh>actions</StyledTh>\r\n              </tr>\r\n              {items.map(item => (\r\n                <tr key={item.id}>\r\n                  <StyledTd>{item.id}</StyledTd>\r\n                  <StyledTd>{item.url}</StyledTd>\r\n                  <StyledTd>{item.parsed_at}</StyledTd>\r\n                  <StyledTd>{item.status}</StyledTd>\r\n                  <StyledTd>\r\n                    <DropdownMenu\r\n                      trigger=\"Select action\"\r\n                      triggerType=\"button\"\r\n                      shouldFlip={false}\r\n                      position=\"bottom right\"\r\n                    >\r\n                      <DropdownItemGroup>\r\n                        <DropdownItem onClick={() => this.deleteConfirmation(item.id)}>\r\n                          delete\r\n                        </DropdownItem>\r\n                      </DropdownItemGroup>\r\n                    </DropdownMenu>\r\n                    {\r\n                      deleteСonfirm === item.id &&\r\n                      <ConfirmDelete \r\n                        itemId={item.id} \r\n                        deleteItem={this.deleteItem}\r\n                        cancelDeleting={this.cancelDeleting}\r\n                      />\r\n                    }\r\n                  </StyledTd>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          <ParserResultPagination pagination={pagination} selectPage={this.selectPage} />\r\n        </Container>\r\n      </AppMain>\r\n    )\r\n  }\r\n}\r\n \r\nexport default withAuth(ParsedPages)","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nimport AuthService from '../Auth/AuthService';\r\n\r\nconst LoginBtn = styled(Link)`\r\n  padding: 8px 30px;\r\n  font-size: 16px;\r\n  display: block;\r\n  background: #0052CC;\r\n  border-radius: 3px;\r\n  color: #fff;\r\n  transition: .2s;\r\n  &:hover {\r\n    text-decoration: none;\r\n    color: #fff;\r\n    background: #0065FF;\r\n  }\r\n  &:active, &:focus {\r\n    outline: none;\r\n  }\r\n`\r\nconst SignUpBtn = styled(LoginBtn)`\r\n  background: transparent;\r\n  border: none;\r\n  color: #1A3E73;\r\n  padding: 0;\r\n  margin-right: 15px;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    background: transparent;\r\n    color: #1A3E73;\r\n  }\r\n`\r\nconst Linkwrapp = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Menu = () => {\r\n  const Auth = new AuthService();\r\n\r\n  const handleLogOut = () => {\r\n    Auth.logout();\r\n  }\r\n\r\n  return (\r\n    <Linkwrapp>\r\n      {\r\n        Auth.loggedIn() ? (\r\n          <LoginBtn to=\"/login\" onClick={handleLogOut}>Sign out</LoginBtn>\r\n        ) : (\r\n          <>\r\n            <SignUpBtn to=\"/registration\">Sign Up</SignUpBtn>\r\n            <LoginBtn to=\"/login\">Sign In</LoginBtn>\r\n          </>\r\n        )\r\n      }\r\n    </Linkwrapp>\r\n  )\r\n}\r\n\r\nexport default withRouter(Menu)","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport NavLink from '../NavLink'\r\nimport AuthService from '../Auth/AuthService';\r\n\r\nconst StyledNav = styled.nav`\r\n  display: flex;\r\n`\r\n\r\nconst Nav = () => {\r\n  const Auth = new AuthService();\r\n\r\n  return (\r\n    Auth.loggedIn() &&\r\n    <StyledNav>\r\n      <NavLink to=\"/\">Home</NavLink>\r\n      <NavLink to=\"/parsed-pages\">Parsed pages</NavLink>\r\n    </StyledNav>\r\n  )\r\n}\r\n \r\nexport default withRouter(Nav)","import styled from 'styled-components'\r\n\r\nconst Logo = styled.div`\r\n  width: 70px;\r\n  height: 80px;\r\n  margin-right: 30px;\r\n  background: url('https://static.tildacdn.com/tild3732-6561-4536-a262-386339653136/full_logo.png');\r\n  background-size: cover;\r\n  background-position: right center;\r\n`\r\nexport default Logo","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Route, Switch, BrowserRouter } from 'react-router-dom'\r\n\r\nimport { LoginPage, ParserPage, ParsedPages, SignUpPage, EditorPage} from './pages/index.ts'\r\nimport Menu from './components/Menu'\r\nimport Nav from './components/Nav'\r\nimport Container from './components/WidthContainer'\r\nimport Logo from './components/Logo'\r\n\r\nconst Header = styled.header`\r\n  background: #fff;\r\n  position: fixed;\r\n  width: 100%;\r\n  z-index: 100;\r\n`\r\nconst HeaderContainer = styled(Container)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\nconst Wrapp = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Header>\r\n        <HeaderContainer>\r\n          <Wrapp>\r\n            <Logo />\r\n            <Nav />\r\n          </Wrapp>\r\n          <Menu />\r\n        </HeaderContainer>\r\n      </Header>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={ParserPage} />\r\n        <Route path=\"/login\" component={LoginPage} />\r\n        <Route path=\"/registration\" component={SignUpPage} />\r\n        <Route path=\"/editor\" component={EditorPage} />\r\n        <Route path=\"/parsed-pages\" component={ParsedPages} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport '@atlaskit/css-reset'\r\n\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}